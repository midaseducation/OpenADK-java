// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.instr;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  The work assigned to a student, which can comprise of learning resources, activities, and assessments.  It must have a student and a time attached to it.  SIF_Events are reported.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class Assignment extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public Assignment() {
		super( ADK.getSIFVersion(), InstrDTD.ASSIGNMENT );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId GUID assigned to assignment.
	 *  @param language 
	 *  @param assignmentTime Time structures for the assignment.
	 */
	public Assignment( String refId, LanguageCode language, AssignmentTime assignmentTime ) {
		super( ADK.getSIFVersion(), InstrDTD.ASSIGNMENT );
		this.setRefId(refId);
		this.setLanguage( language );
		this.setAssignmentTime(assignmentTime);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( InstrDTD.ASSIGNMENT_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { InstrDTD.ASSIGNMENT_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID assigned to assignment."</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.ASSIGNMENT_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID assigned to assignment."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setRefId( String value ) { 
		setFieldValue( InstrDTD.ASSIGNMENT_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>Language</code> attribute.
	 *
	 *  @return The <code>Language</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getLanguage() { 
		return getFieldValue( InstrDTD.ASSIGNMENT_LANGUAGE );
	}

	/**
	 *  Sets the value of the <code>Language</code> attribute.
	 *
	 *  @param value A constant defined by the <code>LanguageCode</code> class
	 *  @since 1.5r1
	 */
	public void setLanguage( LanguageCode value ) { 
		setField( InstrDTD.ASSIGNMENT_LANGUAGE, value );
	}

	/**
	 *  Sets the value of the <code>Language</code> attribute as a String.
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setLanguage( String value ) { 
		setField( InstrDTD.ASSIGNMENT_LANGUAGE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Students&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"GUID assigned to the student or students given this assignment."</i><p>
	 *
	 *  @param value A <code>Students</code> object
	 *  @since 1.5r1
	 */
	public void setStudents( Students value ) { 
		removeChild( InstrDTD.ASSIGNMENT_STUDENTS );
		addChild( InstrDTD.ASSIGNMENT_STUDENTS, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Students&gt;</code> child element.
	 *  This form of <code>setStudents</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setStudents</code>
	 *  that accepts a single <code>Students</code> object.
	 *
	 *  @param studentPersonalRefId GUID that identifies the student that this element refers to.
	 *  @since 1.5r1
	 */
	public void setStudents( StudentPersonalRefId studentPersonalRefId ) {
		removeChild( InstrDTD.ASSIGNMENT_STUDENTS);
		addChild( InstrDTD.ASSIGNMENT_STUDENTS, new Students( studentPersonalRefId ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Students&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"GUID assigned to the student or students given this assignment."</i><p>
	 *
	 *  @return A <code>Students</code> object
	 *  @since 1.5r1
	 */
	public Students getStudents() { 
		return (Students)getChild( InstrDTD.ASSIGNMENT_STUDENTS);
	}

	/**
	 *  Removes the <code>Students</code> child element previously created by calling <code>setStudents</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeStudents() { 
		removeChild( InstrDTD.ASSIGNMENT_STUDENTS );
	}

	/**
	 *  Gets the value of the <code>&lt;StaffPersonalRefId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"GUID assigned to the educator who gave the assignment."</i><p>
	 *
	 *  @return The <code>StaffPersonalRefId</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getStaffPersonalRefId() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.ASSIGNMENT_STAFFPERSONALREFID );
	}

	/**
	 *  Sets the value of the <code>&lt;StaffPersonalRefId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"GUID assigned to the educator who gave the assignment."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setStaffPersonalRefId( String value ) { 
		setFieldValue( InstrDTD.ASSIGNMENT_STAFFPERSONALREFID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;TechnicalRequirements&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Applications, OS, and network requirements for activity if applicable."</i><p>
	 *
	 *  @param value A <code>TechnicalRequirements</code> object
	 *  @since 1.5r1
	 */
	public void setTechnicalRequirements( TechnicalRequirements value ) { 
		removeChild( InstrDTD.ASSIGNMENT_TECHNICALREQUIREMENTS );
		addChild( InstrDTD.ASSIGNMENT_TECHNICALREQUIREMENTS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;TechnicalRequirements&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Applications, OS, and network requirements for activity if applicable."</i><p>
	 *
	 *  @return A <code>TechnicalRequirements</code> object
	 *  @since 1.5r1
	 */
	public TechnicalRequirements getTechnicalRequirements() { 
		return (TechnicalRequirements)getChild( InstrDTD.ASSIGNMENT_TECHNICALREQUIREMENTS);
	}

	/**
	 *  Removes the <code>TechnicalRequirements</code> child element previously created by calling <code>setTechnicalRequirements</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeTechnicalRequirements() { 
		removeChild( InstrDTD.ASSIGNMENT_TECHNICALREQUIREMENTS );
	}

	/**
	 *  Sets the value of the <code>&lt;EssentialMaterials&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Essential materials required to engage in the assignment."</i><p>
	 *
	 *  @param value A <code>EssentialMaterials</code> object
	 *  @since 1.5r1
	 */
	public void setEssentialMaterials( EssentialMaterials value ) { 
		removeChild( InstrDTD.ASSIGNMENT_ESSENTIALMATERIALS );
		addChild( InstrDTD.ASSIGNMENT_ESSENTIALMATERIALS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;EssentialMaterials&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Essential materials required to engage in the assignment."</i><p>
	 *
	 *  @return An <code>EssentialMaterials</code> object
	 *  @since 1.5r1
	 */
	public EssentialMaterials getEssentialMaterials() { 
		return (EssentialMaterials)getChild( InstrDTD.ASSIGNMENT_ESSENTIALMATERIALS);
	}

	/**
	 *  Removes the <code>EssentialMaterials</code> child element previously created by calling <code>setEssentialMaterials</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeEssentialMaterials() { 
		removeChild( InstrDTD.ASSIGNMENT_ESSENTIALMATERIALS );
	}

	/**
	 *  Gets the value of the <code>&lt;Title&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Descriptive name of the assignment."</i><p>
	 *
	 *  @return The <code>Title</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getTitle() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.ASSIGNMENT_TITLE );
	}

	/**
	 *  Sets the value of the <code>&lt;Title&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Descriptive name of the assignment."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setTitle( String value ) { 
		setFieldValue( InstrDTD.ASSIGNMENT_TITLE, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Preamble&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Description and context for the assignment."</i><p>
	 *
	 *  @return The <code>Preamble</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getPreamble() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.ASSIGNMENT_PREAMBLE );
	}

	/**
	 *  Sets the value of the <code>&lt;Preamble&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Description and context for the assignment."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setPreamble( String value ) { 
		setFieldValue( InstrDTD.ASSIGNMENT_PREAMBLE, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;LearningObjectives&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Description of the educational objectives of the assignment."</i><p>
	 *
	 *  @param value A <code>LearningObjectives</code> object
	 *  @since 1.5r1
	 */
	public void setLearningObjectives( LearningObjectives value ) { 
		removeChild( InstrDTD.ASSIGNMENT_LEARNINGOBJECTIVES );
		addChild( InstrDTD.ASSIGNMENT_LEARNINGOBJECTIVES, value);
	}

	/**
	 *  Gets the value of the <code>&lt;LearningObjectives&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Description of the educational objectives of the assignment."</i><p>
	 *
	 *  @return A <code>LearningObjectives</code> object
	 *  @since 1.5r1
	 */
	public LearningObjectives getLearningObjectives() { 
		return (LearningObjectives)getChild( InstrDTD.ASSIGNMENT_LEARNINGOBJECTIVES);
	}

	/**
	 *  Removes the <code>LearningObjectives</code> child element previously created by calling <code>setLearningObjectives</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeLearningObjectives() { 
		removeChild( InstrDTD.ASSIGNMENT_LEARNINGOBJECTIVES );
	}

	/**
	 *  Sets the value of the <code>&lt;LearningStandards&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Link from assignment to associated LearningStandardItem objects."</i><p>
	 *
	 *  @param value A <code>LearningStandards</code> object
	 *  @since 1.5r1
	 */
	public void setLearningStandards( LearningStandards value ) { 
		removeChild( InstrDTD.ASSIGNMENT_LEARNINGSTANDARDS );
		addChild( InstrDTD.ASSIGNMENT_LEARNINGSTANDARDS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;LearningStandards&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Link from assignment to associated LearningStandardItem objects."</i><p>
	 *
	 *  @return A <code>LearningStandards</code> object
	 *  @since 1.5r1
	 */
	public LearningStandards getLearningStandards() { 
		return (LearningStandards)getChild( InstrDTD.ASSIGNMENT_LEARNINGSTANDARDS);
	}

	/**
	 *  Removes the <code>LearningStandards</code> child element previously created by calling <code>setLearningStandards</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeLearningStandards() { 
		removeChild( InstrDTD.ASSIGNMENT_LEARNINGSTANDARDS );
	}

	/**
	 *  Sets the value of the <code>&lt;Prerequisites&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Skills or competencies the student must have to engage in assignment."</i><p>
	 *
	 *  @param value A <code>Prerequisites</code> object
	 *  @since 1.5r1
	 */
	public void setPrerequisites( Prerequisites value ) { 
		removeChild( InstrDTD.ASSIGNMENT_PREREQUISITES );
		addChild( InstrDTD.ASSIGNMENT_PREREQUISITES, value);
	}

	/**
	 *  Gets the value of the <code>&lt;Prerequisites&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Skills or competencies the student must have to engage in assignment."</i><p>
	 *
	 *  @return A <code>Prerequisites</code> object
	 *  @since 1.5r1
	 */
	public Prerequisites getPrerequisites() { 
		return (Prerequisites)getChild( InstrDTD.ASSIGNMENT_PREREQUISITES);
	}

	/**
	 *  Removes the <code>Prerequisites</code> child element previously created by calling <code>setPrerequisites</code>
	 *
	 *  @since 1.5r1
	 */
	public void removePrerequisites() { 
		removeChild( InstrDTD.ASSIGNMENT_PREREQUISITES );
	}

	/**
	 *  Sets the value of the <code>&lt;SourceObjects&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"GUID assigned to the source object.  The source object is the "thing" being assigned to a student."</i><p>
	 *
	 *  @param value A <code>SourceObjects</code> object
	 *  @since 1.5r1
	 */
	public void setSourceObjects( SourceObjects value ) { 
		removeChild( InstrDTD.ASSIGNMENT_SOURCEOBJECTS );
		addChild( InstrDTD.ASSIGNMENT_SOURCEOBJECTS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;SourceObjects&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"GUID assigned to the source object.  The source object is the "thing" being assigned to a student."</i><p>
	 *
	 *  @return A <code>SourceObjects</code> object
	 *  @since 1.5r1
	 */
	public SourceObjects getSourceObjects() { 
		return (SourceObjects)getChild( InstrDTD.ASSIGNMENT_SOURCEOBJECTS);
	}

	/**
	 *  Removes the <code>SourceObjects</code> child element previously created by calling <code>setSourceObjects</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeSourceObjects() { 
		removeChild( InstrDTD.ASSIGNMENT_SOURCEOBJECTS );
	}

	/**
	 *  Sets the value of the <code>&lt;AssignmentTime&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Time structures for the assignment."</i><p>
	 *
	 *  @param value A <code>AssignmentTime</code> object
	 *  @since 1.5r1
	 */
	public void setAssignmentTime( AssignmentTime value ) { 
		removeChild( InstrDTD.ASSIGNMENT_ASSIGNMENTTIME );
		addChild( InstrDTD.ASSIGNMENT_ASSIGNMENTTIME, value);
	}

	/**
	 *  Sets the value of the <code>&lt;AssignmentTime&gt;</code> child element.
	 *  This form of <code>setAssignmentTime</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setAssignmentTime</code>
	 *  that accepts a single <code>AssignmentTime</code> object.
	 *
	 *  @param startDate Date assignment is started.
	 *  @param dueDate Date assignment is due.
	 *  @since 1.5r1
	 */
	public void setAssignmentTime( Calendar startDate, Calendar dueDate ) {
		removeChild( InstrDTD.ASSIGNMENT_ASSIGNMENTTIME);
		addChild( InstrDTD.ASSIGNMENT_ASSIGNMENTTIME, new AssignmentTime( startDate, dueDate ) );
	}

	/**
	 *  Gets the value of the <code>&lt;AssignmentTime&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Time structures for the assignment."</i><p>
	 *
	 *  @return An <code>AssignmentTime</code> object
	 *  @since 1.5r1
	 */
	public AssignmentTime getAssignmentTime() { 
		return (AssignmentTime)getChild( InstrDTD.ASSIGNMENT_ASSIGNMENTTIME);
	}

	/**
	 *  Removes the <code>AssignmentTime</code> child element previously created by calling <code>setAssignmentTime</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeAssignmentTime() { 
		removeChild( InstrDTD.ASSIGNMENT_ASSIGNMENTTIME );
	}

	/**
	 *  Gets the value of the <code>&lt;MaxAttemptsAllowed&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The number attempts a student may make on this assignment. Assumed to be unlimited if omitted."</i><p>
	 *
	 *  @return The <code>MaxAttemptsAllowed</code> element of this object.
	 *  @since 1.5r1
	 */
	public Integer getMaxAttemptsAllowed() { 
		return (Integer) getSIFSimpleFieldValue( InstrDTD.ASSIGNMENT_MAXATTEMPTSALLOWED );
	}

	/**
	 *  Sets the value of the <code>&lt;MaxAttemptsAllowed&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The number attempts a student may make on this assignment. Assumed to be unlimited if omitted."</i><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 1.5r1
	 */
	public void setMaxAttemptsAllowed( Integer value ) { 
		setFieldValue( InstrDTD.ASSIGNMENT_MAXATTEMPTSALLOWED, new SIFInt( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;AddToGradeBookFlag&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Flag to prompt grade book processing."</i><p>
	 *
	 *  @return The <code>AddToGradeBookFlag</code> element of this object.
	 *  @since 1.5r1
	 */
	public Boolean getAddToGradeBookFlag() { 
		return (Boolean) getSIFSimpleFieldValue( InstrDTD.ASSIGNMENT_ADDTOGRADEBOOKFLAG );
	}

	/**
	 *  Sets the value of the <code>&lt;AddToGradeBookFlag&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Flag to prompt grade book processing."</i><p>
	 *
	 *  @param value A <code>Boolean</code> object
	 *  @since 1.5r1
	 */
	public void setAddToGradeBookFlag( Boolean value ) { 
		setFieldValue( InstrDTD.ASSIGNMENT_ADDTOGRADEBOOKFLAG, new SIFBoolean( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;SoftwareRequirementList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contains information about required software."</i><p>
	 *
	 *  @param value A <code>SoftwareRequirementList</code> object
	 *  @since 2.4
	 */
	public void setSoftwareRequirementList( SoftwareRequirementList value ) { 
		removeChild( InstrDTD.ASSIGNMENT_SOFTWAREREQUIREMENTLIST );
		addChild( InstrDTD.ASSIGNMENT_SOFTWAREREQUIREMENTLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;SoftwareRequirementList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contains information about required software."</i><p>
	 *
	 *  @return A <code>SoftwareRequirementList</code> object
	 *  @since 2.4
	 */
	public SoftwareRequirementList getSoftwareRequirementList() { 
		return (SoftwareRequirementList)getChild( InstrDTD.ASSIGNMENT_SOFTWAREREQUIREMENTLIST);
	}

	/**
	 *  Removes the <code>SoftwareRequirementList</code> child element previously created by calling <code>setSoftwareRequirementList</code>
	 *
	 *  @since 2.4
	 */
	public void removeSoftwareRequirementList() { 
		removeChild( InstrDTD.ASSIGNMENT_SOFTWAREREQUIREMENTLIST );
	}

}
