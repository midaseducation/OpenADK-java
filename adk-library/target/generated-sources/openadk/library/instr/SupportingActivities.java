// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.instr;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class SupportingActivities extends SIFKeyedList<ActivityRefId>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public SupportingActivities() {
		super( InstrDTD.SUPPORTINGACTIVITIES );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param activityRefId Links to Activity objects that may support the lesson
	 */
	public SupportingActivities( ActivityRefId activityRefId ) {
		super( InstrDTD.SUPPORTINGACTIVITIES );
		this.safeAddChild( InstrDTD.SUPPORTINGACTIVITIES_ACTIVITYREFID, activityRefId );
	}

	/**
	 *  Adds a new <code>&lt;ActivityRefId&gt;</code> repeatable element.
	 *  This form of <code>setActivityRefId</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setActivityRefId</code>
	 *  that accepts a single <code>ActivityRefId</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;ActivityRefId&gt; element
	 *  @since 1.5r1
	 */
	public void addActivityRefId( String value ) {
		addChild( InstrDTD.SUPPORTINGACTIVITIES_ACTIVITYREFID, new ActivityRefId( value ) );
	}

	/**
	 *  Removes an <code>ActivityRefId</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param value Identifies the ActivityRefId object to remove by its Value value
	 *  @since 1.5r1
	 */
	public void removeActivityRefId( String value ) { 
		removeChild( InstrDTD.SUPPORTINGACTIVITIES_ACTIVITYREFID, new String[] { value.toString() } );
	}

	/**
	 *  Gets an <code>ActivityRefId</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param value Identifies the ActivityRefId object to return by its "Value" attribute value
	 *  @return An <code>ActivityRefId</code> object
	 *  @since 1.5r1
	 */
	public ActivityRefId getActivityRefId( String value ) { 
		return (ActivityRefId)getChild( InstrDTD.SUPPORTINGACTIVITIES_ACTIVITYREFID, new String[] { value.toString() } );
	}

	/**
	 *  Gets all <code>ActivityRefId</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>ActivityRefId</code> objects
	 *  @since 1.5r1
	 */
	public ActivityRefId[] getActivityRefIds() {
		List<SIFElement> v = getChildList( InstrDTD.SUPPORTINGACTIVITIES_ACTIVITYREFID);
		ActivityRefId[] cvt = new ActivityRefId[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>ActivityRefId</code> objects. All existing 
	 * <code>ActivityRefId</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>ActivityRefIds</code>.
	 *
	 *  @since 1.5r1
	 */
	public void setActivityRefIds( ActivityRefId[] activityrefids ) {
		setChildren( InstrDTD.SUPPORTINGACTIVITIES_ACTIVITYREFID, activityrefids );
	}

}
