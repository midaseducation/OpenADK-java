// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.instr;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  This object contains information related to curriculum standards statements "standards" or "benchmarks" or the like within the document. This object primarily focuses upon state department curriculum standards, published curriculum standards and local education agency learning standards.  SIF_Events are reported.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class LearningStandardItem extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public LearningStandardItem() {
		super( ADK.getSIFVersion(), InstrDTD.LEARNINGSTANDARDITEM );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId GUID assigned to each statement at each level within the document hierarchy
	 *  @param language 
	 *  @param standardHierarchyLevel Integer assigned to each hierarchical level within standards tree. The top level is "1".
	 *  @param gradeLevels For a description of this element, see 5.1.12 GradeLevels.
	 *  @param learningStandardDocumentRefId The RefId of the item's parent LearningStandardDocument.
	 */
	public LearningStandardItem( String refId, LanguageCode language, StandardHierarchyLevel standardHierarchyLevel, GradeLevels gradeLevels, String learningStandardDocumentRefId ) {
		super( ADK.getSIFVersion(), InstrDTD.LEARNINGSTANDARDITEM );
		this.setRefId(refId);
		this.setLanguage( language );
		this.setStandardHierarchyLevel(standardHierarchyLevel);
		this.setGradeLevels(gradeLevels);
		this.setLearningStandardDocumentRefId(learningStandardDocumentRefId);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( InstrDTD.LEARNINGSTANDARDITEM_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { InstrDTD.LEARNINGSTANDARDITEM_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID assigned to each statement at each level within the document hierarchy"</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.LEARNINGSTANDARDITEM_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID assigned to each statement at each level within the document hierarchy"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setRefId( String value ) { 
		setFieldValue( InstrDTD.LEARNINGSTANDARDITEM_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>Language</code> attribute.
	 *
	 *  @return The <code>Language</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getLanguage() { 
		return getFieldValue( InstrDTD.LEARNINGSTANDARDITEM_LANGUAGE );
	}

	/**
	 *  Sets the value of the <code>Language</code> attribute.
	 *
	 *  @param value A constant defined by the <code>LanguageCode</code> class
	 *  @since 1.5r1
	 */
	public void setLanguage( LanguageCode value ) { 
		setField( InstrDTD.LEARNINGSTANDARDITEM_LANGUAGE, value );
	}

	/**
	 *  Sets the value of the <code>Language</code> attribute as a String.
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setLanguage( String value ) { 
		setField( InstrDTD.LEARNINGSTANDARDITEM_LANGUAGE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;StandardHierarchyLevel&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Integer assigned to each hierarchical level within standards tree. The top level is "1"."</i><p>
	 *
	 *  @param value A <code>StandardHierarchyLevel</code> object
	 *  @since 1.5r1
	 */
	public void setStandardHierarchyLevel( StandardHierarchyLevel value ) { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDHIERARCHYLEVEL );
		addChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDHIERARCHYLEVEL, value);
	}

	/**
	 *  Sets the value of the <code>&lt;StandardHierarchyLevel&gt;</code> child element.
	 *  This form of <code>setStandardHierarchyLevel</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setStandardHierarchyLevel</code>
	 *  that accepts a single <code>StandardHierarchyLevel</code> object.
	 *
	 *  @param description Used to describe what role this item is serving in the structure. Some standards describe their levels in terms of standard, strands, and topics. Others use standards, benchmarks, and indicators. This attribute names the level of the item.
	 *  @param number Integer assigned to each hierarchical level within standards tree. The top level is "1".
	 *  @since 1.5r1
	 */
	public void setStandardHierarchyLevel( String description, Integer number ) {
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDHIERARCHYLEVEL);
		addChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDHIERARCHYLEVEL, new StandardHierarchyLevel( description, number ) );
	}

	/**
	 *  Gets the value of the <code>&lt;StandardHierarchyLevel&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Integer assigned to each hierarchical level within standards tree. The top level is "1"."</i><p>
	 *
	 *  @return A <code>StandardHierarchyLevel</code> object
	 *  @since 1.5r1
	 */
	public StandardHierarchyLevel getStandardHierarchyLevel() { 
		return (StandardHierarchyLevel)getChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDHIERARCHYLEVEL);
	}

	/**
	 *  Removes the <code>StandardHierarchyLevel</code> child element previously created by calling <code>setStandardHierarchyLevel</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeStandardHierarchyLevel() { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDHIERARCHYLEVEL );
	}

	/**
	 *  Sets the value of the <code>&lt;StandardSettingBody&gt;</code> element.
	 *
	 *  @param value A <code>StandardSettingBody</code> object
	 *  @since 2.2
	 */
	public void setStandardSettingBody( StandardSettingBody value ) { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDSETTINGBODY );
		addChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDSETTINGBODY, value);
	}

	/**
	 *  Sets the value of the <code>&lt;StandardSettingBody&gt;</code> child element.
	 *  This form of <code>setStandardSettingBody</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setStandardSettingBody</code>
	 *  that accepts a single <code>StandardSettingBody</code> object.
	 *
	 *  @param country The country of the standard setting body.
	 *  @since 2.2
	 */
	public void setStandardSettingBody( CountryCode country ) {
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDSETTINGBODY);
		addChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDSETTINGBODY, new StandardSettingBody( country ) );
	}

	/**
	 *  Gets the value of the <code>&lt;StandardSettingBody&gt;</code> element.
	 *
	 *  @return A <code>StandardSettingBody</code> object
	 *  @since 2.2
	 */
	public StandardSettingBody getStandardSettingBody() { 
		return (StandardSettingBody)getChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDSETTINGBODY);
	}

	/**
	 *  Removes the <code>StandardSettingBody</code> child element previously created by calling <code>setStandardSettingBody</code>
	 *
	 *  @since 2.2
	 */
	public void removeStandardSettingBody() { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDSETTINGBODY );
	}

	/**
	 *  Gets the value of the <code>&lt;RefURI&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A URI that establishes uniqueness of the object instance."</i><p>
	 *
	 *  @return The <code>RefURI</code> element of this object.
	 *  @since 2.6
	 */
	public String getRefURI() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.LEARNINGSTANDARDITEM_REFURI );
	}

	/**
	 *  Sets the value of the <code>&lt;RefURI&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A URI that establishes uniqueness of the object instance."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setRefURI( String value ) { 
		setFieldValue( InstrDTD.LEARNINGSTANDARDITEM_REFURI, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;ShortName&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A short name for the item."</i><p>
	 *
	 *  @return The <code>ShortName</code> element of this object.
	 *  @since 2.6
	 */
	public String getShortName() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.LEARNINGSTANDARDITEM_SHORTNAME );
	}

	/**
	 *  Sets the value of the <code>&lt;ShortName&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A short name for the item."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setShortName( String value ) { 
		setFieldValue( InstrDTD.LEARNINGSTANDARDITEM_SHORTNAME, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;PredecessorItems&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"GUID assigned to the LearningStandardItem directly above it in the hierarchy tree. This is a repeatable element because a single granular item may relate to multiple parent levels of the hierarchy."</i><p>
	 *
	 *  @param value A <code>PredecessorItems</code> object
	 *  @since 1.5r1
	 */
	public void setPredecessorItems( PredecessorItems value ) { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_PREDECESSORITEMS );
		addChild( InstrDTD.LEARNINGSTANDARDITEM_PREDECESSORITEMS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;PredecessorItems&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"GUID assigned to the LearningStandardItem directly above it in the hierarchy tree. This is a repeatable element because a single granular item may relate to multiple parent levels of the hierarchy."</i><p>
	 *
	 *  @return A <code>PredecessorItems</code> object
	 *  @since 1.5r1
	 */
	public PredecessorItems getPredecessorItems() { 
		return (PredecessorItems)getChild( InstrDTD.LEARNINGSTANDARDITEM_PREDECESSORITEMS);
	}

	/**
	 *  Removes the <code>PredecessorItems</code> child element previously created by calling <code>setPredecessorItems</code>
	 *
	 *  @since 1.5r1
	 */
	public void removePredecessorItems() { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_PREDECESSORITEMS );
	}

	/**
	 *  Sets the value of the <code>&lt;StatementCodes&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"An alphanumeric ID code as defined by the organization to identify the statement."</i><p>
	 *
	 *  @param value A <code>StatementCodes</code> object
	 *  @since 1.5r1
	 */
	public void setStatementCodes( StatementCodes value ) { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_STATEMENTCODES );
		addChild( InstrDTD.LEARNINGSTANDARDITEM_STATEMENTCODES, value);
	}

	/**
	 *  Sets the value of the <code>&lt;StatementCodes&gt;</code> child element.
	 *  This form of <code>setStatementCodes</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setStatementCodes</code>
	 *  that accepts a single <code>StatementCodes</code> object.
	 *
	 *  @param statementCode An alphanumeric ID code as defined by the organization to identify the statement.
	 *  @since 1.5r1
	 */
	public void setStatementCodes( StatementCode statementCode ) {
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_STATEMENTCODES);
		addChild( InstrDTD.LEARNINGSTANDARDITEM_STATEMENTCODES, new StatementCodes( statementCode ) );
	}

	/**
	 *  Gets the value of the <code>&lt;StatementCodes&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"An alphanumeric ID code as defined by the organization to identify the statement."</i><p>
	 *
	 *  @return A <code>StatementCodes</code> object
	 *  @since 1.5r1
	 */
	public StatementCodes getStatementCodes() { 
		return (StatementCodes)getChild( InstrDTD.LEARNINGSTANDARDITEM_STATEMENTCODES);
	}

	/**
	 *  Removes the <code>StatementCodes</code> child element previously created by calling <code>setStatementCodes</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeStatementCodes() { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_STATEMENTCODES );
	}

	/**
	 *  Gets the value of the <code>&lt;DocumentVersion&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Identifies the version of the item that this object instance represents. Note that new versions of items must generate new RefIds and therefore a new object instance. This element is immutable in that once the object has been published with a value (other than blank) it must never be changed."</i><p>
	 *
	 *  @return The <code>DocumentVersion</code> element of this object.
	 *  @since 2.6
	 */
	public String getDocumentVersion() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.LEARNINGSTANDARDITEM_DOCUMENTVERSION );
	}

	/**
	 *  Sets the value of the <code>&lt;DocumentVersion&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Identifies the version of the item that this object instance represents. Note that new versions of items must generate new RefIds and therefore a new object instance. This element is immutable in that once the object has been published with a value (other than blank) it must never be changed."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setDocumentVersion( String value ) { 
		setFieldValue( InstrDTD.LEARNINGSTANDARDITEM_DOCUMENTVERSION, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;Statements&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The text of the "standard," or "benchmark.""</i><p>
	 *
	 *  @param value A <code>Statements</code> object
	 *  @since 1.5r1
	 */
	public void setStatements( Statements value ) { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_STATEMENTS );
		addChild( InstrDTD.LEARNINGSTANDARDITEM_STATEMENTS, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Statements&gt;</code> child element.
	 *  This form of <code>setStatements</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setStatements</code>
	 *  that accepts a single <code>Statements</code> object.
	 *
	 *  @param statement The text of the "standard," or "benchmark."
	 *  @since 1.5r1
	 */
	public void setStatements( Statement statement ) {
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_STATEMENTS);
		addChild( InstrDTD.LEARNINGSTANDARDITEM_STATEMENTS, new Statements( statement ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Statements&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The text of the "standard," or "benchmark.""</i><p>
	 *
	 *  @return A <code>Statements</code> object
	 *  @since 1.5r1
	 */
	public Statements getStatements() { 
		return (Statements)getChild( InstrDTD.LEARNINGSTANDARDITEM_STATEMENTS);
	}

	/**
	 *  Removes the <code>Statements</code> child element previously created by calling <code>setStatements</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeStatements() { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_STATEMENTS );
	}

	/**
	 *  Gets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A text decription of the item"</i><p>
	 *
	 *  @return The <code>Description</code> element of this object.
	 *  @since 2.6
	 */
	public String getDescription() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.LEARNINGSTANDARDITEM_DESCRIPTION );
	}

	/**
	 *  Sets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A text decription of the item"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setDescription( String value ) { 
		setFieldValue( InstrDTD.LEARNINGSTANDARDITEM_DESCRIPTION, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;GradeLevels&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"For a description of this element, see 5.1.12 GradeLevels."</i><p>
	 *
	 *  @param value A <code>GradeLevels</code> object
	 *  @since 1.5r1
	 */
	public void setGradeLevels( GradeLevels value ) { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_GRADELEVELS );
		addChild( InstrDTD.LEARNINGSTANDARDITEM_GRADELEVELS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;GradeLevels&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"For a description of this element, see 5.1.12 GradeLevels."</i><p>
	 *
	 *  @return A <code>GradeLevels</code> object
	 *  @since 1.5r1
	 */
	public GradeLevels getGradeLevels() { 
		return (GradeLevels)getChild( InstrDTD.LEARNINGSTANDARDITEM_GRADELEVELS);
	}

	/**
	 *  Removes the <code>GradeLevels</code> child element previously created by calling <code>setGradeLevels</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeGradeLevels() { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_GRADELEVELS );
	}

	/**
	 *  Sets the value of the <code>&lt;SubjectArea&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"For a description of this element, see 5.1.30 SubjectArea."</i><p>
	 *
	 *  @param value A <code>SubjectArea</code> object
	 *  @since 1.5r1
	 */
	public void setSubjectArea( SubjectArea value ) { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_SUBJECTAREA );
		addChild( InstrDTD.LEARNINGSTANDARDITEM_SUBJECTAREA, value);
	}

	/**
	 *  Sets the value of the <code>&lt;SubjectArea&gt;</code> child element.
	 *  This form of <code>setSubjectArea</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setSubjectArea</code>
	 *  that accepts a single <code>SubjectArea</code> object.
	 *
	 *  @param code The subject area code (i.e. the first two digits of the course classification code)
	 *  @since 1.5r1
	 */
	public void setSubjectArea( String code ) {
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_SUBJECTAREA);
		addChild( InstrDTD.LEARNINGSTANDARDITEM_SUBJECTAREA, new SubjectArea( code ) );
	}

	/**
	 *  Gets the value of the <code>&lt;SubjectArea&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"For a description of this element, see 5.1.30 SubjectArea."</i><p>
	 *
	 *  @return A <code>SubjectArea</code> object
	 *  @since 1.5r1
	 */
	public SubjectArea getSubjectArea() { 
		return (SubjectArea)getChild( InstrDTD.LEARNINGSTANDARDITEM_SUBJECTAREA);
	}

	/**
	 *  Removes the <code>SubjectArea</code> child element previously created by calling <code>setSubjectArea</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeSubjectArea() { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_SUBJECTAREA );
	}

	/**
	 *  Gets the value of the <code>&lt;LearningStandardDocumentRefId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The RefId of the item's parent LearningStandardDocument."</i><p>
	 *
	 *  @return The <code>LearningStandardDocumentRefId</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getLearningStandardDocumentRefId() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.LEARNINGSTANDARDITEM_LEARNINGSTANDARDDOCUMENTREFID );
	}

	/**
	 *  Sets the value of the <code>&lt;LearningStandardDocumentRefId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The RefId of the item's parent LearningStandardDocument."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setLearningStandardDocumentRefId( String value ) { 
		setFieldValue( InstrDTD.LEARNINGSTANDARDITEM_LEARNINGSTANDARDDOCUMENTREFID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;RelatedLearningStandardItems&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A relationship between the current standard item and another standard item."</i><p>
	 *
	 *  @param value A <code>RelatedLearningStandardItems</code> object
	 *  @since 2.1
	 */
	public void setRelatedLearningStandardItems( RelatedLearningStandardItems value ) { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_RELATEDLEARNINGSTANDARDITEMS );
		addChild( InstrDTD.LEARNINGSTANDARDITEM_RELATEDLEARNINGSTANDARDITEMS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;RelatedLearningStandardItems&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A relationship between the current standard item and another standard item."</i><p>
	 *
	 *  @return A <code>RelatedLearningStandardItems</code> object
	 *  @since 2.1
	 */
	public RelatedLearningStandardItems getRelatedLearningStandardItems() { 
		return (RelatedLearningStandardItems)getChild( InstrDTD.LEARNINGSTANDARDITEM_RELATEDLEARNINGSTANDARDITEMS);
	}

	/**
	 *  Removes the <code>RelatedLearningStandardItems</code> child element previously created by calling <code>setRelatedLearningStandardItems</code>
	 *
	 *  @since 2.1
	 */
	public void removeRelatedLearningStandardItems() { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_RELATEDLEARNINGSTANDARDITEMS );
	}

	/**
	 *  Sets the value of the <code>&lt;StandardIdentifier&gt;</code> element.
	 *
	 *  @param value A <code>StandardIdentifier</code> object
	 *  @since 2.2
	 */
	public void setStandardIdentifier( StandardIdentifier value ) { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDIDENTIFIER );
		addChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDIDENTIFIER, value);
	}

	/**
	 *  Sets the value of the <code>&lt;StandardIdentifier&gt;</code> child element.
	 *  This form of <code>setStandardIdentifier</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setStandardIdentifier</code>
	 *  that accepts a single <code>StandardIdentifier</code> object.
	 *
	 *  @param yearCreated This represents the year that this specific learning standard was created.  This is important to indicate as standards are updated to reflect the appropriate year it was created. This would be assigned and unique to the standard setting body.
	 *  @param subjectArea This represents the subject or content area this learning standard addresses. This would be assigned and unique to the standard setting body.\
	 *  @param standardNumber This is the specific number of the standard.  For example, if the subject is mathematics and this standard is Patterns, Functions and Algebra, this would be StandardNumber 1. This would be assigned and unique to the standard setting body.
	 *  @param gradeLevels This represents the grade level(s) this specific learning standard will address. This may be addressed in different ways.  Some states have a grade level that covers several grades and others have just one grade. This would be assigned and unique to the standard setting body.
	 *  @param organization Name of organization represented by the document, i.e., "National Council of Teachers of Mathematics (NCTM)," "Washington," "Seattle School District." This is the name of the organization that has this AlternateIdentificationCode. This should be a text field.
	 *  @since 2.2
	 */
	public void setStandardIdentifier( Integer yearCreated, SubjectArea subjectArea, String standardNumber, GradeLevels gradeLevels, String organization ) {
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDIDENTIFIER);
		addChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDIDENTIFIER, new StandardIdentifier( yearCreated, subjectArea, standardNumber, gradeLevels, organization ) );
	}

	/**
	 *  Gets the value of the <code>&lt;StandardIdentifier&gt;</code> element.
	 *
	 *  @return A <code>StandardIdentifier</code> object
	 *  @since 2.2
	 */
	public StandardIdentifier getStandardIdentifier() { 
		return (StandardIdentifier)getChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDIDENTIFIER);
	}

	/**
	 *  Removes the <code>StandardIdentifier</code> child element previously created by calling <code>setStandardIdentifier</code>
	 *
	 *  @since 2.2
	 */
	public void removeStandardIdentifier() { 
		removeChild( InstrDTD.LEARNINGSTANDARDITEM_STANDARDIDENTIFIER );
	}

	/**
	 *  Gets the value of the <code>&lt;Level4&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This is the second to most granular level of the learning or performance standard associated with the grade level."</i><p>
	 *
	 *  @return The <code>Level4</code> element of this object.
	 *  @since 2.4
	 */
	public String getLevel4() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.LEARNINGSTANDARDITEM_LEVEL4 );
	}

	/**
	 *  Sets the value of the <code>&lt;Level4&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This is the second to most granular level of the learning or performance standard associated with the grade level."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.4
	 */
	public void setLevel4( String value ) { 
		setFieldValue( InstrDTD.LEARNINGSTANDARDITEM_LEVEL4, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Level5&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This is the most granular level of the learning or performance standard associated with the grade level."</i><p>
	 *
	 *  @return The <code>Level5</code> element of this object.
	 *  @since 2.4
	 */
	public String getLevel5() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.LEARNINGSTANDARDITEM_LEVEL5 );
	}

	/**
	 *  Sets the value of the <code>&lt;Level5&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This is the most granular level of the learning or performance standard associated with the grade level."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.4
	 */
	public void setLevel5( String value ) { 
		setFieldValue( InstrDTD.LEARNINGSTANDARDITEM_LEVEL5, new SIFString( value ), value );
	}

}
