// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.instr;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  A lesson or activity-sized portion of a resource.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class Component extends SIFElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public Component() {
		super( InstrDTD.COMPONENT );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param resourceComponentRefId GUID for resource component
	 *  @param name Name of learning resource component within the resource, i.e. "Chapter 1, Section 4.
	 *  @param reference Description of where ResourceComponent is located within resource or in general, i.e. "Section 4, pages 32-38," or URL string, or whatever locator is appropriate for media.
	 */
	public Component( String resourceComponentRefId, String name, String reference ) {
		super( InstrDTD.COMPONENT );
		this.setResourceComponentRefId(resourceComponentRefId);
		this.setName(name);
		this.setReference(reference);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		StringBuilder b = new StringBuilder();
		b.append( getFieldValue( InstrDTD.COMPONENT_NAME ) );
		b.append('.');
		b.append( getFieldValue( InstrDTD.COMPONENT_REFERENCE ) );
		return b.toString();
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { InstrDTD.COMPONENT_NAME, InstrDTD.COMPONENT_REFERENCE };
	}

	/**
	 *  Gets the value of the <code>ResourceComponentRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID for resource component"</i><p>
	 *
	 *  @return The <code>ResourceComponentRefId</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getResourceComponentRefId() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.COMPONENT_RESOURCECOMPONENTREFID );
	}

	/**
	 *  Sets the value of the <code>ResourceComponentRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID for resource component"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setResourceComponentRefId( String value ) { 
		setFieldValue( InstrDTD.COMPONENT_RESOURCECOMPONENTREFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Name of learning resource component within the resource, i.e. "Chapter 1, Section 4."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"ComponentName"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Name"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>Name</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getName() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.COMPONENT_NAME );
	}

	/**
	 *  Sets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Name of learning resource component within the resource, i.e. "Chapter 1, Section 4."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"ComponentName"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Name"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setName( String value ) { 
		setFieldValue( InstrDTD.COMPONENT_NAME, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Reference&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Description of where ResourceComponent is located within resource or in general, i.e. "Section 4, pages 32-38," or URL string, or whatever locator is appropriate for media."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"ComponentReference"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Reference"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>Reference</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getReference() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.COMPONENT_REFERENCE );
	}

	/**
	 *  Sets the value of the <code>&lt;Reference&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Description of where ResourceComponent is located within resource or in general, i.e. "Section 4, pages 32-38," or URL string, or whatever locator is appropriate for media."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"ComponentReference"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Reference"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setReference( String value ) { 
		setFieldValue( InstrDTD.COMPONENT_REFERENCE, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Description of ResourceComponent, i.e. "Discover how changing the scale of a map can either increase or decrease the level of detail you see.""</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"ComponentDescription"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Description"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>Description</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getDescription() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.COMPONENT_DESCRIPTION );
	}

	/**
	 *  Sets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Description of ResourceComponent, i.e. "Discover how changing the scale of a map can either increase or decrease the level of detail you see.""</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"ComponentDescription"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Description"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setDescription( String value ) { 
		setFieldValue( InstrDTD.COMPONENT_DESCRIPTION, new SIFString( value ), value );
	}

	/**
	 *  Adds a new <code>&lt;Strategies&gt;</code> child element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Teaching/learning strategies uses in the learning resource. One per element."</i><p>
	 *
	 *  @param value A <code>Strategies</code> object
	 *  @since 1.5r1
	 */
	public void addStrategies( Strategies value ) { 
		addChild( InstrDTD.COMPONENT_STRATEGIES, value);
	}

	/**
	 *  Gets all <code>Strategies</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>Strategies</code> objects
	 *  @since 1.5r1
	 */
	public Strategies[] getStrategieses() {
		List<SIFElement> v = getChildList( InstrDTD.COMPONENT_STRATEGIES);
		Strategies[] cvt = new Strategies[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>Strategies</code> objects. All existing 
	 * <code>Strategies</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>Strategieses</code>.
	 *
	 *  @since 1.5r1
	 */
	public void setStrategieses( Strategies[] strategieses ) {
		setChildren( InstrDTD.COMPONENT_STRATEGIES, strategieses );
	}

	/**
	 *  Sets the value of the <code>&lt;AssociatedObjects&gt;</code> element.
	 *
	 *  @param value A <code>AssociatedObjects</code> object
	 *  @since 1.5r1
	 */
	public void setAssociatedObjects( AssociatedObjects value ) { 
		removeChild( InstrDTD.COMPONENT_ASSOCIATEDOBJECTS );
		addChild( InstrDTD.COMPONENT_ASSOCIATEDOBJECTS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;AssociatedObjects&gt;</code> element.
	 *
	 *  @return An <code>AssociatedObjects</code> object
	 *  @since 1.5r1
	 */
	public AssociatedObjects getAssociatedObjects() { 
		return (AssociatedObjects)getChild( InstrDTD.COMPONENT_ASSOCIATEDOBJECTS);
	}

	/**
	 *  Removes the <code>AssociatedObjects</code> child element previously created by calling <code>setAssociatedObjects</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeAssociatedObjects() { 
		removeChild( InstrDTD.COMPONENT_ASSOCIATEDOBJECTS );
	}

}
