// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.instr;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class SourceAuthor extends SIFElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public SourceAuthor() {
		super( InstrDTD.SOURCEAUTHOR );
	}

	/**
	 *  Sets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Name of the author."</i><p>
	 *
	 *  @param value A <code>Name</code> object
	 *  @since 1.5r1
	 */
	public void setName( Name value ) { 
		removeChild( InstrDTD.SOURCEAUTHOR_NAME );
		addChild( InstrDTD.SOURCEAUTHOR_NAME, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Name&gt;</code> child element.
	 *  This form of <code>setName</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setName</code>
	 *  that accepts a single <code>Name</code> object.
	 *
	 *  @param type Code that specifies what type of name this is.  If unsure, use 04.
	 *  @param lastName The last name.
	 *  @param firstName The first name.
	 *  @since 1.5r1
	 */
	public void setName( NameType type, String lastName, String firstName ) {
		removeChild( InstrDTD.SOURCEAUTHOR_NAME);
		addChild( InstrDTD.SOURCEAUTHOR_NAME, new Name( type, lastName, firstName ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Name of the author."</i><p>
	 *
	 *  @return A <code>Name</code> object
	 *  @since 1.5r1
	 */
	public Name getName() { 
		return (Name)getChild( InstrDTD.SOURCEAUTHOR_NAME);
	}

	/**
	 *  Removes the <code>Name</code> child element previously created by calling <code>setName</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeName() { 
		removeChild( InstrDTD.SOURCEAUTHOR_NAME );
	}

	/**
	 *  Gets the value of the <code>&lt;Organization&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Organization name."</i><p>
	 *
	 *  @return The <code>Organization</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getOrganization() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.SOURCEAUTHOR_ORGANIZATION );
	}

	/**
	 *  Sets the value of the <code>&lt;Organization&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Organization name."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setOrganization( String value ) { 
		setFieldValue( InstrDTD.SOURCEAUTHOR_ORGANIZATION, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;Address&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Address of the author."</i><p>
	 *
	 *  @param value A <code>Address</code> object
	 *  @since 1.5r1
	 */
	public void setAddress( Address value ) { 
		removeChild( InstrDTD.SOURCEAUTHOR_ADDRESS );
		addChild( InstrDTD.SOURCEAUTHOR_ADDRESS, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Address&gt;</code> child element.
	 *  This form of <code>setAddress</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setAddress</code>
	 *  that accepts a single <code>Address</code> object.
	 *
	 *  @param type Code that defines the location of the address.  Note:  A subset of specific valid values for each instance in a data object may be listed in that object.
	 *  @param street The street part of the address
	 *  @param city The city part of the address.
	 *  @param stateProvince The state or province code.
	 *  @param country The country code.
	 *  @param postalCode The ZIP/postal code.
	 *  @since 1.5r1
	 */
	public void setAddress( AddressType type, Street street, String city, StatePrCode stateProvince, CountryCode country, String postalCode ) {
		removeChild( InstrDTD.SOURCEAUTHOR_ADDRESS);
		addChild( InstrDTD.SOURCEAUTHOR_ADDRESS, new Address( type, street, city, stateProvince, country, postalCode ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Address&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Address of the author."</i><p>
	 *
	 *  @return An <code>Address</code> object
	 *  @since 1.5r1
	 */
	public Address getAddress() { 
		return (Address)getChild( InstrDTD.SOURCEAUTHOR_ADDRESS);
	}

	/**
	 *  Removes the <code>Address</code> child element previously created by calling <code>setAddress</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeAddress() { 
		removeChild( InstrDTD.SOURCEAUTHOR_ADDRESS );
	}

	/**
	 *  Sets the value of the <code>&lt;Email&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Email address of the author."</i><p>
	 *
	 *  @param value A <code>Email</code> object
	 *  @since 1.5r1
	 */
	public void setEmail( Email value ) { 
		removeChild( InstrDTD.SOURCEAUTHOR_EMAIL );
		addChild( InstrDTD.SOURCEAUTHOR_EMAIL, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Email&gt;</code> child element.
	 *  This form of <code>setEmail</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setEmail</code>
	 *  that accepts a single <code>Email</code> object.
	 *
	 *  @param type This attribute specifies the type of e-mail address.
	 *  @param value Gets or sets the content value of the &lt;Email&gt; element
	 *  @since 1.5r1
	 */
	public void setEmail( EmailType type, String value ) {
		removeChild( InstrDTD.SOURCEAUTHOR_EMAIL);
		addChild( InstrDTD.SOURCEAUTHOR_EMAIL, new Email( type, value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Email&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Email address of the author."</i><p>
	 *
	 *  @return An <code>Email</code> object
	 *  @since 1.5r1
	 */
	public Email getEmail() { 
		return (Email)getChild( InstrDTD.SOURCEAUTHOR_EMAIL);
	}

	/**
	 *  Removes the <code>Email</code> child element previously created by calling <code>setEmail</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeEmail() { 
		removeChild( InstrDTD.SOURCEAUTHOR_EMAIL );
	}

}
