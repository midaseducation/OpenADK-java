// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.instr;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class Components extends SIFList<Component>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public Components() {
		super( InstrDTD.COMPONENTS );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param component 
	 */
	public Components( Component component ) {
		super( InstrDTD.COMPONENTS );
		this.safeAddChild( InstrDTD.COMPONENTS_COMPONENT, component );
	}

	/**
	 *  Adds a new <code>&lt;Component&gt;</code> repeatable element.
	 *  This form of <code>setComponent</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setComponent</code>
	 *  that accepts a single <code>Component</code> object.
	 *
	 *  @param resourceComponentRefId GUID for resource component
	 *  @param name Name of learning resource component within the resource, i.e. "Chapter 1, Section 4.
	 *  @param reference Description of where ResourceComponent is located within resource or in general, i.e. "Section 4, pages 32-38," or URL string, or whatever locator is appropriate for media.
	 *  @since 1.5r1
	 */
	public void addComponent( String resourceComponentRefId, String name, String reference ) {
		addChild( InstrDTD.COMPONENTS_COMPONENT, new Component( resourceComponentRefId, name, reference ) );
	}

	/**
	 *  Removes a <code>Component</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param name Identifies the Component object to remove by its Name value
	 *  @param reference Identifies the Component object to remove by its Reference value
	 *  @since 1.5r1
	 */
	public void removeComponent( String name, String reference ) { 
		removeChild( InstrDTD.COMPONENTS_COMPONENT, new String[] { name.toString(),reference.toString() } );
	}

	/**
	 *  Gets a <code>Component</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param name Identifies the Component object to return by its "Name" attribute value
	 *  @param reference Identifies the Component object to return by its "Reference" attribute value
	 *  @return A <code>Component</code> object
	 *  @since 1.5r1
	 */
	public Component getComponent( String name, String reference ) { 
		return (Component)getChild( InstrDTD.COMPONENTS_COMPONENT, new String[] { name.toString(),reference.toString() } );
	}

	/**
	 *  Gets all <code>Component</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>Component</code> objects
	 *  @since 1.5r1
	 */
	public Component[] getComponents() {
		List<SIFElement> v = getChildList( InstrDTD.COMPONENTS_COMPONENT);
		Component[] cvt = new Component[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>Component</code> objects. All existing 
	 * <code>Component</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>Components</code>.
	 *
	 *  @since 1.5r1
	 */
	public void setComponents( Component[] components ) {
		setChildren( InstrDTD.COMPONENTS_COMPONENT, components );
	}

}
