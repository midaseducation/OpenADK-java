// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.instr;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.1
 */
public class LearningResourcePackage extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public LearningResourcePackage() {
		super( ADK.getSIFVersion(), InstrDTD.LEARNINGRESOURCEPACKAGE );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId A wrapper for any external learning content to be transmitted across a SIF Zone.
	 */
	public LearningResourcePackage( String refId ) {
		super( ADK.getSIFVersion(), InstrDTD.LEARNINGRESOURCEPACKAGE );
		this.setRefId(refId);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( InstrDTD.LEARNINGRESOURCEPACKAGE_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { InstrDTD.LEARNINGRESOURCEPACKAGE_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"A wrapper for any external learning content to be transmitted across a SIF Zone."</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 2.1
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.LEARNINGRESOURCEPACKAGE_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"A wrapper for any external learning content to be transmitted across a SIF Zone."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.1
	 */
	public void setRefId( String value ) { 
		setFieldValue( InstrDTD.LEARNINGRESOURCEPACKAGE_REFID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;XMLData&gt;</code> element.
	 *
	 *  @param value A <code>XMLData</code> object
	 *  @since 2.1
	 */
	public void setXMLData( XMLData value ) { 
		removeChild( InstrDTD.LEARNINGRESOURCEPACKAGE_XMLDATA );
		addChild( InstrDTD.LEARNINGRESOURCEPACKAGE_XMLDATA, value);
	}

	/**
	 *  Gets the value of the <code>&lt;XMLData&gt;</code> element.
	 *
	 *  @return A <code>XMLData</code> object
	 *  @since 2.1
	 */
	public XMLData getXMLData() { 
		return (XMLData)getChild( InstrDTD.LEARNINGRESOURCEPACKAGE_XMLDATA);
	}

	/**
	 *  Removes the <code>XMLData</code> child element previously created by calling <code>setXMLData</code>
	 *
	 *  @since 2.1
	 */
	public void removeXMLData() { 
		removeChild( InstrDTD.LEARNINGRESOURCEPACKAGE_XMLDATA );
	}

	/**
	 *  Sets the value of the <code>&lt;TextData&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contains arbitrary text, encoded in UTF-8."</i><p>
	 *
	 *  @param value A <code>TextData</code> object
	 *  @since 2.1
	 */
	public void setTextData( TextData value ) { 
		removeChild( InstrDTD.LEARNINGRESOURCEPACKAGE_TEXTDATA );
		addChild( InstrDTD.LEARNINGRESOURCEPACKAGE_TEXTDATA, value);
	}

	/**
	 *  Sets the value of the <code>&lt;TextData&gt;</code> child element.
	 *  This form of <code>setTextData</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setTextData</code>
	 *  that accepts a single <code>TextData</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;TextData&gt; element
	 *  @since 2.1
	 */
	public void setTextData( String value ) {
		removeChild( InstrDTD.LEARNINGRESOURCEPACKAGE_TEXTDATA);
		addChild( InstrDTD.LEARNINGRESOURCEPACKAGE_TEXTDATA, new TextData( value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;TextData&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contains arbitrary text, encoded in UTF-8."</i><p>
	 *
	 *  @return A <code>TextData</code> object
	 *  @since 2.1
	 */
	public TextData getTextData() { 
		return (TextData)getChild( InstrDTD.LEARNINGRESOURCEPACKAGE_TEXTDATA);
	}

	/**
	 *  Removes the <code>TextData</code> child element previously created by calling <code>setTextData</code>
	 *
	 *  @since 2.1
	 */
	public void removeTextData() { 
		removeChild( InstrDTD.LEARNINGRESOURCEPACKAGE_TEXTDATA );
	}

	/**
	 *  Sets the value of the <code>&lt;BinaryData&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contains the base64Binary encoding of binary or text data not encoded in UTF-8."</i><p>
	 *
	 *  @param value A <code>BinaryData</code> object
	 *  @since 2.1
	 */
	public void setBinaryData( BinaryData value ) { 
		removeChild( InstrDTD.LEARNINGRESOURCEPACKAGE_BINARYDATA );
		addChild( InstrDTD.LEARNINGRESOURCEPACKAGE_BINARYDATA, value);
	}

	/**
	 *  Sets the value of the <code>&lt;BinaryData&gt;</code> child element.
	 *  This form of <code>setBinaryData</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setBinaryData</code>
	 *  that accepts a single <code>BinaryData</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;BinaryData&gt; element
	 *  @since 2.1
	 */
	public void setBinaryData( String value ) {
		removeChild( InstrDTD.LEARNINGRESOURCEPACKAGE_BINARYDATA);
		addChild( InstrDTD.LEARNINGRESOURCEPACKAGE_BINARYDATA, new BinaryData( value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;BinaryData&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contains the base64Binary encoding of binary or text data not encoded in UTF-8."</i><p>
	 *
	 *  @return A <code>BinaryData</code> object
	 *  @since 2.1
	 */
	public BinaryData getBinaryData() { 
		return (BinaryData)getChild( InstrDTD.LEARNINGRESOURCEPACKAGE_BINARYDATA);
	}

	/**
	 *  Removes the <code>BinaryData</code> child element previously created by calling <code>setBinaryData</code>
	 *
	 *  @since 2.1
	 */
	public void removeBinaryData() { 
		removeChild( InstrDTD.LEARNINGRESOURCEPACKAGE_BINARYDATA );
	}

	/**
	 *  Sets the value of the <code>&lt;Reference&gt;</code> element.
	 *
	 *  @param value A <code>Reference</code> object
	 *  @since 2.1
	 */
	public void setReference( Reference value ) { 
		removeChild( InstrDTD.LEARNINGRESOURCEPACKAGE_REFERENCE );
		addChild( InstrDTD.LEARNINGRESOURCEPACKAGE_REFERENCE, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Reference&gt;</code> child element.
	 *  This form of <code>setReference</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setReference</code>
	 *  that accepts a single <code>Reference</code> object.
	 *
	 *  @param url Location of external content.
	 *  @param value Gets or sets the content value of the &lt;Reference&gt; element
	 *  @since 2.1
	 */
	public void setReference( String url, String value ) {
		removeChild( InstrDTD.LEARNINGRESOURCEPACKAGE_REFERENCE);
		addChild( InstrDTD.LEARNINGRESOURCEPACKAGE_REFERENCE, new Reference( url, value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Reference&gt;</code> element.
	 *
	 *  @return A <code>Reference</code> object
	 *  @since 2.1
	 */
	public Reference getReference() { 
		return (Reference)getChild( InstrDTD.LEARNINGRESOURCEPACKAGE_REFERENCE);
	}

	/**
	 *  Removes the <code>Reference</code> child element previously created by calling <code>setReference</code>
	 *
	 *  @since 2.1
	 */
	public void removeReference() { 
		removeChild( InstrDTD.LEARNINGRESOURCEPACKAGE_REFERENCE );
	}

}
