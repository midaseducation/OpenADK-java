// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.instr;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  An object designed to contain instructional objects such as units, lessons, activities, and assessments joined together under a particular topic and/or duration.  SIF_Events are reported.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class CurriculumStructure extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public CurriculumStructure() {
		super( ADK.getSIFVersion(), InstrDTD.CURRICULUMSTRUCTURE );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId GUID for this particular object.
	 *  @param language 
	 *  @param titles Name of this type of curriculum object (e.g., "American Revolutionary War")
	 *  @param curriculumHierarchyLevel Integer assigned to each hierarchical level within the CurriculumStructure tree. The top level is "1".
	 */
	public CurriculumStructure( String refId, LanguageCode language, Title titles, CurriculumHierarchyLevel curriculumHierarchyLevel ) {
		super( ADK.getSIFVersion(), InstrDTD.CURRICULUMSTRUCTURE );
		this.setRefId(refId);
		this.setLanguage( language );
		this.setTitles( new Titles( titles ));
		this.setCurriculumHierarchyLevel(curriculumHierarchyLevel);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( InstrDTD.CURRICULUMSTRUCTURE_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { InstrDTD.CURRICULUMSTRUCTURE_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID for this particular object."</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.CURRICULUMSTRUCTURE_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID for this particular object."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setRefId( String value ) { 
		setFieldValue( InstrDTD.CURRICULUMSTRUCTURE_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>Language</code> attribute.
	 *
	 *  @return The <code>Language</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getLanguage() { 
		return getFieldValue( InstrDTD.CURRICULUMSTRUCTURE_LANGUAGE );
	}

	/**
	 *  Sets the value of the <code>Language</code> attribute.
	 *
	 *  @param value A constant defined by the <code>LanguageCode</code> class
	 *  @since 1.5r1
	 */
	public void setLanguage( LanguageCode value ) { 
		setField( InstrDTD.CURRICULUMSTRUCTURE_LANGUAGE, value );
	}

	/**
	 *  Sets the value of the <code>Language</code> attribute as a String.
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setLanguage( String value ) { 
		setField( InstrDTD.CURRICULUMSTRUCTURE_LANGUAGE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Titles&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Name of this type of curriculum object (e.g., "American Revolutionary War")"</i><p>
	 *
	 *  @param value A <code>Titles</code> object
	 *  @since 1.5r1
	 */
	public void setTitles( Titles value ) { 
		removeChild( InstrDTD.CURRICULUMSTRUCTURE_TITLES );
		addChild( InstrDTD.CURRICULUMSTRUCTURE_TITLES, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Titles&gt;</code> child element.
	 *  This form of <code>setTitles</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setTitles</code>
	 *  that accepts a single <code>Titles</code> object.
	 *
	 *  @param title Name of this type of curriculum object (e.g., "American Revolutionary War")
	 *  @since 1.5r1
	 */
	public void setTitles( Title title ) {
		removeChild( InstrDTD.CURRICULUMSTRUCTURE_TITLES);
		addChild( InstrDTD.CURRICULUMSTRUCTURE_TITLES, new Titles( title ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Titles&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Name of this type of curriculum object (e.g., "American Revolutionary War")"</i><p>
	 *
	 *  @return A <code>Titles</code> object
	 *  @since 1.5r1
	 */
	public Titles getTitles() { 
		return (Titles)getChild( InstrDTD.CURRICULUMSTRUCTURE_TITLES);
	}

	/**
	 *  Removes the <code>Titles</code> child element previously created by calling <code>setTitles</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeTitles() { 
		removeChild( InstrDTD.CURRICULUMSTRUCTURE_TITLES );
	}

	/**
	 *  Gets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Description of this curriculum object"</i><p>
	 *
	 *  @return The <code>Description</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getDescription() { 
		return (String) getSIFSimpleFieldValue( InstrDTD.CURRICULUMSTRUCTURE_DESCRIPTION );
	}

	/**
	 *  Sets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Description of this curriculum object"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setDescription( String value ) { 
		setFieldValue( InstrDTD.CURRICULUMSTRUCTURE_DESCRIPTION, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;SubjectArea&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"For a description of this element, see 5.1.30 SubjectArea."</i><p>
	 *
	 *  @param value A <code>SubjectArea</code> object
	 *  @since 1.5r1
	 */
	public void setSubjectArea( SubjectArea value ) { 
		removeChild( InstrDTD.CURRICULUMSTRUCTURE_SUBJECTAREA );
		addChild( InstrDTD.CURRICULUMSTRUCTURE_SUBJECTAREA, value);
	}

	/**
	 *  Sets the value of the <code>&lt;SubjectArea&gt;</code> child element.
	 *  This form of <code>setSubjectArea</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setSubjectArea</code>
	 *  that accepts a single <code>SubjectArea</code> object.
	 *
	 *  @param code The subject area code (i.e. the first two digits of the course classification code)
	 *  @since 1.5r1
	 */
	public void setSubjectArea( String code ) {
		removeChild( InstrDTD.CURRICULUMSTRUCTURE_SUBJECTAREA);
		addChild( InstrDTD.CURRICULUMSTRUCTURE_SUBJECTAREA, new SubjectArea( code ) );
	}

	/**
	 *  Gets the value of the <code>&lt;SubjectArea&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"For a description of this element, see 5.1.30 SubjectArea."</i><p>
	 *
	 *  @return A <code>SubjectArea</code> object
	 *  @since 1.5r1
	 */
	public SubjectArea getSubjectArea() { 
		return (SubjectArea)getChild( InstrDTD.CURRICULUMSTRUCTURE_SUBJECTAREA);
	}

	/**
	 *  Removes the <code>SubjectArea</code> child element previously created by calling <code>setSubjectArea</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeSubjectArea() { 
		removeChild( InstrDTD.CURRICULUMSTRUCTURE_SUBJECTAREA );
	}

	/**
	 *  Sets the value of the <code>&lt;CurriculumHierarchyLevel&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Integer assigned to each hierarchical level within the CurriculumStructure tree. The top level is "1"."</i><p>
	 *
	 *  @param value A <code>CurriculumHierarchyLevel</code> object
	 *  @since 1.5r1
	 */
	public void setCurriculumHierarchyLevel( CurriculumHierarchyLevel value ) { 
		removeChild( InstrDTD.CURRICULUMSTRUCTURE_CURRICULUMHIERARCHYLEVEL );
		addChild( InstrDTD.CURRICULUMSTRUCTURE_CURRICULUMHIERARCHYLEVEL, value);
	}

	/**
	 *  Sets the value of the <code>&lt;CurriculumHierarchyLevel&gt;</code> child element.
	 *  This form of <code>setCurriculumHierarchyLevel</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setCurriculumHierarchyLevel</code>
	 *  that accepts a single <code>CurriculumHierarchyLevel</code> object.
	 *
	 *  @param name Used to describe what role this is serving in the structure. Some curriculum objects describe their levels in terms of programs of study, courses and units. Others use other terms. This attribute names the level of the item.
	 *  @param number Integer assigned to each hierarchical level within the CurriculumStructure tree. The top level is 1.
	 *  @param description Used to describe what role this is serving in the structure. Some curriculum objects describe their levels in terms of programs of study, courses and units. Others use other terms.
	 *  @since 1.5r1
	 */
	public void setCurriculumHierarchyLevel( String name, Integer number, String description ) {
		removeChild( InstrDTD.CURRICULUMSTRUCTURE_CURRICULUMHIERARCHYLEVEL);
		addChild( InstrDTD.CURRICULUMSTRUCTURE_CURRICULUMHIERARCHYLEVEL, new CurriculumHierarchyLevel( name, number, description ) );
	}

	/**
	 *  Gets the value of the <code>&lt;CurriculumHierarchyLevel&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Integer assigned to each hierarchical level within the CurriculumStructure tree. The top level is "1"."</i><p>
	 *
	 *  @return A <code>CurriculumHierarchyLevel</code> object
	 *  @since 1.5r1
	 */
	public CurriculumHierarchyLevel getCurriculumHierarchyLevel() { 
		return (CurriculumHierarchyLevel)getChild( InstrDTD.CURRICULUMSTRUCTURE_CURRICULUMHIERARCHYLEVEL);
	}

	/**
	 *  Removes the <code>CurriculumHierarchyLevel</code> child element previously created by calling <code>setCurriculumHierarchyLevel</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeCurriculumHierarchyLevel() { 
		removeChild( InstrDTD.CURRICULUMSTRUCTURE_CURRICULUMHIERARCHYLEVEL );
	}

	/**
	 *  Sets the value of the <code>&lt;PredecessorObjects&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"GUID assigned to the CurriculumStructure object directly above it in the hierarchy tree. This is repeatable because a single object can have multiple parent levels of the hierarchy. It is null if there is no parent object."</i><p>
	 *
	 *  @param value A <code>PredecessorObjects</code> object
	 *  @since 1.5r1
	 */
	public void setPredecessorObjects( PredecessorObjects value ) { 
		removeChild( InstrDTD.CURRICULUMSTRUCTURE_PREDECESSOROBJECTS );
		addChild( InstrDTD.CURRICULUMSTRUCTURE_PREDECESSOROBJECTS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;PredecessorObjects&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"GUID assigned to the CurriculumStructure object directly above it in the hierarchy tree. This is repeatable because a single object can have multiple parent levels of the hierarchy. It is null if there is no parent object."</i><p>
	 *
	 *  @return A <code>PredecessorObjects</code> object
	 *  @since 1.5r1
	 */
	public PredecessorObjects getPredecessorObjects() { 
		return (PredecessorObjects)getChild( InstrDTD.CURRICULUMSTRUCTURE_PREDECESSOROBJECTS);
	}

	/**
	 *  Removes the <code>PredecessorObjects</code> child element previously created by calling <code>setPredecessorObjects</code>
	 *
	 *  @since 1.5r1
	 */
	public void removePredecessorObjects() { 
		removeChild( InstrDTD.CURRICULUMSTRUCTURE_PREDECESSOROBJECTS );
	}

	/**
	 *  Sets the value of the <code>&lt;LearningObjectives&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Narrative description of learning objective(s) for the CurriculumStructure object. "</i><p>
	 *
	 *  @param value A <code>LearningObjectives</code> object
	 *  @since 1.5r1
	 */
	public void setLearningObjectives( LearningObjectives value ) { 
		removeChild( InstrDTD.CURRICULUMSTRUCTURE_LEARNINGOBJECTIVES );
		addChild( InstrDTD.CURRICULUMSTRUCTURE_LEARNINGOBJECTIVES, value);
	}

	/**
	 *  Gets the value of the <code>&lt;LearningObjectives&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Narrative description of learning objective(s) for the CurriculumStructure object. "</i><p>
	 *
	 *  @return A <code>LearningObjectives</code> object
	 *  @since 1.5r1
	 */
	public LearningObjectives getLearningObjectives() { 
		return (LearningObjectives)getChild( InstrDTD.CURRICULUMSTRUCTURE_LEARNINGOBJECTIVES);
	}

	/**
	 *  Removes the <code>LearningObjectives</code> child element previously created by calling <code>setLearningObjectives</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeLearningObjectives() { 
		removeChild( InstrDTD.CURRICULUMSTRUCTURE_LEARNINGOBJECTIVES );
	}

	/**
	 *  Sets the value of the <code>&lt;ComponentObjects&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A GUID reference to the component objects, if any, that make up this object."</i><p>
	 *
	 *  @param value A <code>ComponentObjects</code> object
	 *  @since 1.5r1
	 */
	public void setComponentObjects( ComponentObjects value ) { 
		removeChild( InstrDTD.CURRICULUMSTRUCTURE_COMPONENTOBJECTS );
		addChild( InstrDTD.CURRICULUMSTRUCTURE_COMPONENTOBJECTS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;ComponentObjects&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A GUID reference to the component objects, if any, that make up this object."</i><p>
	 *
	 *  @return A <code>ComponentObjects</code> object
	 *  @since 1.5r1
	 */
	public ComponentObjects getComponentObjects() { 
		return (ComponentObjects)getChild( InstrDTD.CURRICULUMSTRUCTURE_COMPONENTOBJECTS);
	}

	/**
	 *  Removes the <code>ComponentObjects</code> child element previously created by calling <code>setComponentObjects</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeComponentObjects() { 
		removeChild( InstrDTD.CURRICULUMSTRUCTURE_COMPONENTOBJECTS );
	}

	/**
	 *  Sets the value of the <code>&lt;LearningStandards&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Associated learning standards."</i><p>
	 *
	 *  @param value A <code>LearningStandards</code> object
	 *  @since 1.5r1
	 */
	public void setLearningStandards( LearningStandards value ) { 
		removeChild( InstrDTD.CURRICULUMSTRUCTURE_LEARNINGSTANDARDS );
		addChild( InstrDTD.CURRICULUMSTRUCTURE_LEARNINGSTANDARDS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;LearningStandards&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Associated learning standards."</i><p>
	 *
	 *  @return A <code>LearningStandards</code> object
	 *  @since 1.5r1
	 */
	public LearningStandards getLearningStandards() { 
		return (LearningStandards)getChild( InstrDTD.CURRICULUMSTRUCTURE_LEARNINGSTANDARDS);
	}

	/**
	 *  Removes the <code>LearningStandards</code> child element previously created by calling <code>setLearningStandards</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeLearningStandards() { 
		removeChild( InstrDTD.CURRICULUMSTRUCTURE_LEARNINGSTANDARDS );
	}

}
