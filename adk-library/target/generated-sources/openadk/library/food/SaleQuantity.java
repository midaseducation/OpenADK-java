// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.food;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.0
 */
public class SaleQuantity extends SIFElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public SaleQuantity() {
		super( FoodDTD.SALEQUANTITY );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param value The value of sale quantity
	 *  @param mealStatus 
	 *  @param saleUnit Unit of Sale
	 *  @param chargeToChild Charge to child per unit
	 */
	public SaleQuantity( BigDecimal value, MealStatus mealStatus, String saleUnit, MonetaryAmount chargeToChild ) {
		super( FoodDTD.SALEQUANTITY );
		this.setValue(value);
		this.setMealStatus(mealStatus);
		this.setSaleUnit(saleUnit);
		this.setChargeToChild(chargeToChild);
	}

	/**
	 *  Gets the value of the <code>&lt;Value&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The value of sale quantity"</i><p>
	 *
	 *  @return The <code>Value</code> element of this object.
	 *  @since 2.0
	 */
	public BigDecimal getValue() { 
		return (BigDecimal) getSIFSimpleFieldValue( FoodDTD.SALEQUANTITY_VALUE );
	}

	/**
	 *  Sets the value of the <code>&lt;Value&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The value of sale quantity"</i><p>
	 *
	 *  @param value A <code>BigDecimal</code> object
	 *  @since 2.0
	 */
	public void setValue( BigDecimal value ) { 
		setFieldValue( FoodDTD.SALEQUANTITY_VALUE, new SIFDecimal( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;MealStatus&gt;</code> element.
	 *
	 *  @param value A <code>MealStatus</code> object
	 *  @since 2.0
	 */
	public void setMealStatus( MealStatus value ) { 
		removeChild( FoodDTD.SALEQUANTITY_MEALSTATUS );
		addChild( FoodDTD.SALEQUANTITY_MEALSTATUS, value);
	}

	/**
	 *  Sets the value of the <code>&lt;MealStatus&gt;</code> child element.
	 *  This form of <code>setMealStatus</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setMealStatus</code>
	 *  that accepts a single <code>MealStatus</code> object.
	 *
	 *  @param type Meal status type.
	 *  @since 2.0
	 */
	public void setMealStatus( FreeReducedStatus type ) {
		removeChild( FoodDTD.SALEQUANTITY_MEALSTATUS);
		addChild( FoodDTD.SALEQUANTITY_MEALSTATUS, new MealStatus( type ) );
	}

	/**
	 *  Gets the value of the <code>&lt;MealStatus&gt;</code> element.
	 *
	 *  @return A <code>MealStatus</code> object
	 *  @since 2.0
	 */
	public MealStatus getMealStatus() { 
		return (MealStatus)getChild( FoodDTD.SALEQUANTITY_MEALSTATUS);
	}

	/**
	 *  Removes the <code>MealStatus</code> child element previously created by calling <code>setMealStatus</code>
	 *
	 *  @since 2.0
	 */
	public void removeMealStatus() { 
		removeChild( FoodDTD.SALEQUANTITY_MEALSTATUS );
	}

	/**
	 *  Gets the value of the <code>&lt;SaleUnit&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Unit of Sale"</i><p>
	 *
	 *  @return The <code>SaleUnit</code> element of this object.
	 *  @since 2.0
	 */
	public String getSaleUnit() { 
		return (String) getSIFSimpleFieldValue( FoodDTD.SALEQUANTITY_SALEUNIT );
	}

	/**
	 *  Sets the value of the <code>&lt;SaleUnit&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Unit of Sale"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.0
	 */
	public void setSaleUnit( String value ) { 
		setFieldValue( FoodDTD.SALEQUANTITY_SALEUNIT, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;ChargeToChild&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Charge to child per unit"</i><p>
	 *
	 *  @param value A <code>MonetaryAmount</code> object
	 *  @since 2.0
	 */
	public void setChargeToChild( MonetaryAmount value ) { 
		removeChild( FoodDTD.SALEQUANTITY_CHARGETOCHILD );
		addChild( FoodDTD.SALEQUANTITY_CHARGETOCHILD, value);
	}

	/**
	 *  Sets the value of the <code>&lt;ChargeToChild&gt;</code> child element.
	 *  This form of <code>setChargeToChild</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setChargeToChild</code>
	 *  that accepts a single <code>MonetaryAmount</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;MonetaryAmount&gt; element
	 *  @since 2.0
	 */
	public void setChargeToChild( BigDecimal value ) {
		removeChild( FoodDTD.SALEQUANTITY_CHARGETOCHILD);
		addChild( FoodDTD.SALEQUANTITY_CHARGETOCHILD, new MonetaryAmount( value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;ChargeToChild&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Charge to child per unit"</i><p>
	 *
	 *  @return A <code>MonetaryAmount</code> object
	 *  @since 2.0
	 */
	public MonetaryAmount getChargeToChild() { 
		return (MonetaryAmount)getChild( FoodDTD.SALEQUANTITY_CHARGETOCHILD);
	}

	/**
	 *  Removes the <code>ChargeToChild</code> child element previously created by calling <code>setChargeToChild</code>
	 *
	 *  @since 2.0
	 */
	public void removeChargeToChild() { 
		removeChild( FoodDTD.SALEQUANTITY_CHARGETOCHILD );
	}

}
