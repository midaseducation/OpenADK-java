// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.food;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.0
 */
public class Count extends SIFKeyedElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public Count() {
		super( FoodDTD.COUNT );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param value The value of the count.
	 */
	public Count( BigDecimal value ) {
		super( FoodDTD.COUNT );
		this.setValue(value);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( FoodDTD.COUNT_VALUE );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { FoodDTD.COUNT_VALUE };
	}

	/**
	 *  Sets the value of the <code>&lt;MealStatus&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Student meal status. If a meal status applies, either MealStatus (for students), or EarnedStatus (for staff) is specified."</i><p>
	 *
	 *  @param value A <code>MealStatus</code> object
	 *  @since 2.0
	 */
	public void setMealStatus( MealStatus value ) { 
		removeChild( FoodDTD.COUNT_MEALSTATUS );
		addChild( FoodDTD.COUNT_MEALSTATUS, value);
	}

	/**
	 *  Sets the value of the <code>&lt;MealStatus&gt;</code> child element.
	 *  This form of <code>setMealStatus</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setMealStatus</code>
	 *  that accepts a single <code>MealStatus</code> object.
	 *
	 *  @param type Meal status type.
	 *  @since 2.0
	 */
	public void setMealStatus( FreeReducedStatus type ) {
		removeChild( FoodDTD.COUNT_MEALSTATUS);
		addChild( FoodDTD.COUNT_MEALSTATUS, new MealStatus( type ) );
	}

	/**
	 *  Gets the value of the <code>&lt;MealStatus&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Student meal status. If a meal status applies, either MealStatus (for students), or EarnedStatus (for staff) is specified."</i><p>
	 *
	 *  @return A <code>MealStatus</code> object
	 *  @since 2.0
	 */
	public MealStatus getMealStatus() { 
		return (MealStatus)getChild( FoodDTD.COUNT_MEALSTATUS);
	}

	/**
	 *  Removes the <code>MealStatus</code> child element previously created by calling <code>setMealStatus</code>
	 *
	 *  @since 2.0
	 */
	public void removeMealStatus() { 
		removeChild( FoodDTD.COUNT_MEALSTATUS );
	}

	/**
	 *  Sets the value of the <code>&lt;EarnedStatus&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Staff meal status."</i><p>
	 *
	 *  @param value A <code>EarnedStatus</code> object
	 *  @since 2.0
	 */
	public void setEarnedStatus( EarnedStatus value ) { 
		removeChild( FoodDTD.COUNT_EARNEDSTATUS );
		addChild( FoodDTD.COUNT_EARNEDSTATUS, value);
	}

	/**
	 *  Sets the value of the <code>&lt;EarnedStatus&gt;</code> child element.
	 *  This form of <code>setEarnedStatus</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setEarnedStatus</code>
	 *  that accepts a single <code>EarnedStatus</code> object.
	 *
	 *  @param type Earned status type.
	 *  @since 2.0
	 */
	public void setEarnedStatus( YesNoNA type ) {
		removeChild( FoodDTD.COUNT_EARNEDSTATUS);
		addChild( FoodDTD.COUNT_EARNEDSTATUS, new EarnedStatus( type ) );
	}

	/**
	 *  Gets the value of the <code>&lt;EarnedStatus&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Staff meal status."</i><p>
	 *
	 *  @return An <code>EarnedStatus</code> object
	 *  @since 2.0
	 */
	public EarnedStatus getEarnedStatus() { 
		return (EarnedStatus)getChild( FoodDTD.COUNT_EARNEDSTATUS);
	}

	/**
	 *  Removes the <code>EarnedStatus</code> child element previously created by calling <code>setEarnedStatus</code>
	 *
	 *  @since 2.0
	 */
	public void removeEarnedStatus() { 
		removeChild( FoodDTD.COUNT_EARNEDSTATUS );
	}

	/**
	 *  Gets the value of the <code>&lt;MealType&gt;</code> element.
	 *
	 *  @return The <code>MealType</code> element of this object.
	 *  @since 2.0
	 */
	public String getMealType() { 
		return getFieldValue( FoodDTD.COUNT_MEALTYPE );
	}

	/**
	 *  Sets the value of the <code>&lt;MealType&gt;</code> element.
	 *
	 *  @param value A constant defined by the <code>MealTypes</code> class
	 *  @since 2.0
	 */
	public void setMealType( MealTypes value ) { 
		setField( FoodDTD.COUNT_MEALTYPE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;MealType&gt;</code> element as a String.
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setMealType( String value ) { 
		setField( FoodDTD.COUNT_MEALTYPE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Amount&gt;</code> element.
	 *
	 *  @param value A <code>FSAmount</code> object
	 *  @since 2.0
	 */
	public void setAmount( FSAmount value ) { 
		removeChild( FoodDTD.COUNT_AMOUNT );
		addChild( FoodDTD.COUNT_AMOUNT, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Amount&gt;</code> child element.
	 *  This form of <code>setAmount</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setAmount</code>
	 *  that accepts a single <code>FSAmount</code> object.
	 *
	 *  @param type 
        Type of amount. The currency unit is implied; namely USD. Note that when this common element is used not all of the following values apply. There are notes to indicate values that are applicable.
      
	 *  @param credits 
        Number of credits. This attribute does not apply to Cash or Value
        and hence has a value 0. It only applies to types BreakfastCredit and LunchCredit.
      
	 *  @param value Gets or sets the content value of the &lt;FSAmount&gt; element
	 *  @since 2.0
	 */
	public void setAmount( FSAmountType type, BigDecimal credits, BigDecimal value ) {
		removeChild( FoodDTD.COUNT_AMOUNT);
		addChild( FoodDTD.COUNT_AMOUNT, new FSAmount( type, credits, value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Amount&gt;</code> element.
	 *
	 *  @return A <code>FSAmount</code> object
	 *  @since 2.0
	 */
	public FSAmount getAmount() { 
		return (FSAmount)getChild( FoodDTD.COUNT_AMOUNT);
	}

	/**
	 *  Removes the <code>Amount</code> child element previously created by calling <code>setAmount</code>
	 *
	 *  @since 2.0
	 */
	public void removeAmount() { 
		removeChild( FoodDTD.COUNT_AMOUNT );
	}

	/**
	 *  Sets the value of the <code>&lt;Tax&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Dollar value of tax collected."</i><p>
	 *
	 *  @param value A <code>MonetaryAmount</code> object
	 *  @since 2.0
	 */
	public void setTax( MonetaryAmount value ) { 
		removeChild( FoodDTD.COUNT_TAX );
		addChild( FoodDTD.COUNT_TAX, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Tax&gt;</code> child element.
	 *  This form of <code>setTax</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setTax</code>
	 *  that accepts a single <code>MonetaryAmount</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;MonetaryAmount&gt; element
	 *  @since 2.0
	 */
	public void setTax( BigDecimal value ) {
		removeChild( FoodDTD.COUNT_TAX);
		addChild( FoodDTD.COUNT_TAX, new MonetaryAmount( value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Tax&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Dollar value of tax collected."</i><p>
	 *
	 *  @return A <code>MonetaryAmount</code> object
	 *  @since 2.0
	 */
	public MonetaryAmount getTax() { 
		return (MonetaryAmount)getChild( FoodDTD.COUNT_TAX);
	}

	/**
	 *  Removes the <code>Tax</code> child element previously created by calling <code>setTax</code>
	 *
	 *  @since 2.0
	 */
	public void removeTax() { 
		removeChild( FoodDTD.COUNT_TAX );
	}

	/**
	 *  Gets the value of the <code>&lt;Value&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The value of the count."</i><p>
	 *
	 *  @return The <code>Value</code> element of this object.
	 *  @since 2.0
	 */
	public BigDecimal getValue() { 
		return (BigDecimal) getSIFSimpleFieldValue( FoodDTD.COUNT_VALUE );
	}

	/**
	 *  Sets the value of the <code>&lt;Value&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The value of the count."</i><p>
	 *
	 *  @param value A <code>BigDecimal</code> object
	 *  @since 2.0
	 */
	public void setValue( BigDecimal value ) { 
		setFieldValue( FoodDTD.COUNT_VALUE, new SIFDecimal( value ), value );
	}

}
