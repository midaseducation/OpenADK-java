// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.food;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.0
 */
public class PurchaseQuantity extends SIFElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public PurchaseQuantity() {
		super( FoodDTD.PURCHASEQUANTITY );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param foodserviceItemPortionRefId Item portion amount
	 *  @param earned Identifies whether the item being purchased is earned i.e., at no cost to the buyer. It is used when FoodserviceTransaction object's TransactionType element has the value "Purchase".
	 *  @param mealType 
	 *  @param value 
	 */
	public PurchaseQuantity( String foodserviceItemPortionRefId, YesNo earned, MealTypes mealType, BigDecimal value ) {
		super( FoodDTD.PURCHASEQUANTITY );
		this.setFoodserviceItemPortionRefId(foodserviceItemPortionRefId);
		this.setEarned( earned );
		this.setMealType( mealType );
		this.setValue(value);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		StringBuilder b = new StringBuilder();
		b.append( getFieldValue( FoodDTD.PURCHASEQUANTITY_MEALTYPE ) );
		b.append('.');
		b.append( getFieldValue( FoodDTD.PURCHASEQUANTITY_VALUE ) );
		return b.toString();
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { FoodDTD.PURCHASEQUANTITY_MEALTYPE, FoodDTD.PURCHASEQUANTITY_VALUE };
	}

	/**
	 *  Gets the value of the <code>FoodserviceItemPortionRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Item portion amount"</i><p>
	 *
	 *  @return The <code>FoodserviceItemPortionRefId</code> attribute of this object.
	 *  @since 2.0
	 */
	public String getFoodserviceItemPortionRefId() { 
		return (String) getSIFSimpleFieldValue( FoodDTD.PURCHASEQUANTITY_FOODSERVICEITEMPORTIONREFID );
	}

	/**
	 *  Sets the value of the <code>FoodserviceItemPortionRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Item portion amount"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.0
	 */
	public void setFoodserviceItemPortionRefId( String value ) { 
		setFieldValue( FoodDTD.PURCHASEQUANTITY_FOODSERVICEITEMPORTIONREFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>Earned</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Identifies whether the item being purchased is earned i.e., at no cost to the buyer. It is used when FoodserviceTransaction object's TransactionType element has the value "Purchase"."</i><p>
	 *
	 *  @return The <code>Earned</code> attribute of this object.
	 *  @since 2.0
	 */
	public String getEarned() { 
		return getFieldValue( FoodDTD.PURCHASEQUANTITY_EARNED );
	}

	/**
	 *  Sets the value of the <code>Earned</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Identifies whether the item being purchased is earned i.e., at no cost to the buyer. It is used when FoodserviceTransaction object's TransactionType element has the value "Purchase"."</i><p>
	 *
	 *  @param value A constant defined by the <code>YesNo</code> class
	 *  @since 2.0
	 */
	public void setEarned( YesNo value ) { 
		setField( FoodDTD.PURCHASEQUANTITY_EARNED, value );
	}

	/**
	 *  Sets the value of the <code>Earned</code> attribute as a String.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Identifies whether the item being purchased is earned i.e., at no cost to the buyer. It is used when FoodserviceTransaction object's TransactionType element has the value "Purchase"."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setEarned( String value ) { 
		setField( FoodDTD.PURCHASEQUANTITY_EARNED, value );
	}

	/**
	 *  Gets the value of the <code>&lt;MealType&gt;</code> element.
	 *
	 *  @return The <code>MealType</code> element of this object.
	 *  @since 2.0
	 */
	public String getMealType() { 
		return getFieldValue( FoodDTD.PURCHASEQUANTITY_MEALTYPE );
	}

	/**
	 *  Sets the value of the <code>&lt;MealType&gt;</code> element.
	 *
	 *  @param value A constant defined by the <code>MealTypes</code> class
	 *  @since 2.0
	 */
	public void setMealType( MealTypes value ) { 
		setField( FoodDTD.PURCHASEQUANTITY_MEALTYPE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;MealType&gt;</code> element as a String.
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setMealType( String value ) { 
		setField( FoodDTD.PURCHASEQUANTITY_MEALTYPE, value );
	}

	/**
	 *  Gets the value of the <code>&lt;Value&gt;</code> element.
	 *
	 *  @return The <code>Value</code> element of this object.
	 *  @since 2.0
	 */
	public BigDecimal getValue() { 
		return (BigDecimal) getSIFSimpleFieldValue( FoodDTD.PURCHASEQUANTITY_VALUE );
	}

	/**
	 *  Sets the value of the <code>&lt;Value&gt;</code> element.
	 *
	 *  @param value A <code>BigDecimal</code> object
	 *  @since 2.0
	 */
	public void setValue( BigDecimal value ) { 
		setFieldValue( FoodDTD.PURCHASEQUANTITY_VALUE, new SIFDecimal( value ), value );
	}

}
