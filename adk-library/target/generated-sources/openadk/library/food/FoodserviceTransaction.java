// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.food;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  This object communicates food service transaction information. This is the key object that will be present for every food service transaction.  SIF_Events are reported.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class FoodserviceTransaction extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public FoodserviceTransaction() {
		super( ADK.getSIFVersion(), FoodDTD.FOODSERVICETRANSACTION );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId GUID that identifies food service transaction
	 *  @param schoolInfoRefId GUID that identifies the school/site of account transaction
	 *  @param program Program. For a description of this element, see 5.1.23 Program.
	 *  @param transactionDate Date of transaction
	 *  @param transactionTime Time of transaction.
	 *  @param customer The customer doing the transaction. The customer can be student, staff or any other person.
	 *  @param fsAmount Amount.
	 *  @param voided This flag tells us if the transaction is voided.
	 */
	public FoodserviceTransaction( String refId, String schoolInfoRefId, Program program, Calendar transactionDate, Calendar transactionTime, Customer customer, FSAmount fsAmount, YesNo voided ) {
		super( ADK.getSIFVersion(), FoodDTD.FOODSERVICETRANSACTION );
		this.setRefId(refId);
		this.setSchoolInfoRefId(schoolInfoRefId);
		this.setProgram(program);
		this.setTransactionDate(transactionDate);
		this.setTransactionTime(transactionTime);
		this.setCustomer(customer);
		this.setFSAmount(fsAmount);
		this.setVoided( voided );
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( FoodDTD.FOODSERVICETRANSACTION_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { FoodDTD.FOODSERVICETRANSACTION_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID that identifies food service transaction"</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( FoodDTD.FOODSERVICETRANSACTION_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID that identifies food service transaction"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setRefId( String value ) { 
		setFieldValue( FoodDTD.FOODSERVICETRANSACTION_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;SchoolInfoRefId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"GUID that identifies the school/site of account transaction"</i><p>
	 *
	 *  @return The <code>SchoolInfoRefId</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getSchoolInfoRefId() { 
		return (String) getSIFSimpleFieldValue( FoodDTD.FOODSERVICETRANSACTION_SCHOOLINFOREFID );
	}

	/**
	 *  Sets the value of the <code>&lt;SchoolInfoRefId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"GUID that identifies the school/site of account transaction"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setSchoolInfoRefId( String value ) { 
		setFieldValue( FoodDTD.FOODSERVICETRANSACTION_SCHOOLINFOREFID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;Program&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Program. For a description of this element, see 5.1.23 Program."</i><p>
	 *
	 *  @param value A <code>Program</code> object
	 *  @since 1.5r1
	 */
	public void setProgram( Program value ) { 
		removeChild( FoodDTD.FOODSERVICETRANSACTION_PROGRAM );
		addChild( FoodDTD.FOODSERVICETRANSACTION_PROGRAM, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Program&gt;</code> child element.
	 *  This form of <code>setProgram</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setProgram</code>
	 *  that accepts a single <code>Program</code> object.
	 *
	 *  @param type The type of the program. Type identifies the list of values.
	 *  @param value Gets or sets the content value of the &lt;Program&gt; element
	 *  @since 1.5r1
	 */
	public void setProgram( FinancialProgram type, String value ) {
		removeChild( FoodDTD.FOODSERVICETRANSACTION_PROGRAM);
		addChild( FoodDTD.FOODSERVICETRANSACTION_PROGRAM, new Program( type, value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Program&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Program. For a description of this element, see 5.1.23 Program."</i><p>
	 *
	 *  @return A <code>Program</code> object
	 *  @since 1.5r1
	 */
	public Program getProgram() { 
		return (Program)getChild( FoodDTD.FOODSERVICETRANSACTION_PROGRAM);
	}

	/**
	 *  Removes the <code>Program</code> child element previously created by calling <code>setProgram</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeProgram() { 
		removeChild( FoodDTD.FOODSERVICETRANSACTION_PROGRAM );
	}

	/**
	 *  Gets the value of the <code>&lt;TransactionDate&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Date of transaction"</i><p>
	 *
	 *  @return The <code>TransactionDate</code> element of this object.
	 *  @since 1.5r1
	 */
	public Calendar getTransactionDate() { 
		return (Calendar) getSIFSimpleFieldValue( FoodDTD.FOODSERVICETRANSACTION_TRANSACTIONDATE );
	}

	/**
	 *  Sets the value of the <code>&lt;TransactionDate&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Date of transaction"</i><p>
	 *
	 *  @param value A <code>Calendar</code> object
	 *  @since 1.5r1
	 */
	public void setTransactionDate( Calendar value ) { 
		setFieldValue( FoodDTD.FOODSERVICETRANSACTION_TRANSACTIONDATE, new SIFDate( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;TransactionTime&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Time of transaction."</i><p>
	 *
	 *  @return The <code>TransactionTime</code> element of this object.
	 *  @since 1.5r1
	 */
	public Calendar getTransactionTime() { 
		return (Calendar) getSIFSimpleFieldValue( FoodDTD.FOODSERVICETRANSACTION_TRANSACTIONTIME );
	}

	/**
	 *  Sets the value of the <code>&lt;TransactionTime&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Time of transaction."</i><p>
	 *
	 *  @param value A <code>Calendar</code> object
	 *  @since 1.5r1
	 */
	public void setTransactionTime( Calendar value ) { 
		setFieldValue( FoodDTD.FOODSERVICETRANSACTION_TRANSACTIONTIME, new SIFTime( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;TransactionTypes&gt;</code> element.
	 *
	 *  @param value A <code>TransactionTypes</code> object
	 *  @since 1.5r1
	 */
	public void setTransactionTypes( TransactionTypes value ) { 
		removeChild( FoodDTD.FOODSERVICETRANSACTION_TRANSACTIONTYPES );
		addChild( FoodDTD.FOODSERVICETRANSACTION_TRANSACTIONTYPES, value);
	}

	/**
	 *  Gets the value of the <code>&lt;TransactionTypes&gt;</code> element.
	 *
	 *  @return A <code>TransactionTypes</code> object
	 *  @since 1.5r1
	 */
	public TransactionTypes getTransactionTypes() { 
		return (TransactionTypes)getChild( FoodDTD.FOODSERVICETRANSACTION_TRANSACTIONTYPES);
	}

	/**
	 *  Removes the <code>TransactionTypes</code> child element previously created by calling <code>setTransactionTypes</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeTransactionTypes() { 
		removeChild( FoodDTD.FOODSERVICETRANSACTION_TRANSACTIONTYPES );
	}

	/**
	 *  Sets the value of the <code>&lt;Customer&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The customer doing the transaction. The customer can be student, staff or any other person."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"FSCustomerId"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Customer"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>Customer</code> object
	 *  @since 1.5r1
	 */
	public void setCustomer( Customer value ) { 
		removeChild( FoodDTD.FOODSERVICETRANSACTION_CUSTOMER );
		addChild( FoodDTD.FOODSERVICETRANSACTION_CUSTOMER, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Customer&gt;</code> child element.
	 *  This form of <code>setCustomer</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setCustomer</code>
	 *  that accepts a single <code>Customer</code> object.
	 *
	 *  @param sifRefId GUID of the SIF customer type.
	 *  @param sifRefObject SIF customer type. If the type is StaffPersonalRefId then EarnedStatus is included. If the type is StudentPersonalRefId, then MealStatus in included.
	 *  @since 1.5r1
	 */
	public void setCustomer( String sifRefId, CustomerObjectName sifRefObject ) {
		removeChild( FoodDTD.FOODSERVICETRANSACTION_CUSTOMER);
		addChild( FoodDTD.FOODSERVICETRANSACTION_CUSTOMER, new Customer( sifRefId, sifRefObject ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Customer&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The customer doing the transaction. The customer can be student, staff or any other person."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"FSCustomerId"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Customer"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return A <code>Customer</code> object
	 *  @since 1.5r1
	 */
	public Customer getCustomer() { 
		return (Customer)getChild( FoodDTD.FOODSERVICETRANSACTION_CUSTOMER);
	}

	/**
	 *  Removes the <code>Customer</code> child element previously created by calling <code>setCustomer</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeCustomer() { 
		removeChild( FoodDTD.FOODSERVICETRANSACTION_CUSTOMER );
	}

	/**
	 *  Sets the value of the <code>&lt;FSAmount&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Amount."</i><p>
	 *
	 *  @param value A <code>FSAmount</code> object
	 *  @since 1.5r1
	 */
	public void setFSAmount( FSAmount value ) { 
		removeChild( FoodDTD.FOODSERVICETRANSACTION_FSAMOUNT );
		addChild( FoodDTD.FOODSERVICETRANSACTION_FSAMOUNT, value);
	}

	/**
	 *  Sets the value of the <code>&lt;FSAmount&gt;</code> child element.
	 *  This form of <code>setFSAmount</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setFSAmount</code>
	 *  that accepts a single <code>FSAmount</code> object.
	 *
	 *  @param type 
        Type of amount. The currency unit is implied; namely USD. Note that when this common element is used not all of the following values apply. There are notes to indicate values that are applicable.
      
	 *  @param credits 
        Number of credits. This attribute does not apply to Cash or Value
        and hence has a value 0. It only applies to types BreakfastCredit and LunchCredit.
      
	 *  @param value Gets or sets the content value of the &lt;FSAmount&gt; element
	 *  @since 1.5r1
	 */
	public void setFSAmount( FSAmountType type, BigDecimal credits, BigDecimal value ) {
		removeChild( FoodDTD.FOODSERVICETRANSACTION_FSAMOUNT);
		addChild( FoodDTD.FOODSERVICETRANSACTION_FSAMOUNT, new FSAmount( type, credits, value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;FSAmount&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Amount."</i><p>
	 *
	 *  @return A <code>FSAmount</code> object
	 *  @since 1.5r1
	 */
	public FSAmount getFSAmount() { 
		return (FSAmount)getChild( FoodDTD.FOODSERVICETRANSACTION_FSAMOUNT);
	}

	/**
	 *  Removes the <code>FSAmount</code> child element previously created by calling <code>setFSAmount</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeFSAmount() { 
		removeChild( FoodDTD.FOODSERVICETRANSACTION_FSAMOUNT );
	}

	/**
	 *  Sets the value of the <code>&lt;Amount&gt;</code> element.
	 *
	 *  @param value A <code>FSAmount</code> object
	 *  @since 2.0
	 */
	public void setAmount( FSAmount value ) { 
		removeChild( FoodDTD.FOODSERVICETRANSACTION_AMOUNT );
		addChild( FoodDTD.FOODSERVICETRANSACTION_AMOUNT, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Amount&gt;</code> child element.
	 *  This form of <code>setAmount</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setAmount</code>
	 *  that accepts a single <code>FSAmount</code> object.
	 *
	 *  @param type 
        Type of amount. The currency unit is implied; namely USD. Note that when this common element is used not all of the following values apply. There are notes to indicate values that are applicable.
      
	 *  @param credits 
        Number of credits. This attribute does not apply to Cash or Value
        and hence has a value 0. It only applies to types BreakfastCredit and LunchCredit.
      
	 *  @param value Gets or sets the content value of the &lt;FSAmount&gt; element
	 *  @since 2.0
	 */
	public void setAmount( FSAmountType type, BigDecimal credits, BigDecimal value ) {
		removeChild( FoodDTD.FOODSERVICETRANSACTION_AMOUNT);
		addChild( FoodDTD.FOODSERVICETRANSACTION_AMOUNT, new FSAmount( type, credits, value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Amount&gt;</code> element.
	 *
	 *  @return A <code>FSAmount</code> object
	 *  @since 2.0
	 */
	public FSAmount getAmount() { 
		return (FSAmount)getChild( FoodDTD.FOODSERVICETRANSACTION_AMOUNT);
	}

	/**
	 *  Removes the <code>Amount</code> child element previously created by calling <code>setAmount</code>
	 *
	 *  @since 2.0
	 */
	public void removeAmount() { 
		removeChild( FoodDTD.FOODSERVICETRANSACTION_AMOUNT );
	}

	/**
	 *  Sets the value of the <code>&lt;Tax&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Amount of tax."</i><p>
	 *
	 *  @param value A <code>MonetaryAmount</code> object
	 *  @since 1.5r1
	 */
	public void setTax( MonetaryAmount value ) { 
		removeChild( FoodDTD.FOODSERVICETRANSACTION_TAX );
		addChild( FoodDTD.FOODSERVICETRANSACTION_TAX, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Tax&gt;</code> child element.
	 *  This form of <code>setTax</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setTax</code>
	 *  that accepts a single <code>MonetaryAmount</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;MonetaryAmount&gt; element
	 *  @since 1.5r1
	 */
	public void setTax( BigDecimal value ) {
		removeChild( FoodDTD.FOODSERVICETRANSACTION_TAX);
		addChild( FoodDTD.FOODSERVICETRANSACTION_TAX, new MonetaryAmount( value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Tax&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Amount of tax."</i><p>
	 *
	 *  @return A <code>MonetaryAmount</code> object
	 *  @since 1.5r1
	 */
	public MonetaryAmount getTax() { 
		return (MonetaryAmount)getChild( FoodDTD.FOODSERVICETRANSACTION_TAX);
	}

	/**
	 *  Removes the <code>Tax</code> child element previously created by calling <code>setTax</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeTax() { 
		removeChild( FoodDTD.FOODSERVICETRANSACTION_TAX );
	}

	/**
	 *  Gets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Description of the Transaction"</i><p>
	 *
	 *  @return The <code>Description</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getDescription() { 
		return (String) getSIFSimpleFieldValue( FoodDTD.FOODSERVICETRANSACTION_DESCRIPTION );
	}

	/**
	 *  Sets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Description of the Transaction"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setDescription( String value ) { 
		setFieldValue( FoodDTD.FOODSERVICETRANSACTION_DESCRIPTION, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Voided&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This flag tells us if the transaction is voided."</i><p>
	 *
	 *  @return The <code>Voided</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getVoided() { 
		return getFieldValue( FoodDTD.FOODSERVICETRANSACTION_VOIDED );
	}

	/**
	 *  Sets the value of the <code>&lt;Voided&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This flag tells us if the transaction is voided."</i><p>
	 *
	 *  @param value A constant defined by the <code>YesNo</code> class
	 *  @since 1.5r1
	 */
	public void setVoided( YesNo value ) { 
		setField( FoodDTD.FOODSERVICETRANSACTION_VOIDED, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Voided&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This flag tells us if the transaction is voided."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setVoided( String value ) { 
		setField( FoodDTD.FOODSERVICETRANSACTION_VOIDED, value );
	}

}
