// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.food;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class TransactionPayMethods extends SIFKeyedList<TransactionPayMethod>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public TransactionPayMethods() {
		super( FoodDTD.TRANSACTIONPAYMETHODS );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param transactionPayMethod Transaction method
	 */
	public TransactionPayMethods( TransactionPayMethod transactionPayMethod ) {
		super( FoodDTD.TRANSACTIONPAYMETHODS );
		this.safeAddChild( FoodDTD.TRANSACTIONPAYMETHODS_TRANSACTIONPAYMETHOD, transactionPayMethod );
	}

	/**
	 *  Adds a new <code>&lt;TransactionPayMethod&gt;</code> repeatable element.
	 *  This form of <code>setTransactionPayMethod</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setTransactionPayMethod</code>
	 *  that accepts a single <code>TransactionPayMethod</code> object.
	 *
	 *  @param type This refers to the way the payment was made.
	 *  @param amounts AmountThis amount is the form of the incoming funds for this transaction. For example; the payment can be made by a credit card.
	 *  @since 1.5r1
	 */
	public void addTransactionPayMethod( TransactionPayMethodType type, FSAmounts amounts ) {
		addChild( FoodDTD.TRANSACTIONPAYMETHODS_TRANSACTIONPAYMETHOD, new TransactionPayMethod( type, amounts ) );
	}

	/**
	 *  Removes a <code>TransactionPayMethod</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the TransactionPayMethod object to remove by its Type value
	 *  @since 1.5r1
	 */
	public void removeTransactionPayMethod( TransactionPayMethodType type ) { 
		removeChild( FoodDTD.TRANSACTIONPAYMETHODS_TRANSACTIONPAYMETHOD, new String[] { type.toString() } );
	}

	/**
	 *  Gets a <code>TransactionPayMethod</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the TransactionPayMethod object to return by its "Type" attribute value
	 *  @return A <code>TransactionPayMethod</code> object
	 *  @since 1.5r1
	 */
	public TransactionPayMethod getTransactionPayMethod( TransactionPayMethodType type ) { 
		return (TransactionPayMethod)getChild( FoodDTD.TRANSACTIONPAYMETHODS_TRANSACTIONPAYMETHOD, new String[] { type.toString() } );
	}

	/**
	 *  Gets all <code>TransactionPayMethod</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>TransactionPayMethod</code> objects
	 *  @since 1.5r1
	 */
	public TransactionPayMethod[] getTransactionPayMethods() {
		List<SIFElement> v = getChildList( FoodDTD.TRANSACTIONPAYMETHODS_TRANSACTIONPAYMETHOD);
		TransactionPayMethod[] cvt = new TransactionPayMethod[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>TransactionPayMethod</code> objects. All existing 
	 * <code>TransactionPayMethod</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>TransactionPayMethods</code>.
	 *
	 *  @since 1.5r1
	 */
	public void setTransactionPayMethods( TransactionPayMethod[] transactionpaymethods ) {
		setChildren( FoodDTD.TRANSACTIONPAYMETHODS_TRANSACTIONPAYMETHOD, transactionpaymethods );
	}

}
