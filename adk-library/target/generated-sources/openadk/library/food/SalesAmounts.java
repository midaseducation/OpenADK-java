// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.food;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class SalesAmounts extends SIFKeyedList<SalesAmount>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public SalesAmounts() {
		super( FoodDTD.SALESAMOUNTS );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param salesAmount Dollar value
	 */
	public SalesAmounts( SalesAmount salesAmount ) {
		super( FoodDTD.SALESAMOUNTS );
		this.safeAddChild( FoodDTD.SALESAMOUNTS_SALESAMOUNT, salesAmount );
	}

	/**
	 *  Adds a new <code>&lt;SalesAmount&gt;</code> repeatable element.
	 *  This form of <code>setSalesAmount</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setSalesAmount</code>
	 *  that accepts a single <code>SalesAmount</code> object.
	 *
	 *  @param type Type of SalesAmount. This denotes the form of incoming funds for the sales done.
	 *  @param accountType Type of account to which sales amounts apply.  This is set to NA when Type is set as Earned.
	 *  @param value Gets or sets the content value of the &lt;SalesAmount&gt; element
	 *  @since 1.5r1
	 */
	public void addSalesAmount( SalesAmountType type, AccountType accountType, BigDecimal value ) {
		addChild( FoodDTD.SALESAMOUNTS_SALESAMOUNT, new SalesAmount( type, accountType, value ) );
	}

	/**
	 *  Removes a <code>SalesAmount</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param value Identifies the SalesAmount object to remove by its Value value
	 *  @since 1.5r1
	 */
	public void removeSalesAmount( BigDecimal value ) { 
		removeChild( FoodDTD.SALESAMOUNTS_SALESAMOUNT, new String[] { value.toString() } );
	}

	/**
	 *  Gets a <code>SalesAmount</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param value Identifies the SalesAmount object to return by its "Value" attribute value
	 *  @return A <code>SalesAmount</code> object
	 *  @since 1.5r1
	 */
	public SalesAmount getSalesAmount( BigDecimal value ) { 
		return (SalesAmount)getChild( FoodDTD.SALESAMOUNTS_SALESAMOUNT, new String[] { value.toString() } );
	}

	/**
	 *  Gets all <code>SalesAmount</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>SalesAmount</code> objects
	 *  @since 1.5r1
	 */
	public SalesAmount[] getSalesAmounts() {
		List<SIFElement> v = getChildList( FoodDTD.SALESAMOUNTS_SALESAMOUNT);
		SalesAmount[] cvt = new SalesAmount[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>SalesAmount</code> objects. All existing 
	 * <code>SalesAmount</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>SalesAmounts</code>.
	 *
	 *  @since 1.5r1
	 */
	public void setSalesAmounts( SalesAmount[] salesamounts ) {
		setChildren( FoodDTD.SALESAMOUNTS_SALESAMOUNT, salesamounts );
	}

}
