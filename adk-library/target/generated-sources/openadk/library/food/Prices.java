// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.food;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class Prices extends SIFKeyedList<Price>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public Prices() {
		super( FoodDTD.PRICES );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param price 
	 */
	public Prices( Price price ) {
		super( FoodDTD.PRICES );
		this.safeAddChild( FoodDTD.PRICES_PRICE, price );
	}

	/**
	 *  Adds a new <code>&lt;Price&gt;</code> repeatable element.
	 *  This form of <code>setPrice</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setPrice</code>
	 *  that accepts a single <code>Price</code> object.
	 *
	 *  @param value The price value
	 *  @param mealStatus This gives information about a student's meal status.
	 *  @param mealType This gives information about a meal type
	 *  @param gradeLevels Refer to section 5.1.12 GradeLevels.
	 *  @since 1.5r1
	 */
	public void addPrice( BigDecimal value, MealStatus mealStatus, MealTypes mealType, GradeLevels gradeLevels ) {
		addChild( FoodDTD.PRICES_PRICE, new Price( value, mealStatus, mealType, gradeLevels ) );
	}

	/**
	 *  Removes a <code>Price</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param value Identifies the Price object to remove by its Value value
	 *  @since 1.5r1
	 */
	public void removePrice( BigDecimal value ) { 
		removeChild( FoodDTD.PRICES_PRICE, new String[] { value.toString() } );
	}

	/**
	 *  Gets a <code>Price</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param value Identifies the Price object to return by its "Value" attribute value
	 *  @return A <code>Price</code> object
	 *  @since 1.5r1
	 */
	public Price getPrice( BigDecimal value ) { 
		return (Price)getChild( FoodDTD.PRICES_PRICE, new String[] { value.toString() } );
	}

	/**
	 *  Gets all <code>Price</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>Price</code> objects
	 *  @since 1.5r1
	 */
	public Price[] getPrices() {
		List<SIFElement> v = getChildList( FoodDTD.PRICES_PRICE);
		Price[] cvt = new Price[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>Price</code> objects. All existing 
	 * <code>Price</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>Prices</code>.
	 *
	 *  @since 1.5r1
	 */
	public void setPrices( Price[] prices ) {
		setChildren( FoodDTD.PRICES_PRICE, prices );
	}

}
