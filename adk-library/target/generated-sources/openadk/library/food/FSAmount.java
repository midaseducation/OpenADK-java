// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.food;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  Amount<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class FSAmount extends SIFKeyedElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public FSAmount() {
		super( FoodDTD.FSAMOUNT );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param type 
        Type of amount. The currency unit is implied; namely USD. Note that when this common element is used not all of the following values apply. There are notes to indicate values that are applicable.
      
	 *  @param credits 
        Number of credits. This attribute does not apply to Cash or Value
        and hence has a value 0. It only applies to types BreakfastCredit and LunchCredit.
      
	 *  @param value Gets or sets the content value of the &lt;FSAmount&gt; element
	 */
	public FSAmount( FSAmountType type, BigDecimal credits, BigDecimal value ) {
		super( FoodDTD.FSAMOUNT );
		this.setType( type );
		this.setCredits(credits);
		this.setValue(value);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( FoodDTD.FSAMOUNT );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { FoodDTD.FSAMOUNT };
	}

	/**
	 *  Gets the value of the <code>&lt;Value&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Gets or sets the content value of the &lt;FSAmount&gt; element"</i><p>
	 *
	 *  @return The <code>Value</code> element of this object.
	 *  @since 1.5r1
	 */
	public BigDecimal getValue() { 
		return (BigDecimal) getSIFSimpleFieldValue( FoodDTD.FSAMOUNT );
	}

	/**
	 *  Sets the value of the <code>&lt;Value&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Gets or sets the content value of the &lt;FSAmount&gt; element"</i><p>
	 *
	 *  @param value A <code>BigDecimal</code> object
	 *  @since 1.5r1
	 */
	public void setValue( BigDecimal value ) { 
		setFieldValue( FoodDTD.FSAMOUNT, new SIFDecimal( value ), value );
	}

	/**
	 *  Gets the value of the <code>Type</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"
        Type of amount. The currency unit is implied; namely USD. Note that when this common element is used not all of the following values apply. There are notes to indicate values that are applicable.
      "</i><p>
	 *
	 *  @return The <code>Type</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getType() { 
		return getFieldValue( FoodDTD.FSAMOUNT_TYPE );
	}

	/**
	 *  Sets the value of the <code>Type</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"
        Type of amount. The currency unit is implied; namely USD. Note that when this common element is used not all of the following values apply. There are notes to indicate values that are applicable.
      "</i><p>
	 *
	 *  @param value A constant defined by the <code>FSAmountType</code> class
	 *  @since 1.5r1
	 */
	public void setType( FSAmountType value ) { 
		setField( FoodDTD.FSAMOUNT_TYPE, value );
	}

	/**
	 *  Sets the value of the <code>Type</code> attribute as a String.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"
        Type of amount. The currency unit is implied; namely USD. Note that when this common element is used not all of the following values apply. There are notes to indicate values that are applicable.
      "</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setType( String value ) { 
		setField( FoodDTD.FSAMOUNT_TYPE, value );
	}

	/**
	 *  Gets the value of the <code>Credits</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"
        Number of credits. This attribute does not apply to Cash or Value
        and hence has a value 0. It only applies to types BreakfastCredit and LunchCredit.
      "</i><p>
	 *  This attribute is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering attributes of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"Quantity"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Credits"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>Credits</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public BigDecimal getCredits() { 
		return (BigDecimal) getSIFSimpleFieldValue( FoodDTD.FSAMOUNT_CREDITS );
	}

	/**
	 *  Sets the value of the <code>Credits</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"
        Number of credits. This attribute does not apply to Cash or Value
        and hence has a value 0. It only applies to types BreakfastCredit and LunchCredit.
      "</i><p>
	 *  This attribute is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering attributes of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"Quantity"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Credits"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>BigDecimal</code> object
	 *  @since 1.5r1
	 */
	public void setCredits( BigDecimal value ) { 
		setFieldValue( FoodDTD.FSAMOUNT_CREDITS, new SIFDecimal( value ), value );
	}

	/**
	 *  Gets the value of the <code>Currency</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"	Currency code. Where omitted, defaults to implementation-defined local currency, typically USD in the United States. "</i><p>
	 *
	 *  @return The <code>Currency</code> attribute of this object.
	 *  @since 2.0
	 */
	public String getCurrency() { 
		return getFieldValue( FoodDTD.FSAMOUNT_CURRENCY );
	}

	/**
	 *  Sets the value of the <code>Currency</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"	Currency code. Where omitted, defaults to implementation-defined local currency, typically USD in the United States. "</i><p>
	 *
	 *  @param value A constant defined by the <code>CurrencyNames</code> class
	 *  @since 2.0
	 */
	public void setCurrency( CurrencyNames value ) { 
		setField( FoodDTD.FSAMOUNT_CURRENCY, value );
	}

	/**
	 *  Sets the value of the <code>Currency</code> attribute as a String.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"	Currency code. Where omitted, defaults to implementation-defined local currency, typically USD in the United States. "</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setCurrency( String value ) { 
		setField( FoodDTD.FSAMOUNT_CURRENCY, value );
	}

}
