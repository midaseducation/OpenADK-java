// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.food;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  Reimbursement Rate of the meal<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class Rate extends SIFKeyedElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public Rate() {
		super( FoodDTD.RATE );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param severeNeed 
        Severe need identifier for the rate. When SevereNeed is Yes then the rate shown is the combined rate.
        For certain programs the severe need identifier does not apply.  In such cases the value NA should
        be used.
      
	 *  @param value The rate value
	 *  @param mealStatus This gives information about a student's meal status.
	 */
	public Rate( YesNoNA severeNeed, String value, MealStatus mealStatus ) {
		super( FoodDTD.RATE );
		this.setSevereNeed( severeNeed );
		this.setValue(value);
		this.setMealStatus(mealStatus);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( FoodDTD.RATE_VALUE );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { FoodDTD.RATE_VALUE };
	}

	/**
	 *  Gets the value of the <code>SevereNeed</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"
        Severe need identifier for the rate. When SevereNeed is Yes then the rate shown is the combined rate.
        For certain programs the severe need identifier does not apply.  In such cases the value NA should
        be used.
      "</i><p>
	 *
	 *  @return The <code>SevereNeed</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getSevereNeed() { 
		return getFieldValue( FoodDTD.RATE_SEVERENEED );
	}

	/**
	 *  Sets the value of the <code>SevereNeed</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"
        Severe need identifier for the rate. When SevereNeed is Yes then the rate shown is the combined rate.
        For certain programs the severe need identifier does not apply.  In such cases the value NA should
        be used.
      "</i><p>
	 *
	 *  @param value A constant defined by the <code>YesNoNA</code> class
	 *  @since 1.5r1
	 */
	public void setSevereNeed( YesNoNA value ) { 
		setField( FoodDTD.RATE_SEVERENEED, value );
	}

	/**
	 *  Sets the value of the <code>SevereNeed</code> attribute as a String.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"
        Severe need identifier for the rate. When SevereNeed is Yes then the rate shown is the combined rate.
        For certain programs the severe need identifier does not apply.  In such cases the value NA should
        be used.
      "</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setSevereNeed( String value ) { 
		setField( FoodDTD.RATE_SEVERENEED, value );
	}

	/**
	 *  Gets the value of the <code>Value</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The rate value"</i><p>
	 *
	 *  @return The <code>Value</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getValue() { 
		return (String) getSIFSimpleFieldValue( FoodDTD.RATE_VALUE );
	}

	/**
	 *  Sets the value of the <code>Value</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The rate value"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setValue( String value ) { 
		setFieldValue( FoodDTD.RATE_VALUE, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;MealStatus&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This gives information about a student's meal status."</i><p>
	 *
	 *  @param value A <code>MealStatus</code> object
	 *  @since 1.5r1
	 */
	public void setMealStatus( MealStatus value ) { 
		removeChild( FoodDTD.RATE_MEALSTATUS );
		addChild( FoodDTD.RATE_MEALSTATUS, value);
	}

	/**
	 *  Sets the value of the <code>&lt;MealStatus&gt;</code> child element.
	 *  This form of <code>setMealStatus</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setMealStatus</code>
	 *  that accepts a single <code>MealStatus</code> object.
	 *
	 *  @param type Meal status type.
	 *  @since 1.5r1
	 */
	public void setMealStatus( FreeReducedStatus type ) {
		removeChild( FoodDTD.RATE_MEALSTATUS);
		addChild( FoodDTD.RATE_MEALSTATUS, new MealStatus( type ) );
	}

	/**
	 *  Gets the value of the <code>&lt;MealStatus&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This gives information about a student's meal status."</i><p>
	 *
	 *  @return A <code>MealStatus</code> object
	 *  @since 1.5r1
	 */
	public MealStatus getMealStatus() { 
		return (MealStatus)getChild( FoodDTD.RATE_MEALSTATUS);
	}

	/**
	 *  Removes the <code>MealStatus</code> child element previously created by calling <code>setMealStatus</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeMealStatus() { 
		removeChild( FoodDTD.RATE_MEALSTATUS );
	}

}
