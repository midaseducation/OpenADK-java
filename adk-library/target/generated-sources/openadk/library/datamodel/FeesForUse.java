// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.datamodel;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  A container for fees for use of the content in the object.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.0
 */
public class FeesForUse extends SIFKeyedList<FeeForUse>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public FeesForUse() {
		super( DatamodelDTD.FEESFORUSE );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param feeForUse 
	 */
	public FeesForUse( FeeForUse feeForUse ) {
		super( DatamodelDTD.FEESFORUSE );
		this.safeAddChild( DatamodelDTD.FEESFORUSE_FEEFORUSE, feeForUse );
	}

	/**
	 *  Adds a new <code>&lt;FeeForUse&gt;</code> repeatable element.
	 *  This form of <code>setFeeForUse</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setFeeForUse</code>
	 *  that accepts a single <code>FeeForUse</code> object.
	 *
	 *  @param meteringType 
	 *  @since 2.0
	 */
	public void addFeeForUse( String meteringType ) {
		addChild( DatamodelDTD.FEESFORUSE_FEEFORUSE, new FeeForUse( meteringType ) );
	}

	/**
	 *  Removes a <code>FeeForUse</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param meteringType Identifies the FeeForUse object to remove by its MeteringType value
	 *  @since 2.0
	 */
	public void removeFeeForUse( String meteringType ) { 
		removeChild( DatamodelDTD.FEESFORUSE_FEEFORUSE, new String[] { meteringType.toString() } );
	}

	/**
	 *  Gets a <code>FeeForUse</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param meteringType Identifies the FeeForUse object to return by its "MeteringType" attribute value
	 *  @return A <code>FeeForUse</code> object
	 *  @since 2.0
	 */
	public FeeForUse getFeeForUse( String meteringType ) { 
		return (FeeForUse)getChild( DatamodelDTD.FEESFORUSE_FEEFORUSE, new String[] { meteringType.toString() } );
	}

	/**
	 *  Gets all <code>FeeForUse</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>FeeForUse</code> objects
	 *  @since 2.0
	 */
	public FeeForUse[] getFeeForUses() {
		List<SIFElement> v = getChildList( DatamodelDTD.FEESFORUSE_FEEFORUSE);
		FeeForUse[] cvt = new FeeForUse[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>FeeForUse</code> objects. All existing 
	 * <code>FeeForUse</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>FeeForUses</code>.
	 *
	 *  @since 2.0
	 */
	public void setFeeForUses( FeeForUse[] feeforuses ) {
		setChildren( DatamodelDTD.FEESFORUSE_FEEFORUSE, feeforuses );
	}

}
