// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.datamodel;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.0
 */
public class Creators extends SIFKeyedList<Creator>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public Creators() {
		super( DatamodelDTD.CREATORS );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param creator 
	 */
	public Creators( Creator creator ) {
		super( DatamodelDTD.CREATORS );
		this.safeAddChild( DatamodelDTD.CREATORS_CREATOR, creator );
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( DatamodelDTD.CREATORS_CREATOR );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { DatamodelDTD.CREATORS_CREATOR };
	}

	/**
	 *  Adds a new <code>&lt;Creator&gt;</code> repeatable element.
	 *  This form of <code>setCreator</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setCreator</code>
	 *  that accepts a single <code>Creator</code> object.
	 *
	 *  @param name Human-readable name of the data's creator. If the object contains system-generated data, the name should identify the creating service or application.
	 *  @param id Unique identifier of the creator. An email address or URI could be used here.
	 *  @since 2.0
	 */
	public void addCreator( String name, String id ) {
		addChild( DatamodelDTD.CREATORS_CREATOR, new Creator( name, id ) );
	}

	/**
	 *  Removes a <code>Creator</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param id Identifies the Creator object to remove by its ID value
	 *  @since 2.0
	 */
	public void removeCreator( String id ) { 
		removeChild( DatamodelDTD.CREATORS_CREATOR, new String[] { id.toString() } );
	}

	/**
	 *  Gets a <code>Creator</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param id Identifies the Creator object to return by its "ID" attribute value
	 *  @return A <code>Creator</code> object
	 *  @since 2.0
	 */
	public Creator getCreator( String id ) { 
		return (Creator)getChild( DatamodelDTD.CREATORS_CREATOR, new String[] { id.toString() } );
	}

	/**
	 *  Gets all <code>Creator</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>Creator</code> objects
	 *  @since 2.0
	 */
	public Creator[] getCreators() {
		List<SIFElement> v = getChildList( DatamodelDTD.CREATORS_CREATOR);
		Creator[] cvt = new Creator[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>Creator</code> objects. All existing 
	 * <code>Creator</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>Creators</code>.
	 *
	 *  @since 2.0
	 */
	public void setCreators( Creator[] creators ) {
		setChildren( DatamodelDTD.CREATORS_CREATOR, creators );
	}

}
