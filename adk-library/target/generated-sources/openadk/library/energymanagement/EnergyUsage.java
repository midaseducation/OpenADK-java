// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.energymanagement;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  This object contains energy usage information for an energy location.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.6
 */
public class EnergyUsage extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public EnergyUsage() {
		super( ADK.getSIFVersion(), EnergymanagementDTD.ENERGYUSAGE );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId This object contains energy usage information for an energy location.
	 *  @param usageLocationInfo Complex element containing the location of where measurements apply to.
	 */
	public EnergyUsage( String refId, UsageLocationInfo usageLocationInfo ) {
		super( ADK.getSIFVersion(), EnergymanagementDTD.ENERGYUSAGE );
		this.setRefId(refId);
		this.setUsageLocationInfo(usageLocationInfo);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( EnergymanagementDTD.ENERGYUSAGE_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { EnergymanagementDTD.ENERGYUSAGE_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"This object contains energy usage information for an energy location."</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 2.7
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( EnergymanagementDTD.ENERGYUSAGE_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"This object contains energy usage information for an energy location."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.7
	 */
	public void setRefId( String value ) { 
		setFieldValue( EnergymanagementDTD.ENERGYUSAGE_REFID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;UsageLocationInfo&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Complex element containing the location of where measurements apply to."</i><p>
	 *
	 *  @param value A <code>UsageLocationInfo</code> object
	 *  @since 2.6
	 */
	public void setUsageLocationInfo( UsageLocationInfo value ) { 
		removeChild( EnergymanagementDTD.ENERGYUSAGE_USAGELOCATIONINFO );
		addChild( EnergymanagementDTD.ENERGYUSAGE_USAGELOCATIONINFO, value);
	}

	/**
	 *  Sets the value of the <code>&lt;UsageLocationInfo&gt;</code> child element.
	 *  This form of <code>setUsageLocationInfo</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setUsageLocationInfo</code>
	 *  that accepts a single <code>UsageLocationInfo</code> object.
	 *
	 *  @param schoolId "e.g., urn:sif:school:AcmeMiddleSchool1.CoyoteDistrict.Arizona.
                   e.g., urn:sif:school:AcmeMiddleSchool1.CoyoteDistrict.Arizona."
	 *  @param building Name of the School Building.
	 *  @since 2.6
	 */
	public void setUsageLocationInfo( BinaryData schoolId, String building ) {
		removeChild( EnergymanagementDTD.ENERGYUSAGE_USAGELOCATIONINFO);
		addChild( EnergymanagementDTD.ENERGYUSAGE_USAGELOCATIONINFO, new UsageLocationInfo( schoolId, building ) );
	}

	/**
	 *  Gets the value of the <code>&lt;UsageLocationInfo&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Complex element containing the location of where measurements apply to."</i><p>
	 *
	 *  @return An <code>UsageLocationInfo</code> object
	 *  @since 2.6
	 */
	public UsageLocationInfo getUsageLocationInfo() { 
		return (UsageLocationInfo)getChild( EnergymanagementDTD.ENERGYUSAGE_USAGELOCATIONINFO);
	}

	/**
	 *  Removes the <code>UsageLocationInfo</code> child element previously created by calling <code>setUsageLocationInfo</code>
	 *
	 *  @since 2.6
	 */
	public void removeUsageLocationInfo() { 
		removeChild( EnergymanagementDTD.ENERGYUSAGE_USAGELOCATIONINFO );
	}

	/**
	 *  Sets the value of the <code>&lt;DataSource&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The description of the source of the measurements."</i><p>
	 *
	 *  @param value A <code>DataSource</code> object
	 *  @since 2.6
	 */
	public void setDataSource( DataSource value ) { 
		removeChild( EnergymanagementDTD.ENERGYUSAGE_DATASOURCE );
		addChild( EnergymanagementDTD.ENERGYUSAGE_DATASOURCE, value);
	}

	/**
	 *  Sets the value of the <code>&lt;DataSource&gt;</code> child element.
	 *  This form of <code>setDataSource</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setDataSource</code>
	 *  that accepts a single <code>DataSource</code> object.
	 *
	 *  @param system Identifier of the reporting system.
	 *  @param startTime Start time of measurements that follow.
	 *  @param readingDataList List of ReadingData
	 *  @since 2.6
	 */
	public void setDataSource( String system, Calendar startTime, ReadingData readingDataList ) {
		removeChild( EnergymanagementDTD.ENERGYUSAGE_DATASOURCE);
		addChild( EnergymanagementDTD.ENERGYUSAGE_DATASOURCE, new DataSource( system, startTime, readingDataList ) );
	}

	/**
	 *  Gets the value of the <code>&lt;DataSource&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The description of the source of the measurements."</i><p>
	 *
	 *  @return A <code>DataSource</code> object
	 *  @since 2.6
	 */
	public DataSource getDataSource() { 
		return (DataSource)getChild( EnergymanagementDTD.ENERGYUSAGE_DATASOURCE);
	}

	/**
	 *  Removes the <code>DataSource</code> child element previously created by calling <code>setDataSource</code>
	 *
	 *  @since 2.6
	 */
	public void removeDataSource() { 
		removeChild( EnergymanagementDTD.ENERGYUSAGE_DATASOURCE );
	}

}
