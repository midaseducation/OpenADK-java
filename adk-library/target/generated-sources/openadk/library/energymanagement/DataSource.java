// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.energymanagement;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.6
 */
public class DataSource extends SIFElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public DataSource() {
		super( EnergymanagementDTD.DATASOURCE );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param system Identifier of the reporting system.
	 *  @param startTime Start time of measurements that follow.
	 *  @param readingDataList List of ReadingData
	 */
	public DataSource( String system, Calendar startTime, ReadingData readingDataList ) {
		super( EnergymanagementDTD.DATASOURCE );
		this.setSystem(system);
		this.setStartTime(startTime);
		this.setReadingDataList( new ReadingDataList( readingDataList ));
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		StringBuilder b = new StringBuilder();
		b.append( getFieldValue( EnergymanagementDTD.DATASOURCE_SYSTEM ) );
		b.append('.');
		b.append( getFieldValue( EnergymanagementDTD.DATASOURCE_STARTTIME ) );
		b.append('.');
		b.append( getFieldValue( EnergymanagementDTD.DATASOURCE_READINGDATALIST ) );
		return b.toString();
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { EnergymanagementDTD.DATASOURCE_SYSTEM, EnergymanagementDTD.DATASOURCE_STARTTIME, EnergymanagementDTD.DATASOURCE_READINGDATALIST };
	}

	/**
	 *  Gets the value of the <code>&lt;System&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Identifier of the reporting system."</i><p>
	 *
	 *  @return The <code>System</code> element of this object.
	 *  @since 2.6
	 */
	public String getSystem() { 
		return (String) getSIFSimpleFieldValue( EnergymanagementDTD.DATASOURCE_SYSTEM );
	}

	/**
	 *  Sets the value of the <code>&lt;System&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Identifier of the reporting system."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setSystem( String value ) { 
		setFieldValue( EnergymanagementDTD.DATASOURCE_SYSTEM, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;StartTime&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Start time of measurements that follow."</i><p>
	 *
	 *  @return The <code>StartTime</code> element of this object.
	 *  @since 2.6
	 */
	public Calendar getStartTime() { 
		return (Calendar) getSIFSimpleFieldValue( EnergymanagementDTD.DATASOURCE_STARTTIME );
	}

	/**
	 *  Sets the value of the <code>&lt;StartTime&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Start time of measurements that follow."</i><p>
	 *
	 *  @param value A <code>Calendar</code> object
	 *  @since 2.6
	 */
	public void setStartTime( Calendar value ) { 
		setFieldValue( EnergymanagementDTD.DATASOURCE_STARTTIME, new SIFDateTime( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;ReadingDataList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"List of ReadingData"</i><p>
	 *
	 *  @param value A <code>ReadingDataList</code> object
	 *  @since 2.6
	 */
	public void setReadingDataList( ReadingDataList value ) { 
		removeChild( EnergymanagementDTD.DATASOURCE_READINGDATALIST );
		addChild( EnergymanagementDTD.DATASOURCE_READINGDATALIST, value);
	}

	/**
	 *  Sets the value of the <code>&lt;ReadingDataList&gt;</code> child element.
	 *  This form of <code>setReadingDataList</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setReadingDataList</code>
	 *  that accepts a single <code>ReadingDataList</code> object.
	 *
	 *  @param readingData Complex element defining a set of parameters that apply to all the actual readings that follow.
	 *  @since 2.6
	 */
	public void setReadingDataList( ReadingData readingData ) {
		removeChild( EnergymanagementDTD.DATASOURCE_READINGDATALIST);
		addChild( EnergymanagementDTD.DATASOURCE_READINGDATALIST, new ReadingDataList( readingData ) );
	}

	/**
	 *  Gets the value of the <code>&lt;ReadingDataList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"List of ReadingData"</i><p>
	 *
	 *  @return A <code>ReadingDataList</code> object
	 *  @since 2.6
	 */
	public ReadingDataList getReadingDataList() { 
		return (ReadingDataList)getChild( EnergymanagementDTD.DATASOURCE_READINGDATALIST);
	}

	/**
	 *  Removes the <code>ReadingDataList</code> child element previously created by calling <code>setReadingDataList</code>
	 *
	 *  @since 2.6
	 */
	public void removeReadingDataList() { 
		removeChild( EnergymanagementDTD.DATASOURCE_READINGDATALIST );
	}

}
