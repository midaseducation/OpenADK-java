// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.library;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.1
 */
public class ItemInfo extends SIFKeyedElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public ItemInfo() {
		super( LibraryDTD.ITEMINFO );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param type 
	 *  @param title The title of the item being referenced by this Transaction.
	 */
	public ItemInfo( ItemType type, String title ) {
		super( LibraryDTD.ITEMINFO );
		this.setType( type );
		this.setTitle(title);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( LibraryDTD.ITEMINFO_TYPE );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { LibraryDTD.ITEMINFO_TYPE };
	}

	/**
	 *  Gets the value of the <code>Type</code> attribute.
	 *
	 *  @return The <code>Type</code> attribute of this object.
	 *  @since 1.1
	 */
	public String getType() { 
		return getFieldValue( LibraryDTD.ITEMINFO_TYPE );
	}

	/**
	 *  Sets the value of the <code>Type</code> attribute.
	 *
	 *  @param value A constant defined by the <code>ItemType</code> class
	 *  @since 1.1
	 */
	public void setType( ItemType value ) { 
		setField( LibraryDTD.ITEMINFO_TYPE, value );
	}

	/**
	 *  Sets the value of the <code>Type</code> attribute as a String.
	 *
	 *  @param value The value as a String
	 *  @since 1.1
	 */
	public void setType( String value ) { 
		setField( LibraryDTD.ITEMINFO_TYPE, value );
	}

	/**
	 *  Gets the value of the <code>&lt;Title&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The title of the item being referenced by this Transaction."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"ItemTitle"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Title"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>Title</code> element of this object.
	 *  @since 1.1
	 */
	public String getTitle() { 
		return (String) getSIFSimpleFieldValue( LibraryDTD.ITEMINFO_TITLE );
	}

	/**
	 *  Sets the value of the <code>&lt;Title&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The title of the item being referenced by this Transaction."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"ItemTitle"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Title"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setTitle( String value ) { 
		setFieldValue( LibraryDTD.ITEMINFO_TITLE, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Author&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The author of the item being referenced by this Transaction."</i><p>
	 *
	 *  @return The <code>Author</code> element of this object.
	 *  @since 2.0
	 */
	public String getAuthor() { 
		return (String) getSIFSimpleFieldValue( LibraryDTD.ITEMINFO_AUTHOR );
	}

	/**
	 *  Sets the value of the <code>&lt;Author&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The author of the item being referenced by this Transaction."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.0
	 */
	public void setAuthor( String value ) { 
		setFieldValue( LibraryDTD.ITEMINFO_AUTHOR, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;ElectronicId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Electronic identifier associated with this Transaction."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"ItemElectronicId"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"ElectronicId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>ElectronicId</code> object
	 *  @since 1.1
	 */
	public void setElectronicId( ElectronicId value ) { 
		removeChild( LibraryDTD.ITEMINFO_ELECTRONICID );
		addChild( LibraryDTD.ITEMINFO_ELECTRONICID, value);
	}

	/**
	 *  Sets the value of the <code>&lt;ElectronicId&gt;</code> child element.
	 *  This form of <code>setElectronicId</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setElectronicId</code>
	 *  that accepts a single <code>ElectronicId</code> object.
	 *
	 *  @param type Electronic ID type.
	 *  @param value Gets or sets the content value of the &lt;ElectronicId&gt; element
	 *  @since 1.1
	 */
	public void setElectronicId( ElectronicIdType type, String value ) {
		removeChild( LibraryDTD.ITEMINFO_ELECTRONICID);
		addChild( LibraryDTD.ITEMINFO_ELECTRONICID, new ElectronicId( type, value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;ElectronicId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Electronic identifier associated with this Transaction."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"ItemElectronicId"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"ElectronicId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return An <code>ElectronicId</code> object
	 *  @since 1.1
	 */
	public ElectronicId getElectronicId() { 
		return (ElectronicId)getChild( LibraryDTD.ITEMINFO_ELECTRONICID);
	}

	/**
	 *  Removes the <code>ElectronicId</code> child element previously created by calling <code>setElectronicId</code>
	 *
	 *  @since 1.1
	 */
	public void removeElectronicId() { 
		removeChild( LibraryDTD.ITEMINFO_ELECTRONICID );
	}

	/**
	 *  Gets the value of the <code>&lt;CallNumber&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The library call number, if any, assigned to this item."</i><p>
	 *
	 *  @return The <code>CallNumber</code> element of this object.
	 *  @since 1.1
	 */
	public String getCallNumber() { 
		return (String) getSIFSimpleFieldValue( LibraryDTD.ITEMINFO_CALLNUMBER );
	}

	/**
	 *  Sets the value of the <code>&lt;CallNumber&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The library call number, if any, assigned to this item."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setCallNumber( String value ) { 
		setFieldValue( LibraryDTD.ITEMINFO_CALLNUMBER, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;Price&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The cost of this item. "</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"CopyPrice"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Price"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>MonetaryAmount</code> object
	 *  @since 1.1
	 */
	public void setPrice( MonetaryAmount value ) { 
		removeChild( LibraryDTD.ITEMINFO_PRICE );
		addChild( LibraryDTD.ITEMINFO_PRICE, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Price&gt;</code> child element.
	 *  This form of <code>setPrice</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setPrice</code>
	 *  that accepts a single <code>MonetaryAmount</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;MonetaryAmount&gt; element
	 *  @since 1.1
	 */
	public void setPrice( BigDecimal value ) {
		removeChild( LibraryDTD.ITEMINFO_PRICE);
		addChild( LibraryDTD.ITEMINFO_PRICE, new MonetaryAmount( value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Price&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The cost of this item. "</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"CopyPrice"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Price"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return A <code>MonetaryAmount</code> object
	 *  @since 1.1
	 */
	public MonetaryAmount getPrice() { 
		return (MonetaryAmount)getChild( LibraryDTD.ITEMINFO_PRICE);
	}

	/**
	 *  Removes the <code>Price</code> child element previously created by calling <code>setPrice</code>
	 *
	 *  @since 1.1
	 */
	public void removePrice() { 
		removeChild( LibraryDTD.ITEMINFO_PRICE );
	}

}
