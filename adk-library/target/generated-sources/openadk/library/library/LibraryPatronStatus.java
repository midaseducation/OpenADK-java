// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.library;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.1
 */
public class LibraryPatronStatus extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public LibraryPatronStatus() {
		super( ADK.getSIFVersion(), LibraryDTD.LIBRARYPATRONSTATUS );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param libraryType A library-defined language-independent value that refers to a specific patron type.
	 *  @param refId Key
	 *  @param sifRefId The SIF wide unique identifier of a student or teacher.
	 *  @param sifRefObject The type of patron mapped to a SIF supported object. Library automation products work with patrons who could be students or teachers.
	 *  @param electronicIdList This is an open list with no primary key.
	 *  @param numberOfCheckouts The total number of items that this patron currently has checked out including overdue items.
	 *  @param numberOfOverdues The total number of checkouts that are currently overdue.
	 *  @param numberOfFines The total number of fines currently assessed to this patron.
	 *  @param fineAmount The total monetary amount of the fines that this patron currently owes the library expressed as a positive number.
	 */
	public LibraryPatronStatus( String libraryType, String refId, String sifRefId, PatronType sifRefObject, ElectronicIdList electronicIdList, Integer numberOfCheckouts, Integer numberOfOverdues, Integer numberOfFines, MonetaryAmount fineAmount ) {
		super( ADK.getSIFVersion(), LibraryDTD.LIBRARYPATRONSTATUS );
		this.setLibraryType(libraryType);
		this.setRefId(refId);
		this.setSIF_RefId(sifRefId);
		this.setSIF_RefObject( sifRefObject );
		this.setElectronicIdList(electronicIdList);
		this.setNumberOfCheckouts(numberOfCheckouts);
		this.setNumberOfOverdues(numberOfOverdues);
		this.setNumberOfFines(numberOfFines);
		this.setFineAmount(fineAmount);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { LibraryDTD.LIBRARYPATRONSTATUS_REFID };
	}

	/**
	 *  Gets the value of the <code>LibraryType</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"A library-defined language-independent value that refers to a specific patron type."</i><p>
	 *
	 *  @return The <code>LibraryType</code> attribute of this object.
	 *  @since 1.1
	 */
	public String getLibraryType() { 
		return (String) getSIFSimpleFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_LIBRARYTYPE );
	}

	/**
	 *  Sets the value of the <code>LibraryType</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"A library-defined language-independent value that refers to a specific patron type."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setLibraryType( String value ) { 
		setFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_LIBRARYTYPE, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Key"</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 2.7
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Key"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.7
	 */
	public void setRefId( String value ) { 
		setFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>SIF_RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The SIF wide unique identifier of a student or teacher."</i><p>
	 *  This attribute is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering attributes of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"SifRefId"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"SIF_RefId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>SIF_RefId</code> attribute of this object.
	 *  @since 1.1
	 */
	public String getSIF_RefId() { 
		return (String) getSIFSimpleFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_SIF_REFID );
	}

	/**
	 *  Sets the value of the <code>SIF_RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The SIF wide unique identifier of a student or teacher."</i><p>
	 *  This attribute is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering attributes of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"SifRefId"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"SIF_RefId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setSIF_RefId( String value ) { 
		setFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_SIF_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>SIF_RefObject</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The type of patron mapped to a SIF supported object. Library automation products work with patrons who could be students or teachers."</i><p>
	 *  This attribute is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering attributes of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"SifRefIdType"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"SIF_RefObject"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>SIF_RefObject</code> attribute of this object.
	 *  @since 1.1
	 */
	public String getSIF_RefObject() { 
		return getFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_SIF_REFOBJECT );
	}

	/**
	 *  Sets the value of the <code>SIF_RefObject</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The type of patron mapped to a SIF supported object. Library automation products work with patrons who could be students or teachers."</i><p>
	 *  This attribute is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering attributes of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"SifRefIdType"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"SIF_RefObject"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A constant defined by the <code>PatronType</code> class
	 *  @since 1.1
	 */
	public void setSIF_RefObject( PatronType value ) { 
		setField( LibraryDTD.LIBRARYPATRONSTATUS_SIF_REFOBJECT, value );
	}

	/**
	 *  Sets the value of the <code>SIF_RefObject</code> attribute as a String.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The type of patron mapped to a SIF supported object. Library automation products work with patrons who could be students or teachers."</i><p>
	 *  This attribute is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering attributes of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"SifRefIdType"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"SIF_RefObject"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.1
	 */
	public void setSIF_RefObject( String value ) { 
		setField( LibraryDTD.LIBRARYPATRONSTATUS_SIF_REFOBJECT, value );
	}

	/**
	 *  Sets the value of the <code>&lt;ElectronicIdList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This is an open list with no primary key."</i><p>
	 *
	 *  @param value A <code>ElectronicIdList</code> object
	 *  @since 1.1
	 */
	public void setElectronicIdList( ElectronicIdList value ) { 
		removeChild( LibraryDTD.LIBRARYPATRONSTATUS_ELECTRONICIDLIST );
		addChild( LibraryDTD.LIBRARYPATRONSTATUS_ELECTRONICIDLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;ElectronicIdList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This is an open list with no primary key."</i><p>
	 *
	 *  @return An <code>ElectronicIdList</code> object
	 *  @since 1.1
	 */
	public ElectronicIdList getElectronicIdList() { 
		return (ElectronicIdList)getChild( LibraryDTD.LIBRARYPATRONSTATUS_ELECTRONICIDLIST);
	}

	/**
	 *  Removes the <code>ElectronicIdList</code> child element previously created by calling <code>setElectronicIdList</code>
	 *
	 *  @since 1.1
	 */
	public void removeElectronicIdList() { 
		removeChild( LibraryDTD.LIBRARYPATRONSTATUS_ELECTRONICIDLIST );
	}

	/**
	 *  Sets the value of the <code>&lt;TransactionList&gt;</code> element.
	 *
	 *  @param value A <code>TransactionList</code> object
	 *  @since 1.1
	 */
	public void setTransactionList( TransactionList value ) { 
		removeChild( LibraryDTD.LIBRARYPATRONSTATUS_TRANSACTIONLIST );
		addChild( LibraryDTD.LIBRARYPATRONSTATUS_TRANSACTIONLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;TransactionList&gt;</code> element.
	 *
	 *  @return A <code>TransactionList</code> object
	 *  @since 1.1
	 */
	public TransactionList getTransactionList() { 
		return (TransactionList)getChild( LibraryDTD.LIBRARYPATRONSTATUS_TRANSACTIONLIST);
	}

	/**
	 *  Removes the <code>TransactionList</code> child element previously created by calling <code>setTransactionList</code>
	 *
	 *  @since 1.1
	 */
	public void removeTransactionList() { 
		removeChild( LibraryDTD.LIBRARYPATRONSTATUS_TRANSACTIONLIST );
	}

	/**
	 *  Sets the value of the <code>&lt;MessageList&gt;</code> element.
	 *
	 *  @param value A <code>MessageList</code> object
	 *  @since 1.1
	 */
	public void setMessageList( MessageList value ) { 
		removeChild( LibraryDTD.LIBRARYPATRONSTATUS_MESSAGELIST );
		addChild( LibraryDTD.LIBRARYPATRONSTATUS_MESSAGELIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;MessageList&gt;</code> element.
	 *
	 *  @return A <code>MessageList</code> object
	 *  @since 1.1
	 */
	public MessageList getMessageList() { 
		return (MessageList)getChild( LibraryDTD.LIBRARYPATRONSTATUS_MESSAGELIST);
	}

	/**
	 *  Removes the <code>MessageList</code> child element previously created by calling <code>setMessageList</code>
	 *
	 *  @since 1.1
	 */
	public void removeMessageList() { 
		removeChild( LibraryDTD.LIBRARYPATRONSTATUS_MESSAGELIST );
	}

	/**
	 *  Gets the value of the <code>&lt;NumberOfCheckouts&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The total number of items that this patron currently has checked out including overdue items."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"NumCheckouts"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"NumberOfCheckouts"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>NumberOfCheckouts</code> element of this object.
	 *  @since 1.1
	 */
	public Integer getNumberOfCheckouts() { 
		return (Integer) getSIFSimpleFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_NUMBEROFCHECKOUTS );
	}

	/**
	 *  Sets the value of the <code>&lt;NumberOfCheckouts&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The total number of items that this patron currently has checked out including overdue items."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"NumCheckouts"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"NumberOfCheckouts"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 1.1
	 */
	public void setNumberOfCheckouts( Integer value ) { 
		setFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_NUMBEROFCHECKOUTS, new SIFInt( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;NumberOfOverdues&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The total number of checkouts that are currently overdue."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"NumOverdues"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"NumberOfOverdues"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>NumberOfOverdues</code> element of this object.
	 *  @since 1.1
	 */
	public Integer getNumberOfOverdues() { 
		return (Integer) getSIFSimpleFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_NUMBEROFOVERDUES );
	}

	/**
	 *  Sets the value of the <code>&lt;NumberOfOverdues&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The total number of checkouts that are currently overdue."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"NumOverdues"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"NumberOfOverdues"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 1.1
	 */
	public void setNumberOfOverdues( Integer value ) { 
		setFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_NUMBEROFOVERDUES, new SIFInt( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;NumberOfFines&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The total number of fines currently assessed to this patron."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"NumFines"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"NumberOfFines"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>NumberOfFines</code> element of this object.
	 *  @since 1.1
	 */
	public Integer getNumberOfFines() { 
		return (Integer) getSIFSimpleFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_NUMBEROFFINES );
	}

	/**
	 *  Sets the value of the <code>&lt;NumberOfFines&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The total number of fines currently assessed to this patron."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"NumFines"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"NumberOfFines"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 1.1
	 */
	public void setNumberOfFines( Integer value ) { 
		setFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_NUMBEROFFINES, new SIFInt( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;FineAmount&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The total monetary amount of the fines that this patron currently owes the library expressed as a positive number."</i><p>
	 *
	 *  @param value A <code>MonetaryAmount</code> object
	 *  @since 1.1
	 */
	public void setFineAmount( MonetaryAmount value ) { 
		removeChild( LibraryDTD.LIBRARYPATRONSTATUS_FINEAMOUNT );
		addChild( LibraryDTD.LIBRARYPATRONSTATUS_FINEAMOUNT, value);
	}

	/**
	 *  Sets the value of the <code>&lt;FineAmount&gt;</code> child element.
	 *  This form of <code>setFineAmount</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setFineAmount</code>
	 *  that accepts a single <code>MonetaryAmount</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;MonetaryAmount&gt; element
	 *  @since 1.1
	 */
	public void setFineAmount( BigDecimal value ) {
		removeChild( LibraryDTD.LIBRARYPATRONSTATUS_FINEAMOUNT);
		addChild( LibraryDTD.LIBRARYPATRONSTATUS_FINEAMOUNT, new MonetaryAmount( value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;FineAmount&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The total monetary amount of the fines that this patron currently owes the library expressed as a positive number."</i><p>
	 *
	 *  @return A <code>MonetaryAmount</code> object
	 *  @since 1.1
	 */
	public MonetaryAmount getFineAmount() { 
		return (MonetaryAmount)getChild( LibraryDTD.LIBRARYPATRONSTATUS_FINEAMOUNT);
	}

	/**
	 *  Removes the <code>FineAmount</code> child element previously created by calling <code>setFineAmount</code>
	 *
	 *  @since 1.1
	 */
	public void removeFineAmount() { 
		removeChild( LibraryDTD.LIBRARYPATRONSTATUS_FINEAMOUNT );
	}

	/**
	 *  Gets the value of the <code>&lt;NumberOfRefunds&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The total number of refunds currently credited to this patron."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"NumRefunds"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"NumberOfRefunds"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>NumberOfRefunds</code> element of this object.
	 *  @since 1.1
	 */
	public Integer getNumberOfRefunds() { 
		return (Integer) getSIFSimpleFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_NUMBEROFREFUNDS );
	}

	/**
	 *  Sets the value of the <code>&lt;NumberOfRefunds&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The total number of refunds currently credited to this patron."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"NumRefunds"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"NumberOfRefunds"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 1.1
	 */
	public void setNumberOfRefunds( Integer value ) { 
		setFieldValue( LibraryDTD.LIBRARYPATRONSTATUS_NUMBEROFREFUNDS, new SIFInt( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;RefundAmount&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The total monetary amount of the refunds that the library currently owes the patron expressed as a positive number."</i><p>
	 *
	 *  @param value A <code>MonetaryAmount</code> object
	 *  @since 1.1
	 */
	public void setRefundAmount( MonetaryAmount value ) { 
		removeChild( LibraryDTD.LIBRARYPATRONSTATUS_REFUNDAMOUNT );
		addChild( LibraryDTD.LIBRARYPATRONSTATUS_REFUNDAMOUNT, value);
	}

	/**
	 *  Sets the value of the <code>&lt;RefundAmount&gt;</code> child element.
	 *  This form of <code>setRefundAmount</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setRefundAmount</code>
	 *  that accepts a single <code>MonetaryAmount</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;MonetaryAmount&gt; element
	 *  @since 1.1
	 */
	public void setRefundAmount( BigDecimal value ) {
		removeChild( LibraryDTD.LIBRARYPATRONSTATUS_REFUNDAMOUNT);
		addChild( LibraryDTD.LIBRARYPATRONSTATUS_REFUNDAMOUNT, new MonetaryAmount( value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;RefundAmount&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The total monetary amount of the refunds that the library currently owes the patron expressed as a positive number."</i><p>
	 *
	 *  @return A <code>MonetaryAmount</code> object
	 *  @since 1.1
	 */
	public MonetaryAmount getRefundAmount() { 
		return (MonetaryAmount)getChild( LibraryDTD.LIBRARYPATRONSTATUS_REFUNDAMOUNT);
	}

	/**
	 *  Removes the <code>RefundAmount</code> child element previously created by calling <code>setRefundAmount</code>
	 *
	 *  @since 1.1
	 */
	public void removeRefundAmount() { 
		removeChild( LibraryDTD.LIBRARYPATRONSTATUS_REFUNDAMOUNT );
	}

}
