// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.library;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.1
 */
public class FineInfo extends SIFKeyedElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public FineInfo() {
		super( LibraryDTD.FINEINFO );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param type Type of fine assessed to this patron and item.  A corresponding ItemInfo is required for all FineInfo types except "Other" and "Refund" where it is permissible to omit the ItemInfo element if there isn't an item associated with the fine.
	 *  @param assessed The date and time that this fine was assessed to the patron.
	 *  @param amount The current balance of the fine expressed as a positive number. 
	 */
	public FineInfo( FineType type, Calendar assessed, MonetaryAmount amount ) {
		super( LibraryDTD.FINEINFO );
		this.setType( type );
		this.setAssessed(assessed);
		this.setAmount(amount);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( LibraryDTD.FINEINFO_TYPE );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { LibraryDTD.FINEINFO_TYPE };
	}

	/**
	 *  Gets the value of the <code>Type</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Type of fine assessed to this patron and item.  A corresponding ItemInfo is required for all FineInfo types except "Other" and "Refund" where it is permissible to omit the ItemInfo element if there isn't an item associated with the fine."</i><p>
	 *
	 *  @return The <code>Type</code> attribute of this object.
	 *  @since 1.1
	 */
	public String getType() { 
		return getFieldValue( LibraryDTD.FINEINFO_TYPE );
	}

	/**
	 *  Sets the value of the <code>Type</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Type of fine assessed to this patron and item.  A corresponding ItemInfo is required for all FineInfo types except "Other" and "Refund" where it is permissible to omit the ItemInfo element if there isn't an item associated with the fine."</i><p>
	 *
	 *  @param value A constant defined by the <code>FineType</code> class
	 *  @since 1.1
	 */
	public void setType( FineType value ) { 
		setField( LibraryDTD.FINEINFO_TYPE, value );
	}

	/**
	 *  Sets the value of the <code>Type</code> attribute as a String.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Type of fine assessed to this patron and item.  A corresponding ItemInfo is required for all FineInfo types except "Other" and "Refund" where it is permissible to omit the ItemInfo element if there isn't an item associated with the fine."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.1
	 */
	public void setType( String value ) { 
		setField( LibraryDTD.FINEINFO_TYPE, value );
	}

	/**
	 *  Gets the value of the <code>&lt;Assessed&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The date and time that this fine was assessed to the patron."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"Date"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Assessed"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>Assessed</code> element of this object.
	 *  @since 1.1
	 */
	public Calendar getAssessed() { 
		return (Calendar) getSIFSimpleFieldValue( LibraryDTD.FINEINFO_ASSESSED );
	}

	/**
	 *  Sets the value of the <code>&lt;Assessed&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The date and time that this fine was assessed to the patron."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"Date"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Assessed"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>Calendar</code> object
	 *  @since 1.1
	 */
	public void setAssessed( Calendar value ) { 
		setFieldValue( LibraryDTD.FINEINFO_ASSESSED, new SIFDateTime( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"More detailed information concerning the assessed fine or refund."</i><p>
	 *
	 *  @return The <code>Description</code> element of this object.
	 *  @since 1.1
	 */
	public String getDescription() { 
		return (String) getSIFSimpleFieldValue( LibraryDTD.FINEINFO_DESCRIPTION );
	}

	/**
	 *  Sets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"More detailed information concerning the assessed fine or refund."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setDescription( String value ) { 
		setFieldValue( LibraryDTD.FINEINFO_DESCRIPTION, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;Amount&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The current balance of the fine expressed as a positive number. "</i><p>
	 *
	 *  @param value A <code>MonetaryAmount</code> object
	 *  @since 1.1
	 */
	public void setAmount( MonetaryAmount value ) { 
		removeChild( LibraryDTD.FINEINFO_AMOUNT );
		addChild( LibraryDTD.FINEINFO_AMOUNT, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Amount&gt;</code> child element.
	 *  This form of <code>setAmount</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setAmount</code>
	 *  that accepts a single <code>MonetaryAmount</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;MonetaryAmount&gt; element
	 *  @since 1.1
	 */
	public void setAmount( BigDecimal value ) {
		removeChild( LibraryDTD.FINEINFO_AMOUNT);
		addChild( LibraryDTD.FINEINFO_AMOUNT, new MonetaryAmount( value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Amount&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The current balance of the fine expressed as a positive number. "</i><p>
	 *
	 *  @return A <code>MonetaryAmount</code> object
	 *  @since 1.1
	 */
	public MonetaryAmount getAmount() { 
		return (MonetaryAmount)getChild( LibraryDTD.FINEINFO_AMOUNT);
	}

	/**
	 *  Removes the <code>Amount</code> child element previously created by calling <code>setAmount</code>
	 *
	 *  @since 1.1
	 */
	public void removeAmount() { 
		removeChild( LibraryDTD.FINEINFO_AMOUNT );
	}

	/**
	 *  Gets the value of the <code>&lt;Reference&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"An application-specific reference identifier for the fine being assessed, paid, or refunded.  It is intended to identify a specific fine transaction allowing consumers to include this information in Billing or Payment events sent to the library application."</i><p>
	 *
	 *  @return The <code>Reference</code> element of this object.
	 *  @since 2.0
	 */
	public String getReference() { 
		return (String) getSIFSimpleFieldValue( LibraryDTD.FINEINFO_REFERENCE );
	}

	/**
	 *  Sets the value of the <code>&lt;Reference&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"An application-specific reference identifier for the fine being assessed, paid, or refunded.  It is intended to identify a specific fine transaction allowing consumers to include this information in Billing or Payment events sent to the library application."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.0
	 */
	public void setReference( String value ) { 
		setFieldValue( LibraryDTD.FINEINFO_REFERENCE, new SIFString( value ), value );
	}

}
