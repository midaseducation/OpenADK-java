// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.library;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.1
 */
public class Transaction extends SIFElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public Transaction() {
		super( LibraryDTD.TRANSACTION );
	}

	/**
	 *  Sets the value of the <code>&lt;ItemInfo&gt;</code> element.
	 *
	 *  @param value A <code>ItemInfo</code> object
	 *  @since 1.1
	 */
	public void setItemInfo( ItemInfo value ) { 
		removeChild( LibraryDTD.TRANSACTION_ITEMINFO );
		addChild( LibraryDTD.TRANSACTION_ITEMINFO, value);
	}

	/**
	 *  Sets the value of the <code>&lt;ItemInfo&gt;</code> child element.
	 *  This form of <code>setItemInfo</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setItemInfo</code>
	 *  that accepts a single <code>ItemInfo</code> object.
	 *
	 *  @param type 
	 *  @param title The title of the item being referenced by this Transaction.
	 *  @since 1.1
	 */
	public void setItemInfo( ItemType type, String title ) {
		removeChild( LibraryDTD.TRANSACTION_ITEMINFO);
		addChild( LibraryDTD.TRANSACTION_ITEMINFO, new ItemInfo( type, title ) );
	}

	/**
	 *  Gets the value of the <code>&lt;ItemInfo&gt;</code> element.
	 *
	 *  @return An <code>ItemInfo</code> object
	 *  @since 1.1
	 */
	public ItemInfo getItemInfo() { 
		return (ItemInfo)getChild( LibraryDTD.TRANSACTION_ITEMINFO);
	}

	/**
	 *  Removes the <code>ItemInfo</code> child element previously created by calling <code>setItemInfo</code>
	 *
	 *  @since 1.1
	 */
	public void removeItemInfo() { 
		removeChild( LibraryDTD.TRANSACTION_ITEMINFO );
	}

	/**
	 *  Sets the value of the <code>&lt;CheckoutInfo&gt;</code> element.
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"DueInfo"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"CheckoutInfo"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>CheckoutInfo</code> object
	 *  @since 1.1
	 */
	public void setCheckoutInfo( CheckoutInfo value ) { 
		removeChild( LibraryDTD.TRANSACTION_CHECKOUTINFO );
		addChild( LibraryDTD.TRANSACTION_CHECKOUTINFO, value);
	}

	/**
	 *  Sets the value of the <code>&lt;CheckoutInfo&gt;</code> child element.
	 *  This form of <code>setCheckoutInfo</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setCheckoutInfo</code>
	 *  that accepts a single <code>CheckoutInfo</code> object.
	 *
	 *  @param returnBy The date and time that this item is due to be returned.
	 *  @since 1.1
	 */
	public void setCheckoutInfo( Calendar returnBy ) {
		removeChild( LibraryDTD.TRANSACTION_CHECKOUTINFO);
		addChild( LibraryDTD.TRANSACTION_CHECKOUTINFO, new CheckoutInfo( returnBy ) );
	}

	/**
	 *  Gets the value of the <code>&lt;CheckoutInfo&gt;</code> element.
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"DueInfo"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"CheckoutInfo"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return A <code>CheckoutInfo</code> object
	 *  @since 1.1
	 */
	public CheckoutInfo getCheckoutInfo() { 
		return (CheckoutInfo)getChild( LibraryDTD.TRANSACTION_CHECKOUTINFO);
	}

	/**
	 *  Removes the <code>CheckoutInfo</code> child element previously created by calling <code>setCheckoutInfo</code>
	 *
	 *  @since 1.1
	 */
	public void removeCheckoutInfo() { 
		removeChild( LibraryDTD.TRANSACTION_CHECKOUTINFO );
	}

	/**
	 *  Sets the value of the <code>&lt;FineInfoList&gt;</code> element.
	 *
	 *  @param value A <code>FineInfoList</code> object
	 *  @since 1.1
	 */
	public void setFineInfoList( FineInfoList value ) { 
		removeChild( LibraryDTD.TRANSACTION_FINEINFOLIST );
		addChild( LibraryDTD.TRANSACTION_FINEINFOLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;FineInfoList&gt;</code> element.
	 *
	 *  @return A <code>FineInfoList</code> object
	 *  @since 1.1
	 */
	public FineInfoList getFineInfoList() { 
		return (FineInfoList)getChild( LibraryDTD.TRANSACTION_FINEINFOLIST);
	}

	/**
	 *  Removes the <code>FineInfoList</code> child element previously created by calling <code>setFineInfoList</code>
	 *
	 *  @since 1.1
	 */
	public void removeFineInfoList() { 
		removeChild( LibraryDTD.TRANSACTION_FINEINFOLIST );
	}

	/**
	 *  Sets the value of the <code>&lt;HoldInfoList&gt;</code> element.
	 *
	 *  @param value A <code>HoldInfoList</code> object
	 *  @since 1.1
	 */
	public void setHoldInfoList( HoldInfoList value ) { 
		removeChild( LibraryDTD.TRANSACTION_HOLDINFOLIST );
		addChild( LibraryDTD.TRANSACTION_HOLDINFOLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;HoldInfoList&gt;</code> element.
	 *
	 *  @return An <code>HoldInfoList</code> object
	 *  @since 1.1
	 */
	public HoldInfoList getHoldInfoList() { 
		return (HoldInfoList)getChild( LibraryDTD.TRANSACTION_HOLDINFOLIST);
	}

	/**
	 *  Removes the <code>HoldInfoList</code> child element previously created by calling <code>setHoldInfoList</code>
	 *
	 *  @since 1.1
	 */
	public void removeHoldInfoList() { 
		removeChild( LibraryDTD.TRANSACTION_HOLDINFOLIST );
	}

}
