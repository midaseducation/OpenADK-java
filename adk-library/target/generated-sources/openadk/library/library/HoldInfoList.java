// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.library;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.1
 */
public class HoldInfoList extends SIFKeyedList<HoldInfo>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public HoldInfoList() {
		super( LibraryDTD.HOLDINFOLIST );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param holdInfo 
	 */
	public HoldInfoList( HoldInfo holdInfo ) {
		super( LibraryDTD.HOLDINFOLIST );
		this.safeAddChild( LibraryDTD.HOLDINFOLIST_HOLDINFO, holdInfo );
	}

	/**
	 *  Adds a new <code>&lt;HoldInfo&gt;</code> repeatable element.
	 *  This form of <code>setHoldInfo</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setHoldInfo</code>
	 *  that accepts a single <code>HoldInfo</code> object.
	 *
	 *  @param type The type of hold being referenced.
	 *  @param datePlaced The date that the patron placed the hold.
	 *  @since 1.1
	 */
	public void addHoldInfo( HoldStatus type, Calendar datePlaced ) {
		addChild( LibraryDTD.HOLDINFOLIST_HOLDINFO, new HoldInfo( type, datePlaced ) );
	}

	/**
	 *  Removes an <code>HoldInfo</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the HoldInfo object to remove by its Type value
	 *  @since 1.1
	 */
	public void removeHoldInfo( HoldStatus type ) { 
		removeChild( LibraryDTD.HOLDINFOLIST_HOLDINFO, new String[] { type.toString() } );
	}

	/**
	 *  Gets an <code>HoldInfo</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the HoldInfo object to return by its "Type" attribute value
	 *  @return An <code>HoldInfo</code> object
	 *  @since 1.1
	 */
	public HoldInfo getHoldInfo( HoldStatus type ) { 
		return (HoldInfo)getChild( LibraryDTD.HOLDINFOLIST_HOLDINFO, new String[] { type.toString() } );
	}

	/**
	 *  Gets all <code>HoldInfo</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>HoldInfo</code> objects
	 *  @since 1.1
	 */
	public HoldInfo[] getHoldInfos() {
		List<SIFElement> v = getChildList( LibraryDTD.HOLDINFOLIST_HOLDINFO);
		HoldInfo[] cvt = new HoldInfo[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>HoldInfo</code> objects. All existing 
	 * <code>HoldInfo</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>HoldInfos</code>.
	 *
	 *  @since 1.1
	 */
	public void setHoldInfos( HoldInfo[] holdinfos ) {
		setChildren( LibraryDTD.HOLDINFOLIST_HOLDINFO, holdinfos );
	}

}
