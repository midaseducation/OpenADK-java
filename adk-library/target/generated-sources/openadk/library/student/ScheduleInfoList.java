// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.student;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.1
 */
public class ScheduleInfoList extends SIFKeyedList<ScheduleInfo>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public ScheduleInfoList() {
		super( StudentDTD.SCHEDULEINFOLIST );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param scheduleInfo 
	 */
	public ScheduleInfoList( ScheduleInfo scheduleInfo ) {
		super( StudentDTD.SCHEDULEINFOLIST );
		this.safeAddChild( StudentDTD.SCHEDULEINFOLIST_SCHEDULEINFO, scheduleInfo );
	}

	/**
	 *  Adds a new <code>&lt;ScheduleInfo&gt;</code> repeatable element.
	 *  This form of <code>setScheduleInfo</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setScheduleInfo</code>
	 *  that accepts a single <code>ScheduleInfo</code> object.
	 *
	 *  @param termInfoRefId The schedule-related information for a section repeating for each term in which the section is scheduled. The TermInfoRefId attribute value should repeat as necessary to show the appropriate relationship between meeting times, teachers and rooms.
	 *  @since 1.1
	 */
	public void addScheduleInfo( String termInfoRefId ) {
		addChild( StudentDTD.SCHEDULEINFOLIST_SCHEDULEINFO, new ScheduleInfo( termInfoRefId ) );
	}

	/**
	 *  Removes a <code>ScheduleInfo</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param termInfoRefId Identifies the ScheduleInfo object to remove by its TermInfoRefId value
	 *  @since 1.1
	 */
	public void removeScheduleInfo( String termInfoRefId ) { 
		removeChild( StudentDTD.SCHEDULEINFOLIST_SCHEDULEINFO, new String[] { termInfoRefId.toString() } );
	}

	/**
	 *  Gets a <code>ScheduleInfo</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param termInfoRefId Identifies the ScheduleInfo object to return by its "TermInfoRefId" attribute value
	 *  @return A <code>ScheduleInfo</code> object
	 *  @since 1.1
	 */
	public ScheduleInfo getScheduleInfo( String termInfoRefId ) { 
		return (ScheduleInfo)getChild( StudentDTD.SCHEDULEINFOLIST_SCHEDULEINFO, new String[] { termInfoRefId.toString() } );
	}

	/**
	 *  Gets all <code>ScheduleInfo</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>ScheduleInfo</code> objects
	 *  @since 1.1
	 */
	public ScheduleInfo[] getScheduleInfos() {
		List<SIFElement> v = getChildList( StudentDTD.SCHEDULEINFOLIST_SCHEDULEINFO);
		ScheduleInfo[] cvt = new ScheduleInfo[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>ScheduleInfo</code> objects. All existing 
	 * <code>ScheduleInfo</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>ScheduleInfos</code>.
	 *
	 *  @since 1.1
	 */
	public void setScheduleInfos( ScheduleInfo[] scheduleinfos ) {
		setChildren( StudentDTD.SCHEDULEINFOLIST_SCHEDULEINFO, scheduleinfos );
	}

}
