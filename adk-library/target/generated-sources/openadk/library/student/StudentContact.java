// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.student;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  Contains a student's contact information.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.1
 */
public class StudentContact extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public StudentContact() {
		super( ADK.getSIFVersion(), StudentDTD.STUDENTCONTACT );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId The GUID of this contact.
	 *  @param studentPersonalRefId The GUID of the student whose contact this is.
	 *  @param type Type of student contact
	 *  @param name The name of the contact.  Note: Always use Type attribute value of 04.
	 */
	public StudentContact( String refId, String studentPersonalRefId, String type, Name name ) {
		super( ADK.getSIFVersion(), StudentDTD.STUDENTCONTACT );
		this.setRefId(refId);
		this.setStudentPersonalRefId(studentPersonalRefId);
		this.setType(type);
		this.setName(name);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( StudentDTD.STUDENTCONTACT_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { StudentDTD.STUDENTCONTACT_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The GUID of this contact."</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 1.1
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.STUDENTCONTACT_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The GUID of this contact."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setRefId( String value ) { 
		setFieldValue( StudentDTD.STUDENTCONTACT_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>StudentPersonalRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The GUID of the student whose contact this is."</i><p>
	 *
	 *  @return The <code>StudentPersonalRefId</code> attribute of this object.
	 *  @since 1.1
	 */
	public String getStudentPersonalRefId() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.STUDENTCONTACT_STUDENTPERSONALREFID );
	}

	/**
	 *  Sets the value of the <code>StudentPersonalRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The GUID of the student whose contact this is."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setStudentPersonalRefId( String value ) { 
		setFieldValue( StudentDTD.STUDENTCONTACT_STUDENTPERSONALREFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>Type</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Type of student contact"</i><p>
	 *
	 *  @return The <code>Type</code> attribute of this object.
	 *  @since 1.1
	 */
	public String getType() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.STUDENTCONTACT_TYPE );
	}

	/**
	 *  Sets the value of the <code>Type</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Type of student contact"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setType( String value ) { 
		setFieldValue( StudentDTD.STUDENTCONTACT_TYPE, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;LocalId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"
        The locally-assigned identifier for this contact.  Note: LocalId may be used as a unique person identifier
        rather than a unique contact identifier.  In this case there may be more than one StudentContact instance with the same LocalId.
      "</i><p>
	 *
	 *  @return The <code>LocalId</code> element of this object.
	 *  @since 2.0
	 */
	public String getLocalId() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.STUDENTCONTACT_LOCALID );
	}

	/**
	 *  Sets the value of the <code>&lt;LocalId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"
        The locally-assigned identifier for this contact.  Note: LocalId may be used as a unique person identifier
        rather than a unique contact identifier.  In this case there may be more than one StudentContact instance with the same LocalId.
      "</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.0
	 */
	public void setLocalId( String value ) { 
		setFieldValue( StudentDTD.STUDENTCONTACT_LOCALID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The name of the contact.  Note: Always use Type attribute value of 04."</i><p>
	 *
	 *  @param value A <code>Name</code> object
	 *  @since 1.1
	 */
	public void setName( Name value ) { 
		removeChild( StudentDTD.STUDENTCONTACT_NAME );
		addChild( StudentDTD.STUDENTCONTACT_NAME, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Name&gt;</code> child element.
	 *  This form of <code>setName</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setName</code>
	 *  that accepts a single <code>Name</code> object.
	 *
	 *  @param type Code that specifies what type of name this is.  If unsure, use 04.
	 *  @param lastName The last name.
	 *  @param firstName The first name.
	 *  @since 1.1
	 */
	public void setName( NameType type, String lastName, String firstName ) {
		removeChild( StudentDTD.STUDENTCONTACT_NAME);
		addChild( StudentDTD.STUDENTCONTACT_NAME, new Name( type, lastName, firstName ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The name of the contact.  Note: Always use Type attribute value of 04."</i><p>
	 *
	 *  @return A <code>Name</code> object
	 *  @since 1.1
	 */
	public Name getName() { 
		return (Name)getChild( StudentDTD.STUDENTCONTACT_NAME);
	}

	/**
	 *  Removes the <code>Name</code> child element previously created by calling <code>setName</code>
	 *
	 *  @since 1.1
	 */
	public void removeName() { 
		removeChild( StudentDTD.STUDENTCONTACT_NAME );
	}

	/**
	 *  Sets the value of the <code>&lt;PhoneNumberList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The contact's phone number(s)."</i><p>
	 *
	 *  @param value A <code>PhoneNumberList</code> object
	 *  @since 1.1
	 */
	public void setPhoneNumberList( PhoneNumberList value ) { 
		removeChild( StudentDTD.STUDENTCONTACT_PHONENUMBERLIST );
		addChild( StudentDTD.STUDENTCONTACT_PHONENUMBERLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;PhoneNumberList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The contact's phone number(s)."</i><p>
	 *
	 *  @return A <code>PhoneNumberList</code> object
	 *  @since 1.1
	 */
	public PhoneNumberList getPhoneNumberList() { 
		return (PhoneNumberList)getChild( StudentDTD.STUDENTCONTACT_PHONENUMBERLIST);
	}

	/**
	 *  Removes the <code>PhoneNumberList</code> child element previously created by calling <code>setPhoneNumberList</code>
	 *
	 *  @since 1.1
	 */
	public void removePhoneNumberList() { 
		removeChild( StudentDTD.STUDENTCONTACT_PHONENUMBERLIST );
	}

	/**
	 *  Sets the value of the <code>&lt;OtherNames&gt;</code> element.
	 *
	 *  @param value A <code>OtherNames</code> object
	 *  @since 2.0
	 */
	public void setOtherNames( OtherNames value ) { 
		removeChild( StudentDTD.STUDENTCONTACT_OTHERNAMES );
		addChild( StudentDTD.STUDENTCONTACT_OTHERNAMES, value);
	}

	/**
	 *  Gets the value of the <code>&lt;OtherNames&gt;</code> element.
	 *
	 *  @return An <code>OtherNames</code> object
	 *  @since 2.0
	 */
	public OtherNames getOtherNames() { 
		return (OtherNames)getChild( StudentDTD.STUDENTCONTACT_OTHERNAMES);
	}

	/**
	 *  Removes the <code>OtherNames</code> child element previously created by calling <code>setOtherNames</code>
	 *
	 *  @since 2.0
	 */
	public void removeOtherNames() { 
		removeChild( StudentDTD.STUDENTCONTACT_OTHERNAMES );
	}

	/**
	 *  Sets the value of the <code>&lt;EmailList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The contact's e-mail address(es)."</i><p>
	 *
	 *  @param value A <code>EmailList</code> object
	 *  @since 1.1
	 */
	public void setEmailList( EmailList value ) { 
		removeChild( StudentDTD.STUDENTCONTACT_EMAILLIST );
		addChild( StudentDTD.STUDENTCONTACT_EMAILLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;EmailList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The contact's e-mail address(es)."</i><p>
	 *
	 *  @return An <code>EmailList</code> object
	 *  @since 1.1
	 */
	public EmailList getEmailList() { 
		return (EmailList)getChild( StudentDTD.STUDENTCONTACT_EMAILLIST);
	}

	/**
	 *  Removes the <code>EmailList</code> child element previously created by calling <code>setEmailList</code>
	 *
	 *  @since 1.1
	 */
	public void removeEmailList() { 
		removeChild( StudentDTD.STUDENTCONTACT_EMAILLIST );
	}

	/**
	 *  Sets the value of the <code>&lt;Demographics&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Demographic information about the contact."</i><p>
	 *
	 *  @param value A <code>Demographics</code> object
	 *  @since 1.1
	 */
	public void setDemographics( Demographics value ) { 
		removeChild( StudentDTD.STUDENTCONTACT_DEMOGRAPHICS );
		addChild( StudentDTD.STUDENTCONTACT_DEMOGRAPHICS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;Demographics&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Demographic information about the contact."</i><p>
	 *
	 *  @return A <code>Demographics</code> object
	 *  @since 1.1
	 */
	public Demographics getDemographics() { 
		return (Demographics)getChild( StudentDTD.STUDENTCONTACT_DEMOGRAPHICS);
	}

	/**
	 *  Removes the <code>Demographics</code> child element previously created by calling <code>setDemographics</code>
	 *
	 *  @since 1.1
	 */
	public void removeDemographics() { 
		removeChild( StudentDTD.STUDENTCONTACT_DEMOGRAPHICS );
	}

	/**
	 *  Sets the value of the <code>&lt;AddressList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The contact's address(es)."</i><p>
	 *
	 *  @param value A <code>AddressList</code> object
	 *  @since 1.1
	 */
	public void setAddressList( AddressList value ) { 
		removeChild( StudentDTD.STUDENTCONTACT_ADDRESSLIST );
		addChild( StudentDTD.STUDENTCONTACT_ADDRESSLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;AddressList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The contact's address(es)."</i><p>
	 *
	 *  @return An <code>AddressList</code> object
	 *  @since 1.1
	 */
	public AddressList getAddressList() { 
		return (AddressList)getChild( StudentDTD.STUDENTCONTACT_ADDRESSLIST);
	}

	/**
	 *  Removes the <code>AddressList</code> child element previously created by calling <code>setAddressList</code>
	 *
	 *  @since 1.1
	 */
	public void removeAddressList() { 
		removeChild( StudentDTD.STUDENTCONTACT_ADDRESSLIST );
	}

	/**
	 *  Sets the value of the <code>&lt;OtherIdList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Lists all "other" IDs associated with the contact."</i><p>
	 *
	 *  @param value A <code>OtherIdList</code> object
	 *  @since 1.1
	 */
	public void setOtherIdList( OtherIdList value ) { 
		removeChild( StudentDTD.STUDENTCONTACT_OTHERIDLIST );
		addChild( StudentDTD.STUDENTCONTACT_OTHERIDLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;OtherIdList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Lists all "other" IDs associated with the contact."</i><p>
	 *
	 *  @return An <code>OtherIdList</code> object
	 *  @since 1.1
	 */
	public OtherIdList getOtherIdList() { 
		return (OtherIdList)getChild( StudentDTD.STUDENTCONTACT_OTHERIDLIST);
	}

	/**
	 *  Removes the <code>OtherIdList</code> child element previously created by calling <code>setOtherIdList</code>
	 *
	 *  @since 1.1
	 */
	public void removeOtherIdList() { 
		removeChild( StudentDTD.STUDENTCONTACT_OTHERIDLIST );
	}

	/**
	 *  Sets the value of the <code>&lt;Relationship&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Defines the relationship of the contact to the student."</i><p>
	 *
	 *  @param value A <code>Relationship</code> object
	 *  @since 1.1
	 */
	public void setRelationship( Relationship value ) { 
		removeChild( StudentDTD.STUDENTCONTACT_RELATIONSHIP );
		addChild( StudentDTD.STUDENTCONTACT_RELATIONSHIP, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Relationship&gt;</code> child element.
	 *  This form of <code>setRelationship</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setRelationship</code>
	 *  that accepts a single <code>Relationship</code> object.
	 *
	 *  @param code Code representing the relationship.
	 *  @since 1.1
	 */
	public void setRelationship( RelationshipCode code ) {
		removeChild( StudentDTD.STUDENTCONTACT_RELATIONSHIP);
		addChild( StudentDTD.STUDENTCONTACT_RELATIONSHIP, new Relationship( code ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Relationship&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Defines the relationship of the contact to the student."</i><p>
	 *
	 *  @return A <code>Relationship</code> object
	 *  @since 1.1
	 */
	public Relationship getRelationship() { 
		return (Relationship)getChild( StudentDTD.STUDENTCONTACT_RELATIONSHIP);
	}

	/**
	 *  Removes the <code>Relationship</code> child element previously created by calling <code>setRelationship</code>
	 *
	 *  @since 1.1
	 */
	public void removeRelationship() { 
		removeChild( StudentDTD.STUDENTCONTACT_RELATIONSHIP );
	}

	/**
	 *  Gets the value of the <code>&lt;EmployerType&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Code that defines the employer type."</i><p>
	 *
	 *  @return The <code>EmployerType</code> element of this object.
	 *  @since 1.1
	 */
	public String getEmployerType() { 
		return getFieldValue( StudentDTD.STUDENTCONTACT_EMPLOYERTYPE );
	}

	/**
	 *  Sets the value of the <code>&lt;EmployerType&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Code that defines the employer type."</i><p>
	 *
	 *  @param value A constant defined by the <code>EmployerTypeCode</code> class
	 *  @since 1.1
	 */
	public void setEmployerType( EmployerTypeCode value ) { 
		setField( StudentDTD.STUDENTCONTACT_EMPLOYERTYPE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;EmployerType&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Code that defines the employer type."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.1
	 */
	public void setEmployerType( String value ) { 
		setField( StudentDTD.STUDENTCONTACT_EMPLOYERTYPE, value );
	}

	/**
	 *  Gets the value of the <code>&lt;EducationalLevel&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The highest level of education completed by the contact person."</i><p>
	 *
	 *  @return The <code>EducationalLevel</code> element of this object.
	 *  @since 1.1
	 */
	public String getEducationalLevel() { 
		return getFieldValue( StudentDTD.STUDENTCONTACT_EDUCATIONALLEVEL );
	}

	/**
	 *  Sets the value of the <code>&lt;EducationalLevel&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The highest level of education completed by the contact person."</i><p>
	 *
	 *  @param value A constant defined by the <code>EducationalLevelCode</code> class
	 *  @since 1.1
	 */
	public void setEducationalLevel( EducationalLevelCode value ) { 
		setField( StudentDTD.STUDENTCONTACT_EDUCATIONALLEVEL, value );
	}

	/**
	 *  Sets the value of the <code>&lt;EducationalLevel&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The highest level of education completed by the contact person."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.1
	 */
	public void setEducationalLevel( String value ) { 
		setField( StudentDTD.STUDENTCONTACT_EDUCATIONALLEVEL, value );
	}

	/**
	 *  Sets the value of the <code>&lt;ContactFlags&gt;</code> element.
	 *
	 *  @param value A <code>ContactFlags</code> object
	 *  @since 1.1
	 */
	public void setContactFlags( ContactFlags value ) { 
		removeChild( StudentDTD.STUDENTCONTACT_CONTACTFLAGS );
		addChild( StudentDTD.STUDENTCONTACT_CONTACTFLAGS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;ContactFlags&gt;</code> element.
	 *
	 *  @return A <code>ContactFlags</code> object
	 *  @since 1.1
	 */
	public ContactFlags getContactFlags() { 
		return (ContactFlags)getChild( StudentDTD.STUDENTCONTACT_CONTACTFLAGS);
	}

	/**
	 *  Removes the <code>ContactFlags</code> child element previously created by calling <code>setContactFlags</code>
	 *
	 *  @since 1.1
	 */
	public void removeContactFlags() { 
		removeChild( StudentDTD.STUDENTCONTACT_CONTACTFLAGS );
	}

	/**
	 *  Gets the value of the <code>&lt;ContactSequence&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Number indicating the order in which the person should be contacted."</i><p>
	 *
	 *  @return The <code>ContactSequence</code> element of this object.
	 *  @since 2.0
	 */
	public Integer getContactSequence() { 
		return (Integer) getSIFSimpleFieldValue( StudentDTD.STUDENTCONTACT_CONTACTSEQUENCE );
	}

	/**
	 *  Sets the value of the <code>&lt;ContactSequence&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Number indicating the order in which the person should be contacted."</i><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 2.0
	 */
	public void setContactSequence( Integer value ) { 
		setFieldValue( StudentDTD.STUDENTCONTACT_CONTACTSEQUENCE, new SIFInt( value ), value );
	}

}
