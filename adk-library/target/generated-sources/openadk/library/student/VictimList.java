// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.student;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.0
 */
public class VictimList extends SIFKeyedList<Victim>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public VictimList() {
		super( StudentDTD.VICTIMLIST );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param victim 
	 */
	public VictimList( Victim victim ) {
		super( StudentDTD.VICTIMLIST );
		this.safeAddChild( StudentDTD.VICTIMLIST_VICTIM, victim );
	}

	/**
	 *  Adds a new <code>&lt;Victim&gt;</code> repeatable element.
	 *  This form of <code>setVictim</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setVictim</code>
	 *  that accepts a single <code>Victim</code> object.
	 *
	 *  @param type Identifies the type of individual victimized in the incident.
	 *  @since 2.0
	 */
	public void addVictim( ReporterDescriptionType type ) {
		addChild( StudentDTD.VICTIMLIST_VICTIM, new Victim( type ) );
	}

	/**
	 *  Removes a <code>Victim</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the Victim object to remove by its Type value
	 *  @since 2.0
	 */
	public void removeVictim( ReporterDescriptionType type ) { 
		removeChild( StudentDTD.VICTIMLIST_VICTIM, new String[] { type.toString() } );
	}

	/**
	 *  Gets a <code>Victim</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the Victim object to return by its "Type" attribute value
	 *  @return A <code>Victim</code> object
	 *  @since 2.0
	 */
	public Victim getVictim( ReporterDescriptionType type ) { 
		return (Victim)getChild( StudentDTD.VICTIMLIST_VICTIM, new String[] { type.toString() } );
	}

	/**
	 *  Gets all <code>Victim</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>Victim</code> objects
	 *  @since 2.0
	 */
	public Victim[] getVictims() {
		List<SIFElement> v = getChildList( StudentDTD.VICTIMLIST_VICTIM);
		Victim[] cvt = new Victim[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>Victim</code> objects. All existing 
	 * <code>Victim</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>Victims</code>.
	 *
	 *  @since 2.0
	 */
	public void setVictims( Victim[] victims ) {
		setChildren( StudentDTD.VICTIMLIST_VICTIM, victims );
	}

}
