// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.student;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  Contains all of the personal information relating to a staff member, who might be a teacher or other employee of the school or district.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.1
 */
public class StaffPersonal extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public StaffPersonal() {
		super( ADK.getSIFVersion(), StudentDTD.STAFFPERSONAL );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId The GUID of the staff member.
	 *  @param name Name of the staff member.  Note: Always use Type value of 04.
	 */
	public StaffPersonal( String refId, Name name ) {
		super( ADK.getSIFVersion(), StudentDTD.STAFFPERSONAL );
		this.setRefId(refId);
		this.setName(name);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( StudentDTD.STAFFPERSONAL_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { StudentDTD.STAFFPERSONAL_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The GUID of the staff member."</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 1.1
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.STAFFPERSONAL_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The GUID of the staff member."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setRefId( String value ) { 
		setFieldValue( StudentDTD.STAFFPERSONAL_REFID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;OtherIdList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Lists all "other" identifiers associated with the staff member."</i><p>
	 *
	 *  @param value A <code>OtherIdList</code> object
	 *  @since 1.1
	 */
	public void setOtherIdList( OtherIdList value ) { 
		removeChild( StudentDTD.STAFFPERSONAL_OTHERIDLIST );
		addChild( StudentDTD.STAFFPERSONAL_OTHERIDLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;OtherIdList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Lists all "other" identifiers associated with the staff member."</i><p>
	 *
	 *  @return An <code>OtherIdList</code> object
	 *  @since 1.1
	 */
	public OtherIdList getOtherIdList() { 
		return (OtherIdList)getChild( StudentDTD.STAFFPERSONAL_OTHERIDLIST);
	}

	/**
	 *  Removes the <code>OtherIdList</code> child element previously created by calling <code>setOtherIdList</code>
	 *
	 *  @since 1.1
	 */
	public void removeOtherIdList() { 
		removeChild( StudentDTD.STAFFPERSONAL_OTHERIDLIST );
	}

	/**
	 *  Gets the value of the <code>&lt;LocalId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The locally-assigned identifier for this staff member."</i><p>
	 *
	 *  @return The <code>LocalId</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getLocalId() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.STAFFPERSONAL_LOCALID );
	}

	/**
	 *  Sets the value of the <code>&lt;LocalId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The locally-assigned identifier for this staff member."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setLocalId( String value ) { 
		setFieldValue( StudentDTD.STAFFPERSONAL_LOCALID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Name of the staff member.  Note: Always use Type value of 04."</i><p>
	 *
	 *  @param value A <code>Name</code> object
	 *  @since 1.1
	 */
	public void setName( Name value ) { 
		removeChild( StudentDTD.STAFFPERSONAL_NAME );
		addChild( StudentDTD.STAFFPERSONAL_NAME, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Name&gt;</code> child element.
	 *  This form of <code>setName</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setName</code>
	 *  that accepts a single <code>Name</code> object.
	 *
	 *  @param type Code that specifies what type of name this is.  If unsure, use 04.
	 *  @param lastName The last name.
	 *  @param firstName The first name.
	 *  @since 1.1
	 */
	public void setName( NameType type, String lastName, String firstName ) {
		removeChild( StudentDTD.STAFFPERSONAL_NAME);
		addChild( StudentDTD.STAFFPERSONAL_NAME, new Name( type, lastName, firstName ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Name of the staff member.  Note: Always use Type value of 04."</i><p>
	 *
	 *  @return A <code>Name</code> object
	 *  @since 1.1
	 */
	public Name getName() { 
		return (Name)getChild( StudentDTD.STAFFPERSONAL_NAME);
	}

	/**
	 *  Removes the <code>Name</code> child element previously created by calling <code>setName</code>
	 *
	 *  @since 1.1
	 */
	public void removeName() { 
		removeChild( StudentDTD.STAFFPERSONAL_NAME );
	}

	/**
	 *  Gets the value of the <code>&lt;StateProvinceId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The state-assigned identifier for this staff member."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"StatePrId"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"StateProvinceId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>StateProvinceId</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getStateProvinceId() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.STAFFPERSONAL_STATEPROVINCEID );
	}

	/**
	 *  Sets the value of the <code>&lt;StateProvinceId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The state-assigned identifier for this staff member."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"StatePrId"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"StateProvinceId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setStateProvinceId( String value ) { 
		setFieldValue( StudentDTD.STAFFPERSONAL_STATEPROVINCEID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;ElectronicIdList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Electronic identifier(s) associated with this entity."</i><p>
	 *
	 *  @param value A <code>ElectronicIdList</code> object
	 *  @since 1.5r1
	 */
	public void setElectronicIdList( ElectronicIdList value ) { 
		removeChild( StudentDTD.STAFFPERSONAL_ELECTRONICIDLIST );
		addChild( StudentDTD.STAFFPERSONAL_ELECTRONICIDLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;ElectronicIdList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Electronic identifier(s) associated with this entity."</i><p>
	 *
	 *  @return An <code>ElectronicIdList</code> object
	 *  @since 1.5r1
	 */
	public ElectronicIdList getElectronicIdList() { 
		return (ElectronicIdList)getChild( StudentDTD.STAFFPERSONAL_ELECTRONICIDLIST);
	}

	/**
	 *  Removes the <code>ElectronicIdList</code> child element previously created by calling <code>setElectronicIdList</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeElectronicIdList() { 
		removeChild( StudentDTD.STAFFPERSONAL_ELECTRONICIDLIST );
	}

	/**
	 *  Gets the value of the <code>&lt;Title&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The staff member's title."</i><p>
	 *
	 *  @return The <code>Title</code> element of this object.
	 *  @since 1.1
	 */
	public String getTitle() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.STAFFPERSONAL_TITLE );
	}

	/**
	 *  Sets the value of the <code>&lt;Title&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The staff member's title."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setTitle( String value ) { 
		setFieldValue( StudentDTD.STAFFPERSONAL_TITLE, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;EmailList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The staff member's e-mail address(es)."</i><p>
	 *
	 *  @param value A <code>EmailList</code> object
	 *  @since 1.1
	 */
	public void setEmailList( EmailList value ) { 
		removeChild( StudentDTD.STAFFPERSONAL_EMAILLIST );
		addChild( StudentDTD.STAFFPERSONAL_EMAILLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;EmailList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The staff member's e-mail address(es)."</i><p>
	 *
	 *  @return An <code>EmailList</code> object
	 *  @since 1.1
	 */
	public EmailList getEmailList() { 
		return (EmailList)getChild( StudentDTD.STAFFPERSONAL_EMAILLIST);
	}

	/**
	 *  Removes the <code>EmailList</code> child element previously created by calling <code>setEmailList</code>
	 *
	 *  @since 1.1
	 */
	public void removeEmailList() { 
		removeChild( StudentDTD.STAFFPERSONAL_EMAILLIST );
	}

	/**
	 *  Sets the value of the <code>&lt;Demographics&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element contains information related to staff member demographics."</i><p>
	 *
	 *  @param value A <code>Demographics</code> object
	 *  @since 1.1
	 */
	public void setDemographics( Demographics value ) { 
		removeChild( StudentDTD.STAFFPERSONAL_DEMOGRAPHICS );
		addChild( StudentDTD.STAFFPERSONAL_DEMOGRAPHICS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;Demographics&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element contains information related to staff member demographics."</i><p>
	 *
	 *  @return A <code>Demographics</code> object
	 *  @since 1.1
	 */
	public Demographics getDemographics() { 
		return (Demographics)getChild( StudentDTD.STAFFPERSONAL_DEMOGRAPHICS);
	}

	/**
	 *  Removes the <code>Demographics</code> child element previously created by calling <code>setDemographics</code>
	 *
	 *  @since 1.1
	 */
	public void removeDemographics() { 
		removeChild( StudentDTD.STAFFPERSONAL_DEMOGRAPHICS );
	}

	/**
	 *  Sets the value of the <code>&lt;OtherNames&gt;</code> element.
	 *
	 *  @param value A <code>OtherNames</code> object
	 *  @since 2.0
	 */
	public void setOtherNames( OtherNames value ) { 
		removeChild( StudentDTD.STAFFPERSONAL_OTHERNAMES );
		addChild( StudentDTD.STAFFPERSONAL_OTHERNAMES, value);
	}

	/**
	 *  Gets the value of the <code>&lt;OtherNames&gt;</code> element.
	 *
	 *  @return An <code>OtherNames</code> object
	 *  @since 2.0
	 */
	public OtherNames getOtherNames() { 
		return (OtherNames)getChild( StudentDTD.STAFFPERSONAL_OTHERNAMES);
	}

	/**
	 *  Removes the <code>OtherNames</code> child element previously created by calling <code>setOtherNames</code>
	 *
	 *  @since 2.0
	 */
	public void removeOtherNames() { 
		removeChild( StudentDTD.STAFFPERSONAL_OTHERNAMES );
	}

	/**
	 *  Sets the value of the <code>&lt;AddressList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The staff member's address(es)."</i><p>
	 *
	 *  @param value A <code>AddressList</code> object
	 *  @since 1.1
	 */
	public void setAddressList( AddressList value ) { 
		removeChild( StudentDTD.STAFFPERSONAL_ADDRESSLIST );
		addChild( StudentDTD.STAFFPERSONAL_ADDRESSLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;AddressList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The staff member's address(es)."</i><p>
	 *
	 *  @return An <code>AddressList</code> object
	 *  @since 1.1
	 */
	public AddressList getAddressList() { 
		return (AddressList)getChild( StudentDTD.STAFFPERSONAL_ADDRESSLIST);
	}

	/**
	 *  Removes the <code>AddressList</code> child element previously created by calling <code>setAddressList</code>
	 *
	 *  @since 1.1
	 */
	public void removeAddressList() { 
		removeChild( StudentDTD.STAFFPERSONAL_ADDRESSLIST );
	}

	/**
	 *  Sets the value of the <code>&lt;PhoneNumberList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The staff member's phone number(s)."</i><p>
	 *
	 *  @param value A <code>PhoneNumberList</code> object
	 *  @since 1.1
	 */
	public void setPhoneNumberList( PhoneNumberList value ) { 
		removeChild( StudentDTD.STAFFPERSONAL_PHONENUMBERLIST );
		addChild( StudentDTD.STAFFPERSONAL_PHONENUMBERLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;PhoneNumberList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The staff member's phone number(s)."</i><p>
	 *
	 *  @return A <code>PhoneNumberList</code> object
	 *  @since 1.1
	 */
	public PhoneNumberList getPhoneNumberList() { 
		return (PhoneNumberList)getChild( StudentDTD.STAFFPERSONAL_PHONENUMBERLIST);
	}

	/**
	 *  Removes the <code>PhoneNumberList</code> child element previously created by calling <code>setPhoneNumberList</code>
	 *
	 *  @since 1.1
	 */
	public void removePhoneNumberList() { 
		removeChild( StudentDTD.STAFFPERSONAL_PHONENUMBERLIST );
	}

	/**
	 *  Gets the value of the <code>&lt;EmployeePersonalRefId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Allows for a linkage to the HR/Fin EmployeePersonal object."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"EmployeeLink"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"EmployeePersonalRefId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>EmployeePersonalRefId</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getEmployeePersonalRefId() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.STAFFPERSONAL_EMPLOYEEPERSONALREFID );
	}

	/**
	 *  Sets the value of the <code>&lt;EmployeePersonalRefId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Allows for a linkage to the HR/Fin EmployeePersonal object."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"EmployeeLink"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"EmployeePersonalRefId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setEmployeePersonalRefId( String value ) { 
		setFieldValue( StudentDTD.STAFFPERSONAL_EMPLOYEEPERSONALREFID, new SIFString( value ), value );
	}

}
