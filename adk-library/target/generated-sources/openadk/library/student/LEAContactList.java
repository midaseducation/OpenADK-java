// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.student;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class LEAContactList extends SIFKeyedList<LEAContact>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public LEAContactList() {
		super( StudentDTD.LEACONTACTLIST );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param leaContact Information on contact persons for this LEA.
	 */
	public LEAContactList( LEAContact leaContact ) {
		super( StudentDTD.LEACONTACTLIST );
		this.safeAddChild( StudentDTD.LEACONTACTLIST_LEACONTACT, leaContact );
	}

	/**
	 *  Adds a new <code>&lt;LEAContact&gt;</code> repeatable element.
	 *  This form of <code>setLEAContact</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setLEAContact</code>
	 *  that accepts a single <code>LEAContact</code> object.
	 *
	 *  @param contactInfo For a description of this element, see 5.1.3 ContactInfo.
	 *  @since 1.5r1
	 */
	public void addLEAContact( ContactInfo contactInfo ) {
		addChild( StudentDTD.LEACONTACTLIST_LEACONTACT, new LEAContact( contactInfo ) );
	}

	/**
	 *  Removes a <code>LEAContact</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param contactInfo Identifies the LEAContact object to remove by its ContactInfo value
	 *  @since 1.5r1
	 */
	public void removeLEAContact( ContactInfo contactInfo ) { 
		removeChild( StudentDTD.LEACONTACTLIST_LEACONTACT, new String[] { contactInfo.toString() } );
	}

	/**
	 *  Gets a <code>LEAContact</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param contactInfo Identifies the LEAContact object to return by its "ContactInfo" attribute value
	 *  @return A <code>LEAContact</code> object
	 *  @since 1.5r1
	 */
	public LEAContact getLEAContact( ContactInfo contactInfo ) { 
		return (LEAContact)getChild( StudentDTD.LEACONTACTLIST_LEACONTACT, new String[] { contactInfo.toString() } );
	}

	/**
	 *  Gets all <code>LEAContact</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>LEAContact</code> objects
	 *  @since 1.5r1
	 */
	public LEAContact[] getLEAContacts() {
		List<SIFElement> v = getChildList( StudentDTD.LEACONTACTLIST_LEACONTACT);
		LEAContact[] cvt = new LEAContact[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>LEAContact</code> objects. All existing 
	 * <code>LEAContact</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>LEAContacts</code>.
	 *
	 *  @since 1.5r1
	 */
	public void setLEAContacts( LEAContact[] leacontacts ) {
		setChildren( StudentDTD.LEACONTACTLIST_LEACONTACT, leacontacts );
	}

}
