// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.student;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.0
 */
public class ActionList extends SIFList<Action>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public ActionList() {
		super( StudentDTD.ACTIONLIST );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param action 
	 */
	public ActionList( Action action ) {
		super( StudentDTD.ACTIONLIST );
		this.safeAddChild( StudentDTD.ACTIONLIST_ACTION, action );
	}

	/**
	 *  Adds a new <code>&lt;Action&gt;</code> repeatable element.
	 *  This form of <code>setAction</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setAction</code>
	 *  that accepts a single <code>Action</code> object.
	 *
	 *  @param code 
	 *  @param startDate The date on which the disciplinary action begins.
	 *  @param endDate The date through which the disciplinary action is in effect, inclusive.
	 *  @param duration Identifies the length, in school days, of the disciplinary action.  Note: decimal places may be used for fractions of school days.
	 *  @param zeroTolerance Identifies whether or not this action taken against a student was imposed as a consequence of state or local zero tolerance policies.
	 *  @param fullYearExpulsion Identifies whether or not the action involved an expulsion with or without services for a period of one full year (i.e., 365 days).
	 *  @param shortenedExpulsion Identifies whether or not the action involved an expulsion with or without services that is shortened to a term of less than one year by the superintendent or chief administrator of a school district.
	 *  @param policeNotification Identifies whether or not the offender's action included notification of local law enforcement, regardless of whether official action was taken.
	 *  @param arrest Identifies whether or not the offender was arrested.
	 *  @param alternativeEducation Identifies whether or not the offender was assigned to an Alternative Education facility.
	 *  @since 2.0
	 */
	public void addAction( String code, Calendar startDate, Calendar endDate, BigDecimal duration, YesNo zeroTolerance, YesNo fullYearExpulsion, YesNo shortenedExpulsion, YesNo policeNotification, ArrestStatus arrest, YesNo alternativeEducation ) {
		addChild( StudentDTD.ACTIONLIST_ACTION, new Action( code, startDate, endDate, duration, zeroTolerance, fullYearExpulsion, shortenedExpulsion, policeNotification, arrest, alternativeEducation ) );
	}

	/**
	 *  Gets all <code>Action</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>Action</code> objects
	 *  @since 2.0
	 */
	public Action[] getActions() {
		List<SIFElement> v = getChildList( StudentDTD.ACTIONLIST_ACTION);
		Action[] cvt = new Action[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>Action</code> objects. All existing 
	 * <code>Action</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>Actions</code>.
	 *
	 *  @since 2.0
	 */
	public void setActions( Action[] actions ) {
		setChildren( StudentDTD.ACTIONLIST_ACTION, actions );
	}

}
