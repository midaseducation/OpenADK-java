// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.student;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.1
 */
public class SectionRoomList extends SIFKeyedList<RoomInfoRefId>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public SectionRoomList() {
		super( StudentDTD.SECTIONROOMLIST );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param roomInfoRefId The ID (GUID) of the room in which this section is taught
	 */
	public SectionRoomList( RoomInfoRefId roomInfoRefId ) {
		super( StudentDTD.SECTIONROOMLIST );
		this.safeAddChild( StudentDTD.SECTIONROOMLIST_ROOMINFOREFID, roomInfoRefId );
	}

	/**
	 *  Adds a new <code>&lt;RoomInfoRefId&gt;</code> repeatable element.
	 *  This form of <code>setRoomInfoRefId</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setRoomInfoRefId</code>
	 *  that accepts a single <code>RoomInfoRefId</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;RoomInfoRefId&gt; element
	 *  @since 1.1
	 */
	public void addRoomInfoRefId( String value ) {
		addChild( StudentDTD.SECTIONROOMLIST_ROOMINFOREFID, new RoomInfoRefId( value ) );
	}

	/**
	 *  Removes a <code>RoomInfoRefId</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param value Identifies the RoomInfoRefId object to remove by its Value value
	 *  @since 1.1
	 */
	public void removeRoomInfoRefId( String value ) { 
		removeChild( StudentDTD.SECTIONROOMLIST_ROOMINFOREFID, new String[] { value.toString() } );
	}

	/**
	 *  Gets a <code>RoomInfoRefId</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param value Identifies the RoomInfoRefId object to return by its "Value" attribute value
	 *  @return A <code>RoomInfoRefId</code> object
	 *  @since 1.1
	 */
	public RoomInfoRefId getRoomInfoRefId( String value ) { 
		return (RoomInfoRefId)getChild( StudentDTD.SECTIONROOMLIST_ROOMINFOREFID, new String[] { value.toString() } );
	}

	/**
	 *  Gets all <code>RoomInfoRefId</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>RoomInfoRefId</code> objects
	 *  @since 1.1
	 */
	public RoomInfoRefId[] getRoomInfoRefIds() {
		List<SIFElement> v = getChildList( StudentDTD.SECTIONROOMLIST_ROOMINFOREFID);
		RoomInfoRefId[] cvt = new RoomInfoRefId[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>RoomInfoRefId</code> objects. All existing 
	 * <code>RoomInfoRefId</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>RoomInfoRefIds</code>.
	 *
	 *  @since 1.1
	 */
	public void setRoomInfoRefIds( RoomInfoRefId[] roominforefids ) {
		setChildren( StudentDTD.SECTIONROOMLIST_ROOMINFOREFID, roominforefids );
	}

}
