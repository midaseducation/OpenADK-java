// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.student;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  This object contains all of the information about a school's room. This object contains a reference to a room type so that it may represent anything from a gym, cafeteria, to a standard classroom.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.1
 */
public class RoomInfo extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public RoomInfo() {
		super( ADK.getSIFVersion(), StudentDTD.ROOMINFO );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId GUID that identifies this room.
	 *  @param schoolInfoRefId GUID that identifies the school that this room belongs to.
	 */
	public RoomInfo( String refId, String schoolInfoRefId ) {
		super( ADK.getSIFVersion(), StudentDTD.ROOMINFO );
		this.setRefId(refId);
		this.setSchoolInfoRefId(schoolInfoRefId);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( StudentDTD.ROOMINFO_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { StudentDTD.ROOMINFO_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID that identifies this room."</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 1.1
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.ROOMINFO_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID that identifies this room."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setRefId( String value ) { 
		setFieldValue( StudentDTD.ROOMINFO_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>SchoolInfoRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID that identifies the school that this room belongs to."</i><p>
	 *
	 *  @return The <code>SchoolInfoRefId</code> attribute of this object.
	 *  @since 1.1
	 */
	public String getSchoolInfoRefId() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.ROOMINFO_SCHOOLINFOREFID );
	}

	/**
	 *  Sets the value of the <code>SchoolInfoRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID that identifies the school that this room belongs to."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setSchoolInfoRefId( String value ) { 
		setFieldValue( StudentDTD.ROOMINFO_SCHOOLINFOREFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;RoomNumber&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Room number as presented to the user/application."</i><p>
	 *
	 *  @return The <code>RoomNumber</code> element of this object.
	 *  @since 1.1
	 */
	public String getRoomNumber() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.ROOMINFO_ROOMNUMBER );
	}

	/**
	 *  Sets the value of the <code>&lt;RoomNumber&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Room number as presented to the user/application."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setRoomNumber( String value ) { 
		setFieldValue( StudentDTD.ROOMINFO_ROOMNUMBER, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;StaffList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Staff assigned to this room. For example, the homeroom teacher."</i><p>
	 *
	 *  @param value A <code>StaffList</code> object
	 *  @since 1.1
	 */
	public void setStaffList( StaffList value ) { 
		removeChild( StudentDTD.ROOMINFO_STAFFLIST );
		addChild( StudentDTD.ROOMINFO_STAFFLIST, value);
	}

	/**
	 *  Sets the value of the <code>&lt;StaffList&gt;</code> child element.
	 *  This form of <code>setStaffList</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setStaffList</code>
	 *  that accepts a single <code>StaffList</code> object.
	 *
	 *  @param staffPersonalRefId Staff assigned to this room. For example, the homeroom teacher.
	 *  @since 1.1
	 */
	public void setStaffList( StaffPersonalRefId staffPersonalRefId ) {
		removeChild( StudentDTD.ROOMINFO_STAFFLIST);
		addChild( StudentDTD.ROOMINFO_STAFFLIST, new StaffList( staffPersonalRefId ) );
	}

	/**
	 *  Gets the value of the <code>&lt;StaffList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Staff assigned to this room. For example, the homeroom teacher."</i><p>
	 *
	 *  @return A <code>StaffList</code> object
	 *  @since 1.1
	 */
	public StaffList getStaffList() { 
		return (StaffList)getChild( StudentDTD.ROOMINFO_STAFFLIST);
	}

	/**
	 *  Removes the <code>StaffList</code> child element previously created by calling <code>setStaffList</code>
	 *
	 *  @since 1.1
	 */
	public void removeStaffList() { 
		removeChild( StudentDTD.ROOMINFO_STAFFLIST );
	}

	/**
	 *  Gets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Friendly name that can be assigned to the room (e.g. Staff Cafeteria)."</i><p>
	 *
	 *  @return The <code>Description</code> element of this object.
	 *  @since 1.1
	 */
	public String getDescription() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.ROOMINFO_DESCRIPTION );
	}

	/**
	 *  Sets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Friendly name that can be assigned to the room (e.g. Staff Cafeteria)."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setDescription( String value ) { 
		setFieldValue( StudentDTD.ROOMINFO_DESCRIPTION, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Building&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Extra building information. In the future Building could become its own object in which case this element will need to be changed to a RefId. Currently it is only required as a free text field."</i><p>
	 *
	 *  @return The <code>Building</code> element of this object.
	 *  @since 1.1
	 */
	public String getBuilding() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.ROOMINFO_BUILDING );
	}

	/**
	 *  Sets the value of the <code>&lt;Building&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Extra building information. In the future Building could become its own object in which case this element will need to be changed to a RefId. Currently it is only required as a free text field."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setBuilding( String value ) { 
		setFieldValue( StudentDTD.ROOMINFO_BUILDING, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;HomeroomNumber&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"When a room is designated as a homeroom it may have a different number. Usually blank when room is not a homeroom."</i><p>
	 *
	 *  @return The <code>HomeroomNumber</code> element of this object.
	 *  @since 1.1
	 */
	public String getHomeroomNumber() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.ROOMINFO_HOMEROOMNUMBER );
	}

	/**
	 *  Sets the value of the <code>&lt;HomeroomNumber&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"When a room is designated as a homeroom it may have a different number. Usually blank when room is not a homeroom."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setHomeroomNumber( String value ) { 
		setFieldValue( StudentDTD.ROOMINFO_HOMEROOMNUMBER, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Size&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Size in square feet."</i><p>
	 *
	 *  @return The <code>Size</code> element of this object.
	 *  @since 1.1
	 */
	public Integer getSize() { 
		return (Integer) getSIFSimpleFieldValue( StudentDTD.ROOMINFO_SIZE );
	}

	/**
	 *  Sets the value of the <code>&lt;Size&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Size in square feet."</i><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 1.1
	 */
	public void setSize( Integer value ) { 
		setFieldValue( StudentDTD.ROOMINFO_SIZE, new SIFInt( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Capacity&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Number of persons (usually students) that this room can hold."</i><p>
	 *
	 *  @return The <code>Capacity</code> element of this object.
	 *  @since 1.1
	 */
	public Integer getCapacity() { 
		return (Integer) getSIFSimpleFieldValue( StudentDTD.ROOMINFO_CAPACITY );
	}

	/**
	 *  Sets the value of the <code>&lt;Capacity&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Number of persons (usually students) that this room can hold."</i><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 1.1
	 */
	public void setCapacity( Integer value ) { 
		setFieldValue( StudentDTD.ROOMINFO_CAPACITY, new SIFInt( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;PhoneNumber&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Phone number for the room"</i><p>
	 *
	 *  @param value A <code>PhoneNumber</code> object
	 *  @since 1.1
	 */
	public void setPhoneNumber( PhoneNumber value ) { 
		removeChild( StudentDTD.ROOMINFO_PHONENUMBER );
		addChild( StudentDTD.ROOMINFO_PHONENUMBER, value);
	}

	/**
	 *  Sets the value of the <code>&lt;PhoneNumber&gt;</code> child element.
	 *  This form of <code>setPhoneNumber</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setPhoneNumber</code>
	 *  that accepts a single <code>PhoneNumber</code> object.
	 *
	 *  @param type Code that specifies what type of phone number this is.  Note: A subset of valid values may be specified in data objects.
	 *  @param number Phone number.  Acceptable formats:
	 *  @since 1.1
	 */
	public void setPhoneNumber( PhoneNumberType type, String number ) {
		removeChild( StudentDTD.ROOMINFO_PHONENUMBER);
		addChild( StudentDTD.ROOMINFO_PHONENUMBER, new PhoneNumber( type, number ) );
	}

	/**
	 *  Gets the value of the <code>&lt;PhoneNumber&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Phone number for the room"</i><p>
	 *
	 *  @return A <code>PhoneNumber</code> object
	 *  @since 1.1
	 */
	public PhoneNumber getPhoneNumber() { 
		return (PhoneNumber)getChild( StudentDTD.ROOMINFO_PHONENUMBER);
	}

	/**
	 *  Removes the <code>PhoneNumber</code> child element previously created by calling <code>setPhoneNumber</code>
	 *
	 *  @since 1.1
	 */
	public void removePhoneNumber() { 
		removeChild( StudentDTD.ROOMINFO_PHONENUMBER );
	}

	/**
	 *  Gets the value of the <code>&lt;RoomTypeRefId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"GUID that identifies the room type assigned to this room."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"TypeOfRoom"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"RoomTypeRefId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>RoomTypeRefId</code> element of this object.
	 *  @since 1.1
	 */
	public String getRoomTypeRefId() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.ROOMINFO_ROOMTYPEREFID );
	}

	/**
	 *  Sets the value of the <code>&lt;RoomTypeRefId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"GUID that identifies the room type assigned to this room."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"TypeOfRoom"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"RoomTypeRefId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setRoomTypeRefId( String value ) { 
		setFieldValue( StudentDTD.ROOMINFO_ROOMTYPEREFID, new SIFString( value ), value );
	}

}
