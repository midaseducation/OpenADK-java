// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.student;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  The relationship between a student and a contact person.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.4
 */
public class StudentContactRelationship extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public StudentContactRelationship() {
		super( ADK.getSIFVersion(), StudentDTD.STUDENTCONTACTRELATIONSHIP );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId The relationship between a student and a contact person.
	 *  @param studentPersonalRefId GUID that identifies the student for the relationship.
	 *  @param studentContactPersonalRefId GUID that identifies the contact person for the relationship.
	 *  @param relationship The relationship of the contact person to the student
	 *  @param contactFlags Contains Yes/No characteristics of the contact person's role. Provide a Yes value for all that apply. At least one of the child elements of ContactFlags must have a Yes value.
	 */
	public StudentContactRelationship( String refId, String studentPersonalRefId, String studentContactPersonalRefId, Relationship relationship, ContactFlags contactFlags ) {
		super( ADK.getSIFVersion(), StudentDTD.STUDENTCONTACTRELATIONSHIP );
		this.setRefId(refId);
		this.setStudentPersonalRefId(studentPersonalRefId);
		this.setStudentContactPersonalRefId(studentContactPersonalRefId);
		this.setRelationship(relationship);
		this.setContactFlags(contactFlags);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( StudentDTD.STUDENTCONTACTRELATIONSHIP_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { StudentDTD.STUDENTCONTACTRELATIONSHIP_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The relationship between a student and a contact person."</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 2.7
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.STUDENTCONTACTRELATIONSHIP_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The relationship between a student and a contact person."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.7
	 */
	public void setRefId( String value ) { 
		setFieldValue( StudentDTD.STUDENTCONTACTRELATIONSHIP_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>StudentPersonalRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID that identifies the student for the relationship."</i><p>
	 *
	 *  @return The <code>StudentPersonalRefId</code> attribute of this object.
	 *  @since 2.4
	 */
	public String getStudentPersonalRefId() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.STUDENTCONTACTRELATIONSHIP_STUDENTPERSONALREFID );
	}

	/**
	 *  Sets the value of the <code>StudentPersonalRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID that identifies the student for the relationship."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.4
	 */
	public void setStudentPersonalRefId( String value ) { 
		setFieldValue( StudentDTD.STUDENTCONTACTRELATIONSHIP_STUDENTPERSONALREFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>StudentContactPersonalRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID that identifies the contact person for the relationship."</i><p>
	 *
	 *  @return The <code>StudentContactPersonalRefId</code> attribute of this object.
	 *  @since 2.4
	 */
	public String getStudentContactPersonalRefId() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.STUDENTCONTACTRELATIONSHIP_STUDENTCONTACTPERSONALREFID );
	}

	/**
	 *  Sets the value of the <code>StudentContactPersonalRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"GUID that identifies the contact person for the relationship."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.4
	 */
	public void setStudentContactPersonalRefId( String value ) { 
		setFieldValue( StudentDTD.STUDENTCONTACTRELATIONSHIP_STUDENTCONTACTPERSONALREFID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;Relationship&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The relationship of the contact person to the student"</i><p>
	 *
	 *  @param value A <code>Relationship</code> object
	 *  @since 2.4
	 */
	public void setRelationship( Relationship value ) { 
		removeChild( StudentDTD.STUDENTCONTACTRELATIONSHIP_RELATIONSHIP );
		addChild( StudentDTD.STUDENTCONTACTRELATIONSHIP_RELATIONSHIP, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Relationship&gt;</code> child element.
	 *  This form of <code>setRelationship</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setRelationship</code>
	 *  that accepts a single <code>Relationship</code> object.
	 *
	 *  @param code Code representing the relationship.
	 *  @since 2.4
	 */
	public void setRelationship( RelationshipCode code ) {
		removeChild( StudentDTD.STUDENTCONTACTRELATIONSHIP_RELATIONSHIP);
		addChild( StudentDTD.STUDENTCONTACTRELATIONSHIP_RELATIONSHIP, new Relationship( code ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Relationship&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The relationship of the contact person to the student"</i><p>
	 *
	 *  @return A <code>Relationship</code> object
	 *  @since 2.4
	 */
	public Relationship getRelationship() { 
		return (Relationship)getChild( StudentDTD.STUDENTCONTACTRELATIONSHIP_RELATIONSHIP);
	}

	/**
	 *  Removes the <code>Relationship</code> child element previously created by calling <code>setRelationship</code>
	 *
	 *  @since 2.4
	 */
	public void removeRelationship() { 
		removeChild( StudentDTD.STUDENTCONTACTRELATIONSHIP_RELATIONSHIP );
	}

	/**
	 *  Sets the value of the <code>&lt;ContactFlags&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contains Yes/No characteristics of the contact person's role. Provide a Yes value for all that apply. At least one of the child elements of ContactFlags must have a Yes value."</i><p>
	 *
	 *  @param value A <code>ContactFlags</code> object
	 *  @since 2.4
	 */
	public void setContactFlags( ContactFlags value ) { 
		removeChild( StudentDTD.STUDENTCONTACTRELATIONSHIP_CONTACTFLAGS );
		addChild( StudentDTD.STUDENTCONTACTRELATIONSHIP_CONTACTFLAGS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;ContactFlags&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contains Yes/No characteristics of the contact person's role. Provide a Yes value for all that apply. At least one of the child elements of ContactFlags must have a Yes value."</i><p>
	 *
	 *  @return A <code>ContactFlags</code> object
	 *  @since 2.4
	 */
	public ContactFlags getContactFlags() { 
		return (ContactFlags)getChild( StudentDTD.STUDENTCONTACTRELATIONSHIP_CONTACTFLAGS);
	}

	/**
	 *  Removes the <code>ContactFlags</code> child element previously created by calling <code>setContactFlags</code>
	 *
	 *  @since 2.4
	 */
	public void removeContactFlags() { 
		removeChild( StudentDTD.STUDENTCONTACTRELATIONSHIP_CONTACTFLAGS );
	}

	/**
	 *  Gets the value of the <code>&lt;ContactSequence&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Number indicating the order in which the person should be contacted."</i><p>
	 *
	 *  @return The <code>ContactSequence</code> element of this object.
	 *  @since 2.4
	 */
	public Integer getContactSequence() { 
		return (Integer) getSIFSimpleFieldValue( StudentDTD.STUDENTCONTACTRELATIONSHIP_CONTACTSEQUENCE );
	}

	/**
	 *  Sets the value of the <code>&lt;ContactSequence&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Number indicating the order in which the person should be contacted."</i><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 2.4
	 */
	public void setContactSequence( Integer value ) { 
		setFieldValue( StudentDTD.STUDENTCONTACTRELATIONSHIP_CONTACTSEQUENCE, new SIFInt( value ), value );
	}

}
