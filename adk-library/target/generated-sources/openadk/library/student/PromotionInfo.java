// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.student;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  Information on a studentâ€™s promotion, retention, or demotion related to this enrollment instance.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.3
 */
public class PromotionInfo extends SIFElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public PromotionInfo() {
		super( StudentDTD.PROMOTIONINFO );
	}

	/**
	 *  Gets the value of the <code>&lt;PromotionStatus&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This value should be set if this enrollment instance is closed for an end-of-year closeout or a mid-year promotion or demotion. A value other than NA should be specified when the enrollment instance represents an end-of-year closeout or mid-year promotion/demotion."</i><p>
	 *
	 *  @return The <code>PromotionStatus</code> element of this object.
	 *  @since 2.3
	 */
	public String getPromotionStatus() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.PROMOTIONINFO_PROMOTIONSTATUS );
	}

	/**
	 *  Sets the value of the <code>&lt;PromotionStatus&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This value should be set if this enrollment instance is closed for an end-of-year closeout or a mid-year promotion or demotion. A value other than NA should be specified when the enrollment instance represents an end-of-year closeout or mid-year promotion/demotion."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.3
	 */
	public void setPromotionStatus( String value ) { 
		setFieldValue( StudentDTD.PROMOTIONINFO_PROMOTIONSTATUS, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;Promotion&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element is mutually exclusive with Nonpromotion, and its child elements should only be populated if the value of PromotionStatus is "Promoted"."</i><p>
	 *
	 *  @param value A <code>Promotion</code> object
	 *  @since 2.4
	 */
	public void setPromotion( Promotion value ) { 
		removeChild( StudentDTD.PROMOTIONINFO_PROMOTION );
		addChild( StudentDTD.PROMOTIONINFO_PROMOTION, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Promotion&gt;</code> child element.
	 *  This form of <code>setPromotion</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setPromotion</code>
	 *  that accepts a single <code>Promotion</code> object.
	 *
	 *  @param code The reason the student was promoted. This element should only be populated if the value of PromotionStatus is "Promoted".
	 *  @since 2.4
	 */
	public void setPromotion( NCES0672PromotionType code ) {
		removeChild( StudentDTD.PROMOTIONINFO_PROMOTION);
		addChild( StudentDTD.PROMOTIONINFO_PROMOTION, new Promotion( code ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Promotion&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element is mutually exclusive with Nonpromotion, and its child elements should only be populated if the value of PromotionStatus is "Promoted"."</i><p>
	 *
	 *  @return A <code>Promotion</code> object
	 *  @since 2.4
	 */
	public Promotion getPromotion() { 
		return (Promotion)getChild( StudentDTD.PROMOTIONINFO_PROMOTION);
	}

	/**
	 *  Removes the <code>Promotion</code> child element previously created by calling <code>setPromotion</code>
	 *
	 *  @since 2.4
	 */
	public void removePromotion() { 
		removeChild( StudentDTD.PROMOTIONINFO_PROMOTION );
	}

	/**
	 *  Sets the value of the <code>&lt;Nonpromotion&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element is mutually exclusive with Promotion, and its child elements should only be populated if the value of PromotionStatus is "Retained" or "Demoted"."</i><p>
	 *
	 *  @param value A <code>Nonpromotion</code> object
	 *  @since 2.4
	 */
	public void setNonpromotion( Nonpromotion value ) { 
		removeChild( StudentDTD.PROMOTIONINFO_NONPROMOTION );
		addChild( StudentDTD.PROMOTIONINFO_NONPROMOTION, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Nonpromotion&gt;</code> child element.
	 *  This form of <code>setNonpromotion</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setNonpromotion</code>
	 *  that accepts a single <code>Nonpromotion</code> object.
	 *
	 *  @param code The reason the student was not promoted. This element should only be populated if the value of PromotionStatus is "Promoted".
	 *  @since 2.4
	 */
	public void setNonpromotion( NCES0673NonpromotionReason code ) {
		removeChild( StudentDTD.PROMOTIONINFO_NONPROMOTION);
		addChild( StudentDTD.PROMOTIONINFO_NONPROMOTION, new Nonpromotion( code ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Nonpromotion&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element is mutually exclusive with Promotion, and its child elements should only be populated if the value of PromotionStatus is "Retained" or "Demoted"."</i><p>
	 *
	 *  @return A <code>Nonpromotion</code> object
	 *  @since 2.4
	 */
	public Nonpromotion getNonpromotion() { 
		return (Nonpromotion)getChild( StudentDTD.PROMOTIONINFO_NONPROMOTION);
	}

	/**
	 *  Removes the <code>Nonpromotion</code> child element previously created by calling <code>setNonpromotion</code>
	 *
	 *  @since 2.4
	 */
	public void removeNonpromotion() { 
		removeChild( StudentDTD.PROMOTIONINFO_NONPROMOTION );
	}

}
