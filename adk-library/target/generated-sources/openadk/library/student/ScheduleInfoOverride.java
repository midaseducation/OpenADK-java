// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.student;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  A complete replacement of the ScheduleInfo of the section for this student; this should be a subset of the schedule information for the section<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.1
 */
public class ScheduleInfoOverride extends SIFElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public ScheduleInfoOverride() {
		super( StudentDTD.SCHEDULEINFOOVERRIDE );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param override Designates whether or not scheduling information has been overridden with different values for this student.
	 *  @param termInfoRefId The ID (GUID) of the term to which this override information relates for this student.
	 */
	public ScheduleInfoOverride( YesNo override, String termInfoRefId ) {
		super( StudentDTD.SCHEDULEINFOOVERRIDE );
		this.setOverride( override );
		this.setTermInfoRefId(termInfoRefId);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		StringBuilder b = new StringBuilder();
		b.append( getFieldValue( StudentDTD.SCHEDULEINFOOVERRIDE_OVERRIDE ) );
		b.append('.');
		b.append( getFieldValue( StudentDTD.SCHEDULEINFOOVERRIDE_TERMINFOREFID ) );
		return b.toString();
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { StudentDTD.SCHEDULEINFOOVERRIDE_OVERRIDE, StudentDTD.SCHEDULEINFOOVERRIDE_TERMINFOREFID };
	}

	/**
	 *  Gets the value of the <code>Override</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Designates whether or not scheduling information has been overridden with different values for this student."</i><p>
	 *
	 *  @return The <code>Override</code> attribute of this object.
	 *  @since 1.1
	 */
	public String getOverride() { 
		return getFieldValue( StudentDTD.SCHEDULEINFOOVERRIDE_OVERRIDE );
	}

	/**
	 *  Sets the value of the <code>Override</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Designates whether or not scheduling information has been overridden with different values for this student."</i><p>
	 *
	 *  @param value A constant defined by the <code>YesNo</code> class
	 *  @since 1.1
	 */
	public void setOverride( YesNo value ) { 
		setField( StudentDTD.SCHEDULEINFOOVERRIDE_OVERRIDE, value );
	}

	/**
	 *  Sets the value of the <code>Override</code> attribute as a String.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Designates whether or not scheduling information has been overridden with different values for this student."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.1
	 */
	public void setOverride( String value ) { 
		setField( StudentDTD.SCHEDULEINFOOVERRIDE_OVERRIDE, value );
	}

	/**
	 *  Gets the value of the <code>TermInfoRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The ID (GUID) of the term to which this override information relates for this student."</i><p>
	 *
	 *  @return The <code>TermInfoRefId</code> attribute of this object.
	 *  @since 1.1
	 */
	public String getTermInfoRefId() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.SCHEDULEINFOOVERRIDE_TERMINFOREFID );
	}

	/**
	 *  Sets the value of the <code>TermInfoRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The ID (GUID) of the term to which this override information relates for this student."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setTermInfoRefId( String value ) { 
		setFieldValue( StudentDTD.SCHEDULEINFOOVERRIDE_TERMINFOREFID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;MeetingTimeList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Time(s) this section meets for this student; this should be a subset of the meeting times for the section"</i><p>
	 *
	 *  @param value A <code>MeetingTimeList</code> object
	 *  @since 1.1
	 */
	public void setMeetingTimeList( MeetingTimeList value ) { 
		removeChild( StudentDTD.SCHEDULEINFOOVERRIDE_MEETINGTIMELIST );
		addChild( StudentDTD.SCHEDULEINFOOVERRIDE_MEETINGTIMELIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;MeetingTimeList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Time(s) this section meets for this student; this should be a subset of the meeting times for the section"</i><p>
	 *
	 *  @return A <code>MeetingTimeList</code> object
	 *  @since 1.1
	 */
	public MeetingTimeList getMeetingTimeList() { 
		return (MeetingTimeList)getChild( StudentDTD.SCHEDULEINFOOVERRIDE_MEETINGTIMELIST);
	}

	/**
	 *  Removes the <code>MeetingTimeList</code> child element previously created by calling <code>setMeetingTimeList</code>
	 *
	 *  @since 1.1
	 */
	public void removeMeetingTimeList() { 
		removeChild( StudentDTD.SCHEDULEINFOOVERRIDE_MEETINGTIMELIST );
	}

}
