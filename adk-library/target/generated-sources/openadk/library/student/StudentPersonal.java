// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.student;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  The StudentPersonal object contains personal information related to a student.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.1
 */
public class StudentPersonal extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public StudentPersonal() {
		super( ADK.getSIFVersion(), StudentDTD.STUDENTPERSONAL );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId The GUID of the student.
	 *  @param name Name of the student.  Note: Always use Type value of 04.
	 */
	public StudentPersonal( String refId, Name name ) {
		super( ADK.getSIFVersion(), StudentDTD.STUDENTPERSONAL );
		this.setRefId(refId);
		this.setName(name);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( StudentDTD.STUDENTPERSONAL_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { StudentDTD.STUDENTPERSONAL_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The GUID of the student."</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 1.1
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.STUDENTPERSONAL_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The GUID of the student."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setRefId( String value ) { 
		setFieldValue( StudentDTD.STUDENTPERSONAL_REFID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;AlertMessages&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The AlertMessage element contains an alert message that is associated with the student."</i><p>
	 *
	 *  @param value A <code>AlertMessages</code> object
	 *  @since 1.1
	 */
	public void setAlertMessages( AlertMessages value ) { 
		removeChild( StudentDTD.STUDENTPERSONAL_ALERTMESSAGES );
		addChild( StudentDTD.STUDENTPERSONAL_ALERTMESSAGES, value);
	}

	/**
	 *  Gets the value of the <code>&lt;AlertMessages&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The AlertMessage element contains an alert message that is associated with the student."</i><p>
	 *
	 *  @return An <code>AlertMessages</code> object
	 *  @since 1.1
	 */
	public AlertMessages getAlertMessages() { 
		return (AlertMessages)getChild( StudentDTD.STUDENTPERSONAL_ALERTMESSAGES);
	}

	/**
	 *  Removes the <code>AlertMessages</code> child element previously created by calling <code>setAlertMessages</code>
	 *
	 *  @since 1.1
	 */
	public void removeAlertMessages() { 
		removeChild( StudentDTD.STUDENTPERSONAL_ALERTMESSAGES );
	}

	/**
	 *  Gets the value of the <code>&lt;LocalId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The locally-assigned identifier for this student."</i><p>
	 *
	 *  @return The <code>LocalId</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getLocalId() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.STUDENTPERSONAL_LOCALID );
	}

	/**
	 *  Sets the value of the <code>&lt;LocalId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The locally-assigned identifier for this student."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setLocalId( String value ) { 
		setFieldValue( StudentDTD.STUDENTPERSONAL_LOCALID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;OtherIdList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Lists all "other" IDs associated with the student."</i><p>
	 *
	 *  @param value A <code>OtherIdList</code> object
	 *  @since 1.1
	 */
	public void setOtherIdList( OtherIdList value ) { 
		removeChild( StudentDTD.STUDENTPERSONAL_OTHERIDLIST );
		addChild( StudentDTD.STUDENTPERSONAL_OTHERIDLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;OtherIdList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Lists all "other" IDs associated with the student."</i><p>
	 *
	 *  @return An <code>OtherIdList</code> object
	 *  @since 1.1
	 */
	public OtherIdList getOtherIdList() { 
		return (OtherIdList)getChild( StudentDTD.STUDENTPERSONAL_OTHERIDLIST);
	}

	/**
	 *  Removes the <code>OtherIdList</code> child element previously created by calling <code>setOtherIdList</code>
	 *
	 *  @since 1.1
	 */
	public void removeOtherIdList() { 
		removeChild( StudentDTD.STUDENTPERSONAL_OTHERIDLIST );
	}

	/**
	 *  Sets the value of the <code>&lt;MedicalAlertMessages&gt;</code> element.
	 *
	 *  @param value A <code>MedicalAlertMessages</code> object
	 *  @since 2.0
	 */
	public void setMedicalAlertMessages( MedicalAlertMessages value ) { 
		removeChild( StudentDTD.STUDENTPERSONAL_MEDICALALERTMESSAGES );
		addChild( StudentDTD.STUDENTPERSONAL_MEDICALALERTMESSAGES, value);
	}

	/**
	 *  Gets the value of the <code>&lt;MedicalAlertMessages&gt;</code> element.
	 *
	 *  @return A <code>MedicalAlertMessages</code> object
	 *  @since 2.0
	 */
	public MedicalAlertMessages getMedicalAlertMessages() { 
		return (MedicalAlertMessages)getChild( StudentDTD.STUDENTPERSONAL_MEDICALALERTMESSAGES);
	}

	/**
	 *  Removes the <code>MedicalAlertMessages</code> child element previously created by calling <code>setMedicalAlertMessages</code>
	 *
	 *  @since 2.0
	 */
	public void removeMedicalAlertMessages() { 
		removeChild( StudentDTD.STUDENTPERSONAL_MEDICALALERTMESSAGES );
	}

	/**
	 *  Gets the value of the <code>&lt;StateProvinceId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The state-assigned identifier for this student."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"StatePrId"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"StateProvinceId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>StateProvinceId</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getStateProvinceId() { 
		return (String) getSIFSimpleFieldValue( StudentDTD.STUDENTPERSONAL_STATEPROVINCEID );
	}

	/**
	 *  Sets the value of the <code>&lt;StateProvinceId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The state-assigned identifier for this student."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"StatePrId"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"StateProvinceId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setStateProvinceId( String value ) { 
		setFieldValue( StudentDTD.STUDENTPERSONAL_STATEPROVINCEID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Name of the student.  Note: Always use Type value of 04."</i><p>
	 *
	 *  @param value A <code>Name</code> object
	 *  @since 1.1
	 */
	public void setName( Name value ) { 
		removeChild( StudentDTD.STUDENTPERSONAL_NAME );
		addChild( StudentDTD.STUDENTPERSONAL_NAME, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Name&gt;</code> child element.
	 *  This form of <code>setName</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setName</code>
	 *  that accepts a single <code>Name</code> object.
	 *
	 *  @param type Code that specifies what type of name this is.  If unsure, use 04.
	 *  @param lastName The last name.
	 *  @param firstName The first name.
	 *  @since 1.1
	 */
	public void setName( NameType type, String lastName, String firstName ) {
		removeChild( StudentDTD.STUDENTPERSONAL_NAME);
		addChild( StudentDTD.STUDENTPERSONAL_NAME, new Name( type, lastName, firstName ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Name of the student.  Note: Always use Type value of 04."</i><p>
	 *
	 *  @return A <code>Name</code> object
	 *  @since 1.1
	 */
	public Name getName() { 
		return (Name)getChild( StudentDTD.STUDENTPERSONAL_NAME);
	}

	/**
	 *  Removes the <code>Name</code> child element previously created by calling <code>setName</code>
	 *
	 *  @since 1.1
	 */
	public void removeName() { 
		removeChild( StudentDTD.STUDENTPERSONAL_NAME );
	}

	/**
	 *  Sets the value of the <code>&lt;ElectronicIdList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Electronic identifier(s) associated with this entity."</i><p>
	 *
	 *  @param value A <code>ElectronicIdList</code> object
	 *  @since 1.5r1
	 */
	public void setElectronicIdList( ElectronicIdList value ) { 
		removeChild( StudentDTD.STUDENTPERSONAL_ELECTRONICIDLIST );
		addChild( StudentDTD.STUDENTPERSONAL_ELECTRONICIDLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;ElectronicIdList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Electronic identifier(s) associated with this entity."</i><p>
	 *
	 *  @return An <code>ElectronicIdList</code> object
	 *  @since 1.5r1
	 */
	public ElectronicIdList getElectronicIdList() { 
		return (ElectronicIdList)getChild( StudentDTD.STUDENTPERSONAL_ELECTRONICIDLIST);
	}

	/**
	 *  Removes the <code>ElectronicIdList</code> child element previously created by calling <code>setElectronicIdList</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeElectronicIdList() { 
		removeChild( StudentDTD.STUDENTPERSONAL_ELECTRONICIDLIST );
	}

	/**
	 *  Sets the value of the <code>&lt;EmailList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The student's e-mail address(es)."</i><p>
	 *
	 *  @param value A <code>EmailList</code> object
	 *  @since 1.1
	 */
	public void setEmailList( EmailList value ) { 
		removeChild( StudentDTD.STUDENTPERSONAL_EMAILLIST );
		addChild( StudentDTD.STUDENTPERSONAL_EMAILLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;EmailList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The student's e-mail address(es)."</i><p>
	 *
	 *  @return An <code>EmailList</code> object
	 *  @since 1.1
	 */
	public EmailList getEmailList() { 
		return (EmailList)getChild( StudentDTD.STUDENTPERSONAL_EMAILLIST);
	}

	/**
	 *  Removes the <code>EmailList</code> child element previously created by calling <code>setEmailList</code>
	 *
	 *  @since 1.1
	 */
	public void removeEmailList() { 
		removeChild( StudentDTD.STUDENTPERSONAL_EMAILLIST );
	}

	/**
	 *  Gets the value of the <code>&lt;ProjectedGraduationYear&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Currently projected graduation year."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"GradYear"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"ProjectedGraduationYear"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>ProjectedGraduationYear</code> element of this object.
	 *  @since 1.1
	 */
	public Integer getProjectedGraduationYear() { 
		return (Integer) getSIFSimpleFieldValue( StudentDTD.STUDENTPERSONAL_PROJECTEDGRADUATIONYEAR );
	}

	/**
	 *  Sets the value of the <code>&lt;ProjectedGraduationYear&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Currently projected graduation year."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"GradYear"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"ProjectedGraduationYear"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 1.1
	 */
	public void setProjectedGraduationYear( Integer value ) { 
		setFieldValue( StudentDTD.STUDENTPERSONAL_PROJECTEDGRADUATIONYEAR, new SIFInt( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;OnTimeGraduationYear&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"First projected graduation year, usually determined when student is accepted into 9th grade."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"GradYear"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"OnTimeGraduationYear"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>OnTimeGraduationYear</code> element of this object.
	 *  @since 1.1
	 */
	public Integer getOnTimeGraduationYear() { 
		return (Integer) getSIFSimpleFieldValue( StudentDTD.STUDENTPERSONAL_ONTIMEGRADUATIONYEAR );
	}

	/**
	 *  Sets the value of the <code>&lt;OnTimeGraduationYear&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"First projected graduation year, usually determined when student is accepted into 9th grade."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"GradYear"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"OnTimeGraduationYear"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 1.1
	 */
	public void setOnTimeGraduationYear( Integer value ) { 
		setFieldValue( StudentDTD.STUDENTPERSONAL_ONTIMEGRADUATIONYEAR, new SIFInt( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;GraduationDate&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"First projected graduation year, usually determined when student is accepted into 9th grade."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"GradYear"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"GraduationDate"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>PartialDateType</code> object
	 *  @since 1.1
	 */
	public void setGraduationDate( PartialDateType value ) { 
		removeChild( StudentDTD.STUDENTPERSONAL_GRADUATIONDATE );
		addChild( StudentDTD.STUDENTPERSONAL_GRADUATIONDATE, value);
	}

	/**
	 *  Sets the value of the <code>&lt;GraduationDate&gt;</code> child element.
	 *  This form of <code>setGraduationDate</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setGraduationDate</code>
	 *  that accepts a single <code>PartialDateType</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;PartialDateType&gt; element
	 *  @since 1.1
	 */
	public void setGraduationDate( String value ) {
		removeChild( StudentDTD.STUDENTPERSONAL_GRADUATIONDATE);
		addChild( StudentDTD.STUDENTPERSONAL_GRADUATIONDATE, new PartialDateType( value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;GraduationDate&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"First projected graduation year, usually determined when student is accepted into 9th grade."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"GradYear"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"GraduationDate"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return A <code>PartialDateType</code> object
	 *  @since 1.1
	 */
	public PartialDateType getGraduationDate() { 
		return (PartialDateType)getChild( StudentDTD.STUDENTPERSONAL_GRADUATIONDATE);
	}

	/**
	 *  Removes the <code>GraduationDate</code> child element previously created by calling <code>setGraduationDate</code>
	 *
	 *  @since 1.1
	 */
	public void removeGraduationDate() { 
		removeChild( StudentDTD.STUDENTPERSONAL_GRADUATIONDATE );
	}

	/**
	 *  Sets the value of the <code>&lt;Demographics&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element contains information related to student demographics."</i><p>
	 *
	 *  @param value A <code>Demographics</code> object
	 *  @since 1.1
	 */
	public void setDemographics( Demographics value ) { 
		removeChild( StudentDTD.STUDENTPERSONAL_DEMOGRAPHICS );
		addChild( StudentDTD.STUDENTPERSONAL_DEMOGRAPHICS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;Demographics&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element contains information related to student demographics."</i><p>
	 *
	 *  @return A <code>Demographics</code> object
	 *  @since 1.1
	 */
	public Demographics getDemographics() { 
		return (Demographics)getChild( StudentDTD.STUDENTPERSONAL_DEMOGRAPHICS);
	}

	/**
	 *  Removes the <code>Demographics</code> child element previously created by calling <code>setDemographics</code>
	 *
	 *  @since 1.1
	 */
	public void removeDemographics() { 
		removeChild( StudentDTD.STUDENTPERSONAL_DEMOGRAPHICS );
	}

	/**
	 *  Sets the value of the <code>&lt;OtherNames&gt;</code> element.
	 *
	 *  @param value A <code>OtherNames</code> object
	 *  @since 2.0
	 */
	public void setOtherNames( OtherNames value ) { 
		removeChild( StudentDTD.STUDENTPERSONAL_OTHERNAMES );
		addChild( StudentDTD.STUDENTPERSONAL_OTHERNAMES, value);
	}

	/**
	 *  Gets the value of the <code>&lt;OtherNames&gt;</code> element.
	 *
	 *  @return An <code>OtherNames</code> object
	 *  @since 2.0
	 */
	public OtherNames getOtherNames() { 
		return (OtherNames)getChild( StudentDTD.STUDENTPERSONAL_OTHERNAMES);
	}

	/**
	 *  Removes the <code>OtherNames</code> child element previously created by calling <code>setOtherNames</code>
	 *
	 *  @since 2.0
	 */
	public void removeOtherNames() { 
		removeChild( StudentDTD.STUDENTPERSONAL_OTHERNAMES );
	}

	/**
	 *  Sets the value of the <code>&lt;AddressList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The student's address(es)"</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"StudentAddress"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"AddressList"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>StudentAddressList</code> object
	 *  @since 1.1
	 */
	public void setAddressList( StudentAddressList value ) { 
		removeChild( StudentDTD.STUDENTPERSONAL_ADDRESSLIST );
		addChild( StudentDTD.STUDENTPERSONAL_ADDRESSLIST, value);
	}

	/**
	 *  Sets the value of the <code>&lt;AddressList&gt;</code> child element.
	 *  This form of <code>setAddressList</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setAddressList</code>
	 *  that accepts a single <code>StudentAddressList</code> object.
	 *
	 *  @param pickupOrDropoff Specifies if this is a pickup or dropoff address
	 *  @param dayOfWeek The days of the week for which the pickup or dropoff address is valid
	 *  @param address The street address
	 *  @since 1.1
	 */
	public void setAddressList( PickupOrDropoff pickupOrDropoff, String dayOfWeek, Address address ) {
		removeChild( StudentDTD.STUDENTPERSONAL_ADDRESSLIST);
		addChild( StudentDTD.STUDENTPERSONAL_ADDRESSLIST, new StudentAddressList( pickupOrDropoff, dayOfWeek, address ) );
	}

	/**
	 *  Gets the value of the <code>&lt;AddressList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The student's address(es)"</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"StudentAddress"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"AddressList"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return A <code>StudentAddressList</code> object
	 *  @since 1.1
	 */
	public StudentAddressList getAddressList() { 
		return (StudentAddressList)getChild( StudentDTD.STUDENTPERSONAL_ADDRESSLIST);
	}

	/**
	 *  Removes the <code>AddressList</code> child element previously created by calling <code>setAddressList</code>
	 *
	 *  @since 1.1
	 */
	public void removeAddressList() { 
		removeChild( StudentDTD.STUDENTPERSONAL_ADDRESSLIST );
	}

	/**
	 *  Sets the value of the <code>&lt;PhoneNumberList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The student's phone number(s)."</i><p>
	 *
	 *  @param value A <code>PhoneNumberList</code> object
	 *  @since 1.1
	 */
	public void setPhoneNumberList( PhoneNumberList value ) { 
		removeChild( StudentDTD.STUDENTPERSONAL_PHONENUMBERLIST );
		addChild( StudentDTD.STUDENTPERSONAL_PHONENUMBERLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;PhoneNumberList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The student's phone number(s)."</i><p>
	 *
	 *  @return A <code>PhoneNumberList</code> object
	 *  @since 1.1
	 */
	public PhoneNumberList getPhoneNumberList() { 
		return (PhoneNumberList)getChild( StudentDTD.STUDENTPERSONAL_PHONENUMBERLIST);
	}

	/**
	 *  Removes the <code>PhoneNumberList</code> child element previously created by calling <code>setPhoneNumberList</code>
	 *
	 *  @since 1.1
	 */
	public void removePhoneNumberList() { 
		removeChild( StudentDTD.STUDENTPERSONAL_PHONENUMBERLIST );
	}

	/**
	 *  Adds a new <code>&lt;StudentAddress&gt;</code> child element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element has the student's address information.  "</i><p>
	 *
	 *  @param value A <code>StudentAddress</code> object
	 *  @since 2.0r1
	 */
	public void addStudentAddress( StudentAddress value ) { 
		addChild( StudentDTD.STUDENTPERSONAL_STUDENTADDRESS, value);
	}

	/**
	 *  Adds a new <code>&lt;StudentAddress&gt;</code> repeatable element.
	 *  This form of <code>setStudentAddress</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setStudentAddress</code>
	 *  that accepts a single <code>StudentAddress</code> object.
	 *
	 *  @param pickupOrDropoff Specifies if this is a pickup or dropoff address. This property may be needed by a transportation application.
	 *  @param dayOfWeek This attribute indicates the days of the week for which the pickup or dropoff address is valid. The attribute if relevant only if the value of the PickupOrDropoff attribute is "Pickup," "Dropoff" or "Both."
	 *  @param address This is the actual address.
	 *  @since 2.0r1
	 */
	public void addStudentAddress( String pickupOrDropoff, String dayOfWeek, Address address ) {
		addChild( StudentDTD.STUDENTPERSONAL_STUDENTADDRESS, new StudentAddress( pickupOrDropoff, dayOfWeek, address ) );
	}

	/**
	 *  Removes a <code>StudentAddress</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param pickupOrDropoff Identifies the StudentAddress object to remove by its PickupOrDropoff value
	 *  @param dayOfWeek Identifies the StudentAddress object to remove by its DayOfWeek value
	 *  @since 2.0r1
	 */
	public void removeStudentAddress( String pickupOrDropoff, String dayOfWeek ) { 
		removeChild( StudentDTD.STUDENTPERSONAL_STUDENTADDRESS, new String[] { pickupOrDropoff.toString(),dayOfWeek.toString() } );
	}

	/**
	 *  Gets a <code>StudentAddress</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param pickupOrDropoff Identifies the StudentAddress object to return by its "PickupOrDropoff" attribute value
	 *  @param dayOfWeek Identifies the StudentAddress object to return by its "DayOfWeek" attribute value
	 *  @return A <code>StudentAddress</code> object
	 *  @since 2.0r1
	 */
	public StudentAddress getStudentAddress( String pickupOrDropoff, String dayOfWeek ) { 
		return (StudentAddress)getChild( StudentDTD.STUDENTPERSONAL_STUDENTADDRESS, new String[] { pickupOrDropoff.toString(),dayOfWeek.toString() } );
	}

	/**
	 *  Gets all <code>StudentAddress</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>StudentAddress</code> objects
	 *  @since 2.0r1
	 */
	public StudentAddress[] getStudentAddresses() {
		List<SIFElement> v = getChildList( StudentDTD.STUDENTPERSONAL_STUDENTADDRESS);
		StudentAddress[] cvt = new StudentAddress[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>StudentAddress</code> objects. All existing 
	 * <code>StudentAddress</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>StudentAddresses</code>.
	 *
	 *  @since 2.0r1
	 */
	public void setStudentAddresses( StudentAddress[] studentaddresses ) {
		setChildren( StudentDTD.STUDENTPERSONAL_STUDENTADDRESS, studentaddresses );
	}

	/**
	 *  Sets the value of the <code>&lt;MostRecent&gt;</code> element.
	 *
	 *  @param value A <code>MostRecent</code> object
	 *  @since 2.0
	 */
	public void setMostRecent( MostRecent value ) { 
		removeChild( StudentDTD.STUDENTPERSONAL_MOSTRECENT );
		addChild( StudentDTD.STUDENTPERSONAL_MOSTRECENT, value);
	}

	/**
	 *  Gets the value of the <code>&lt;MostRecent&gt;</code> element.
	 *
	 *  @return A <code>MostRecent</code> object
	 *  @since 2.0
	 */
	public MostRecent getMostRecent() { 
		return (MostRecent)getChild( StudentDTD.STUDENTPERSONAL_MOSTRECENT);
	}

	/**
	 *  Removes the <code>MostRecent</code> child element previously created by calling <code>setMostRecent</code>
	 *
	 *  @since 2.0
	 */
	public void removeMostRecent() { 
		removeChild( StudentDTD.STUDENTPERSONAL_MOSTRECENT );
	}

	/**
	 *  Gets the value of the <code>&lt;AcceptableUsePolicy&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Does the student have a current signed Acceptable Use Policy document for system access?"</i><p>
	 *
	 *  @return The <code>AcceptableUsePolicy</code> element of this object.
	 *  @since 2.0
	 */
	public String getAcceptableUsePolicy() { 
		return getFieldValue( StudentDTD.STUDENTPERSONAL_ACCEPTABLEUSEPOLICY );
	}

	/**
	 *  Sets the value of the <code>&lt;AcceptableUsePolicy&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Does the student have a current signed Acceptable Use Policy document for system access?"</i><p>
	 *
	 *  @param value A constant defined by the <code>YesNo</code> class
	 *  @since 2.0
	 */
	public void setAcceptableUsePolicy( YesNo value ) { 
		setField( StudentDTD.STUDENTPERSONAL_ACCEPTABLEUSEPOLICY, value );
	}

	/**
	 *  Sets the value of the <code>&lt;AcceptableUsePolicy&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Does the student have a current signed Acceptable Use Policy document for system access?"</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setAcceptableUsePolicy( String value ) { 
		setField( StudentDTD.STUDENTPERSONAL_ACCEPTABLEUSEPOLICY, value );
	}

	/**
	 *  Gets the value of the <code>&lt;IDEA&gt;</code> element.
	 *
	 *  @return The <code>IDEA</code> element of this object.
	 *  @since 2.0
	 */
	public String getIDEA() { 
		return getFieldValue( StudentDTD.STUDENTPERSONAL_IDEA );
	}

	/**
	 *  Sets the value of the <code>&lt;IDEA&gt;</code> element.
	 *
	 *  @param value A constant defined by the <code>YesNoUnknown</code> class
	 *  @since 2.0
	 */
	public void setIDEA( YesNoUnknown value ) { 
		setField( StudentDTD.STUDENTPERSONAL_IDEA, value );
	}

	/**
	 *  Sets the value of the <code>&lt;IDEA&gt;</code> element as a String.
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setIDEA( String value ) { 
		setField( StudentDTD.STUDENTPERSONAL_IDEA, value );
	}

	/**
	 *  Gets the value of the <code>&lt;Migrant&gt;</code> element.
	 *
	 *  @return The <code>Migrant</code> element of this object.
	 *  @since 2.0
	 */
	public String getMigrant() { 
		return getFieldValue( StudentDTD.STUDENTPERSONAL_MIGRANT );
	}

	/**
	 *  Sets the value of the <code>&lt;Migrant&gt;</code> element.
	 *
	 *  @param value A constant defined by the <code>YesNoUnknown</code> class
	 *  @since 2.0
	 */
	public void setMigrant( YesNoUnknown value ) { 
		setField( StudentDTD.STUDENTPERSONAL_MIGRANT, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Migrant&gt;</code> element as a String.
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setMigrant( String value ) { 
		setField( StudentDTD.STUDENTPERSONAL_MIGRANT, value );
	}

	/**
	 *  Gets the value of the <code>&lt;Title1&gt;</code> element.
	 *
	 *  @return The <code>Title1</code> element of this object.
	 *  @since 2.0
	 */
	public String getTitle1() { 
		return getFieldValue( StudentDTD.STUDENTPERSONAL_TITLE1 );
	}

	/**
	 *  Sets the value of the <code>&lt;Title1&gt;</code> element.
	 *
	 *  @param value A constant defined by the <code>YesNoUnknown</code> class
	 *  @since 2.0
	 */
	public void setTitle1( YesNoUnknown value ) { 
		setField( StudentDTD.STUDENTPERSONAL_TITLE1, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Title1&gt;</code> element as a String.
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setTitle1( String value ) { 
		setField( StudentDTD.STUDENTPERSONAL_TITLE1, value );
	}

	/**
	 *  Gets the value of the <code>&lt;GiftedTalented&gt;</code> element.
	 *
	 *  @return The <code>GiftedTalented</code> element of this object.
	 *  @since 2.0
	 */
	public String getGiftedTalented() { 
		return getFieldValue( StudentDTD.STUDENTPERSONAL_GIFTEDTALENTED );
	}

	/**
	 *  Sets the value of the <code>&lt;GiftedTalented&gt;</code> element.
	 *
	 *  @param value A constant defined by the <code>YesNoUnknown</code> class
	 *  @since 2.0
	 */
	public void setGiftedTalented( YesNoUnknown value ) { 
		setField( StudentDTD.STUDENTPERSONAL_GIFTEDTALENTED, value );
	}

	/**
	 *  Sets the value of the <code>&lt;GiftedTalented&gt;</code> element as a String.
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setGiftedTalented( String value ) { 
		setField( StudentDTD.STUDENTPERSONAL_GIFTEDTALENTED, value );
	}

	/**
	 *  Gets the value of the <code>&lt;EconomicDisadvantage&gt;</code> element.
	 *
	 *  @return The <code>EconomicDisadvantage</code> element of this object.
	 *  @since 2.0
	 */
	public String getEconomicDisadvantage() { 
		return getFieldValue( StudentDTD.STUDENTPERSONAL_ECONOMICDISADVANTAGE );
	}

	/**
	 *  Sets the value of the <code>&lt;EconomicDisadvantage&gt;</code> element.
	 *
	 *  @param value A constant defined by the <code>YesNoUnknown</code> class
	 *  @since 2.0
	 */
	public void setEconomicDisadvantage( YesNoUnknown value ) { 
		setField( StudentDTD.STUDENTPERSONAL_ECONOMICDISADVANTAGE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;EconomicDisadvantage&gt;</code> element as a String.
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setEconomicDisadvantage( String value ) { 
		setField( StudentDTD.STUDENTPERSONAL_ECONOMICDISADVANTAGE, value );
	}

	/**
	 *  Gets the value of the <code>&lt;ELL&gt;</code> element.
	 *
	 *  @return The <code>ELL</code> element of this object.
	 *  @since 2.0
	 */
	public String getELL() { 
		return getFieldValue( StudentDTD.STUDENTPERSONAL_ELL );
	}

	/**
	 *  Sets the value of the <code>&lt;ELL&gt;</code> element.
	 *
	 *  @param value A constant defined by the <code>YesNoUnknown</code> class
	 *  @since 2.0
	 */
	public void setELL( YesNoUnknown value ) { 
		setField( StudentDTD.STUDENTPERSONAL_ELL, value );
	}

	/**
	 *  Sets the value of the <code>&lt;ELL&gt;</code> element as a String.
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setELL( String value ) { 
		setField( StudentDTD.STUDENTPERSONAL_ELL, value );
	}

	/**
	 *  Gets the value of the <code>&lt;Homeless&gt;</code> element.
	 *
	 *  @return The <code>Homeless</code> element of this object.
	 *  @since 2.0
	 */
	public String getHomeless() { 
		return getFieldValue( StudentDTD.STUDENTPERSONAL_HOMELESS );
	}

	/**
	 *  Sets the value of the <code>&lt;Homeless&gt;</code> element.
	 *
	 *  @param value A constant defined by the <code>YesNoUnknown</code> class
	 *  @since 2.0
	 */
	public void setHomeless( YesNoUnknown value ) { 
		setField( StudentDTD.STUDENTPERSONAL_HOMELESS, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Homeless&gt;</code> element as a String.
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setHomeless( String value ) { 
		setField( StudentDTD.STUDENTPERSONAL_HOMELESS, value );
	}

	/**
	 *  Gets the value of the <code>&lt;Section504&gt;</code> element.
	 *
	 *  @return The <code>Section504</code> element of this object.
	 *  @since 2.0
	 */
	public String getSection504() { 
		return getFieldValue( StudentDTD.STUDENTPERSONAL_SECTION504 );
	}

	/**
	 *  Sets the value of the <code>&lt;Section504&gt;</code> element.
	 *
	 *  @param value A constant defined by the <code>YesNoUnknown</code> class
	 *  @since 2.0
	 */
	public void setSection504( YesNoUnknown value ) { 
		setField( StudentDTD.STUDENTPERSONAL_SECTION504, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Section504&gt;</code> element as a String.
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setSection504( String value ) { 
		setField( StudentDTD.STUDENTPERSONAL_SECTION504, value );
	}

	/**
	 *  Gets the value of the <code>&lt;VocationalConcentrator&gt;</code> element.
	 *
	 *  @return The <code>VocationalConcentrator</code> element of this object.
	 *  @since 2.0
	 */
	public String getVocationalConcentrator() { 
		return getFieldValue( StudentDTD.STUDENTPERSONAL_VOCATIONALCONCENTRATOR );
	}

	/**
	 *  Sets the value of the <code>&lt;VocationalConcentrator&gt;</code> element.
	 *
	 *  @param value A constant defined by the <code>YesNoUnknown</code> class
	 *  @since 2.0
	 */
	public void setVocationalConcentrator( YesNoUnknown value ) { 
		setField( StudentDTD.STUDENTPERSONAL_VOCATIONALCONCENTRATOR, value );
	}

	/**
	 *  Sets the value of the <code>&lt;VocationalConcentrator&gt;</code> element as a String.
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setVocationalConcentrator( String value ) { 
		setField( StudentDTD.STUDENTPERSONAL_VOCATIONALCONCENTRATOR, value );
	}

	/**
	 *  Gets the value of the <code>&lt;Immigrant&gt;</code> element.
	 *
	 *  @return The <code>Immigrant</code> element of this object.
	 *  @since 2.0
	 */
	public String getImmigrant() { 
		return getFieldValue( StudentDTD.STUDENTPERSONAL_IMMIGRANT );
	}

	/**
	 *  Sets the value of the <code>&lt;Immigrant&gt;</code> element.
	 *
	 *  @param value A constant defined by the <code>YesNoUnknown</code> class
	 *  @since 2.0
	 */
	public void setImmigrant( YesNoUnknown value ) { 
		setField( StudentDTD.STUDENTPERSONAL_IMMIGRANT, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Immigrant&gt;</code> element as a String.
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setImmigrant( String value ) { 
		setField( StudentDTD.STUDENTPERSONAL_IMMIGRANT, value );
	}

	/**
	 *  Gets the value of the <code>&lt;NeglectedDelinquent&gt;</code> element.
	 *
	 *  @return The <code>NeglectedDelinquent</code> element of this object.
	 *  @since 2.0
	 */
	public String getNeglectedDelinquent() { 
		return getFieldValue( StudentDTD.STUDENTPERSONAL_NEGLECTEDDELINQUENT );
	}

	/**
	 *  Sets the value of the <code>&lt;NeglectedDelinquent&gt;</code> element.
	 *
	 *  @param value A constant defined by the <code>YesNoUnknown</code> class
	 *  @since 2.0
	 */
	public void setNeglectedDelinquent( YesNoUnknown value ) { 
		setField( StudentDTD.STUDENTPERSONAL_NEGLECTEDDELINQUENT, value );
	}

	/**
	 *  Sets the value of the <code>&lt;NeglectedDelinquent&gt;</code> element as a String.
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setNeglectedDelinquent( String value ) { 
		setField( StudentDTD.STUDENTPERSONAL_NEGLECTEDDELINQUENT, value );
	}

	/**
	 *  Gets the value of the <code>&lt;FirstUSEnrollment&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The date on which the student was first enrolled in the US school system."</i><p>
	 *
	 *  @return The <code>FirstUSEnrollment</code> element of this object.
	 *  @since 2.4
	 */
	public Calendar getFirstUSEnrollment() { 
		return (Calendar) getSIFSimpleFieldValue( StudentDTD.STUDENTPERSONAL_FIRSTUSENROLLMENT );
	}

	/**
	 *  Sets the value of the <code>&lt;FirstUSEnrollment&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The date on which the student was first enrolled in the US school system."</i><p>
	 *
	 *  @param value A <code>Calendar</code> object
	 *  @since 2.4
	 */
	public void setFirstUSEnrollment( Calendar value ) { 
		setFieldValue( StudentDTD.STUDENTPERSONAL_FIRSTUSENROLLMENT, new SIFDate( value ), value );
	}


// BEGIN EXTRA METHODS (/Users/ajbrown/Projects/midas/OpenADK-java/adk-generator/../adk-generator/datadef/us/sif20/StudentPersonal.txt)

	
	/**
	 *  Adds a StudentAddressList instance for interoperating with multiple addresses in SIF Version 1.x
	 * <p> In SIF 2.0, the StudentAddressList object is not a repeatable element. Use this method of adding
	 * a student address only if you are creating an object for use in SIF 1.x
	 * 
	 * <p> In SIF 2.0, or if you are only dealing with a single Student address, you can add the address 
	 * to the StudentPersonal object by calling the 
	 *  {link StudentAddressList#add( Address )} method.
	 *
	 *  @param value A <code>StudentAddressList</code> object
	 *  @since 1.1
	 */
	public void addAddressList( StudentAddressList value ) { 
		addChild( StudentDTD.STUDENTPERSONAL_ADDRESSLIST, value);
	}

	/**
	 *  Adds a StudentAddressList instance for interoperating with multiple addresses in SIF Version 1.x
	 * <p> In SIF 2.0, the StudentAddressList object is not a repeatable element. Use this method of adding
	 * a student address only if you are creating an object for use in SIF 1.x
	 *
	 * <p> In SIF 2.0, or if you are only dealing with a single Student address, you can add the address 
	 * to the StudentPersonal object by calling the 
	 *  {link StudentAddressList#add( Address )} method.
	 *
	 *  @param pickupOrDropoff Specifies if this is a pickup or dropoff address
	 *  @param dayOfWeek The days of the week for which the pickup or dropoff address is valid
	 *  @param address The street address
	 *  @since 1.1
	 */
	public void addAddressList( PickupOrDropoff pickupOrDropoff, String dayOfWeek, Address address ) {
		addChild( StudentDTD.STUDENTPERSONAL_ADDRESSLIST, new StudentAddressList( pickupOrDropoff, dayOfWeek, address ) );
	}
	

	/**
	 *  Gets all <code>StudentAddressList</code> object instances. More than one instance can be defined for this object in SIF 1.x,
	 *  but this object is not repeatable in SIF 2.x. In SIF 2.x, all of the student addresses can be obtained by calling
	 *  {@link StudentAddressList#getAddresses} method
	 *
	 *  @return An array of <code>StudentAddressList</code> objects
	 *  @since 1.1
	 */
	public StudentAddressList[] getAddressLists() {
		List<SIFElement> v = getChildList( StudentDTD.STUDENTPERSONAL_ADDRESSLIST);
		StudentAddressList[] cvt = new StudentAddressList[v.size()];
		v.toArray(cvt);
		return cvt;
	}	
	

// END EXTRA METHODS

}
