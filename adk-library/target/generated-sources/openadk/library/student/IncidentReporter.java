// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.student;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.0
 */
public class IncidentReporter extends SIFKeyedElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public IncidentReporter() {
		super( StudentDTD.INCIDENTREPORTER );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param type 
	 */
	public IncidentReporter( ReporterDescriptionType type ) {
		super( StudentDTD.INCIDENTREPORTER );
		this.setType( type );
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( StudentDTD.INCIDENTREPORTER_TYPE );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { StudentDTD.INCIDENTREPORTER_TYPE };
	}

	/**
	 *  Gets the value of the <code>Type</code> attribute.
	 *
	 *  @return The <code>Type</code> attribute of this object.
	 *  @since 2.0
	 */
	public String getType() { 
		return getFieldValue( StudentDTD.INCIDENTREPORTER_TYPE );
	}

	/**
	 *  Sets the value of the <code>Type</code> attribute.
	 *
	 *  @param value A constant defined by the <code>ReporterDescriptionType</code> class
	 *  @since 2.0
	 */
	public void setType( ReporterDescriptionType value ) { 
		setField( StudentDTD.INCIDENTREPORTER_TYPE, value );
	}

	/**
	 *  Sets the value of the <code>Type</code> attribute as a String.
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setType( String value ) { 
		setField( StudentDTD.INCIDENTREPORTER_TYPE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The name of the individual reporting the incident."</i><p>
	 *
	 *  @param value A <code>Name</code> object
	 *  @since 2.0
	 */
	public void setName( Name value ) { 
		removeChild( StudentDTD.INCIDENTREPORTER_NAME );
		addChild( StudentDTD.INCIDENTREPORTER_NAME, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Name&gt;</code> child element.
	 *  This form of <code>setName</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setName</code>
	 *  that accepts a single <code>Name</code> object.
	 *
	 *  @param type Code that specifies what type of name this is.  If unsure, use 04.
	 *  @param lastName The last name.
	 *  @param firstName The first name.
	 *  @since 2.0
	 */
	public void setName( NameType type, String lastName, String firstName ) {
		removeChild( StudentDTD.INCIDENTREPORTER_NAME);
		addChild( StudentDTD.INCIDENTREPORTER_NAME, new Name( type, lastName, firstName ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The name of the individual reporting the incident."</i><p>
	 *
	 *  @return A <code>Name</code> object
	 *  @since 2.0
	 */
	public Name getName() { 
		return (Name)getChild( StudentDTD.INCIDENTREPORTER_NAME);
	}

	/**
	 *  Removes the <code>Name</code> child element previously created by calling <code>setName</code>
	 *
	 *  @since 2.0
	 */
	public void removeName() { 
		removeChild( StudentDTD.INCIDENTREPORTER_NAME );
	}

	/**
	 *  Sets the value of the <code>&lt;SIF_RefId&gt;</code> element.
	 *
	 *  @param value A <code>SIF_RefId</code> object
	 *  @since 2.0
	 */
	public void setSIF_RefId( SIF_RefId value ) { 
		removeChild( StudentDTD.INCIDENTREPORTER_SIF_REFID );
		addChild( StudentDTD.INCIDENTREPORTER_SIF_REFID, value);
	}

	/**
	 *  Sets the value of the <code>&lt;SIF_RefId&gt;</code> child element.
	 *  This form of <code>setSIF_RefId</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setSIF_RefId</code>
	 *  that accepts a single <code>SIF_RefId</code> object.
	 *
	 *  @param sifRefObject 
	 *  @param value Gets or sets the content value of the &lt;SIF_RefId&gt; element
	 *  @since 2.0
	 */
	public void setSIF_RefId( String sifRefObject, String value ) {
		removeChild( StudentDTD.INCIDENTREPORTER_SIF_REFID);
		addChild( StudentDTD.INCIDENTREPORTER_SIF_REFID, new SIF_RefId( sifRefObject, value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;SIF_RefId&gt;</code> element.
	 *
	 *  @return A <code>SIF_RefId</code> object
	 *  @since 2.0
	 */
	public SIF_RefId getSIF_RefId() { 
		return (SIF_RefId)getChild( StudentDTD.INCIDENTREPORTER_SIF_REFID);
	}

	/**
	 *  Removes the <code>SIF_RefId</code> child element previously created by calling <code>setSIF_RefId</code>
	 *
	 *  @since 2.0
	 */
	public void removeSIF_RefId() { 
		removeChild( StudentDTD.INCIDENTREPORTER_SIF_REFID );
	}

}
