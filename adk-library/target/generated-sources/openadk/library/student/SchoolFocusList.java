// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.student;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class SchoolFocusList extends SIFKeyedList<SchoolFocus>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public SchoolFocusList() {
		super( StudentDTD.SCHOOLFOCUSLIST );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param schoolFocus The type of educational institution as classified by its focus.
	 */
	public SchoolFocusList( SchoolFocus schoolFocus ) {
		super( StudentDTD.SCHOOLFOCUSLIST );
		this.safeAddChild( StudentDTD.SCHOOLFOCUSLIST_SCHOOLFOCUS, schoolFocus );
	}

	/**
	 *  Adds a new <code>&lt;SchoolFocus&gt;</code> repeatable element.
	 *  This form of <code>setSchoolFocus</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setSchoolFocus</code>
	 *  that accepts a single <code>SchoolFocus</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;SchoolFocus&gt; element
	 *  @since 1.5r1
	 */
	public void addSchoolFocus( SchoolFocusType value ) {
		addChild( StudentDTD.SCHOOLFOCUSLIST_SCHOOLFOCUS, new SchoolFocus( value ) );
	}

	/**
	 *  Removes a <code>SchoolFocus</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param value Identifies the SchoolFocus object to remove by its Value value
	 *  @since 1.5r1
	 */
	public void removeSchoolFocus( SchoolFocusType value ) { 
		removeChild( StudentDTD.SCHOOLFOCUSLIST_SCHOOLFOCUS, new String[] { value.toString() } );
	}

	/**
	 *  Gets a <code>SchoolFocus</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param value Identifies the SchoolFocus object to return by its "Value" attribute value
	 *  @return A <code>SchoolFocus</code> object
	 *  @since 1.5r1
	 */
	public SchoolFocus getSchoolFocus( SchoolFocusType value ) { 
		return (SchoolFocus)getChild( StudentDTD.SCHOOLFOCUSLIST_SCHOOLFOCUS, new String[] { value.toString() } );
	}

	/**
	 *  Gets all <code>SchoolFocus</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>SchoolFocus</code> objects
	 *  @since 1.5r1
	 */
	public SchoolFocus[] getSchoolFocuses() {
		List<SIFElement> v = getChildList( StudentDTD.SCHOOLFOCUSLIST_SCHOOLFOCUS);
		SchoolFocus[] cvt = new SchoolFocus[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>SchoolFocus</code> objects. All existing 
	 * <code>SchoolFocus</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>SchoolFocuses</code>.
	 *
	 *  @since 1.5r1
	 */
	public void setSchoolFocuses( SchoolFocus[] schoolfocuses ) {
		setChildren( StudentDTD.SCHOOLFOCUSLIST_SCHOOLFOCUS, schoolfocuses );
	}

}
