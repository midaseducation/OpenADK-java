// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.hrfin;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  This object contains information about an employee's picture. SIF_Events are reported.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class EmployeePicture extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public EmployeePicture() {
		super( ADK.getSIFVersion(), HrfinDTD.EMPLOYEEPICTURE );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId Key
	 *  @param employeePersonalRefId This is the GUID of the Employee whose picture this is.
	 *  @param pictureSource This element defines the picture. If the Type attribute is URL, this is the location of the picture in [JPEG] format; if Type is JPEG, this is the [JPEG] image data encoded using the Base64 Content-Transfer-Encoding defined in Section 6.8 of [RFC 2045].
	 */
	public EmployeePicture( String refId, String employeePersonalRefId, PictureSource pictureSource ) {
		super( ADK.getSIFVersion(), HrfinDTD.EMPLOYEEPICTURE );
		this.setRefId(refId);
		this.setEmployeePersonalRefId(employeePersonalRefId);
		this.setPictureSource(pictureSource);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( HrfinDTD.EMPLOYEEPICTURE_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { HrfinDTD.EMPLOYEEPICTURE_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Key"</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 2.7
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.EMPLOYEEPICTURE_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Key"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.7
	 */
	public void setRefId( String value ) { 
		setFieldValue( HrfinDTD.EMPLOYEEPICTURE_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>EmployeePersonalRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"This is the GUID of the Employee whose picture this is."</i><p>
	 *
	 *  @return The <code>EmployeePersonalRefId</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getEmployeePersonalRefId() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.EMPLOYEEPICTURE_EMPLOYEEPERSONALREFID );
	}

	/**
	 *  Sets the value of the <code>EmployeePersonalRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"This is the GUID of the Employee whose picture this is."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setEmployeePersonalRefId( String value ) { 
		setFieldValue( HrfinDTD.EMPLOYEEPICTURE_EMPLOYEEPERSONALREFID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;PictureSource&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element defines the picture. If the Type attribute is URL, this is the location of the picture in [JPEG] format; if Type is JPEG, this is the [JPEG] image data encoded using the Base64 Content-Transfer-Encoding defined in Section 6.8 of [RFC 2045]."</i><p>
	 *
	 *  @param value A <code>PictureSource</code> object
	 *  @since 1.5r1
	 */
	public void setPictureSource( PictureSource value ) { 
		removeChild( HrfinDTD.EMPLOYEEPICTURE_PICTURESOURCE );
		addChild( HrfinDTD.EMPLOYEEPICTURE_PICTURESOURCE, value);
	}

	/**
	 *  Sets the value of the <code>&lt;PictureSource&gt;</code> child element.
	 *  This form of <code>setPictureSource</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setPictureSource</code>
	 *  that accepts a single <code>PictureSource</code> object.
	 *
	 *  @param type The way the picture is specified.
	 *  @param value Gets or sets the content value of the &lt;PictureSource&gt; element
	 *  @since 1.5r1
	 */
	public void setPictureSource( PictureType type, String value ) {
		removeChild( HrfinDTD.EMPLOYEEPICTURE_PICTURESOURCE);
		addChild( HrfinDTD.EMPLOYEEPICTURE_PICTURESOURCE, new PictureSource( type, value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;PictureSource&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element defines the picture. If the Type attribute is URL, this is the location of the picture in [JPEG] format; if Type is JPEG, this is the [JPEG] image data encoded using the Base64 Content-Transfer-Encoding defined in Section 6.8 of [RFC 2045]."</i><p>
	 *
	 *  @return A <code>PictureSource</code> object
	 *  @since 1.5r1
	 */
	public PictureSource getPictureSource() { 
		return (PictureSource)getChild( HrfinDTD.EMPLOYEEPICTURE_PICTURESOURCE);
	}

	/**
	 *  Removes the <code>PictureSource</code> child element previously created by calling <code>setPictureSource</code>
	 *
	 *  @since 1.5r1
	 */
	public void removePictureSource() { 
		removeChild( HrfinDTD.EMPLOYEEPICTURE_PICTURESOURCE );
	}

}
