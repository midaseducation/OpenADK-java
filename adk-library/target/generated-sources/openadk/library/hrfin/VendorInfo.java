// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.hrfin;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  This object contains basic vendor information.  SIF_Events are reported.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class VendorInfo extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public VendorInfo() {
		super( ADK.getSIFVersion(), HrfinDTD.VENDORINFO );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId Vendor ID.
	 *  @param name Name of the vendor.
	 */
	public VendorInfo( String refId, String name ) {
		super( ADK.getSIFVersion(), HrfinDTD.VENDORINFO );
		this.setRefId(refId);
		this.setName(name);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( HrfinDTD.VENDORINFO_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { HrfinDTD.VENDORINFO_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Vendor ID."</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.VENDORINFO_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Vendor ID."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setRefId( String value ) { 
		setFieldValue( HrfinDTD.VENDORINFO_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Name of the vendor."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"VendorName"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Name"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>Name</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getName() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.VENDORINFO_NAME );
	}

	/**
	 *  Sets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Name of the vendor."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"VendorName"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Name"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setName( String value ) { 
		setFieldValue( HrfinDTD.VENDORINFO_NAME, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;ContactInfo&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contact information."</i><p>
	 *
	 *  @param value A <code>ContactInfo</code> object
	 *  @since 2.0
	 */
	public void setContactInfo( ContactInfo value ) { 
		removeChild( HrfinDTD.VENDORINFO_CONTACTINFO );
		addChild( HrfinDTD.VENDORINFO_CONTACTINFO, value);
	}

	/**
	 *  Sets the value of the <code>&lt;ContactInfo&gt;</code> child element.
	 *  This form of <code>setContactInfo</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setContactInfo</code>
	 *  that accepts a single <code>ContactInfo</code> object.
	 *
	 *  @param name The name of the contact person.
	 *  @since 2.0
	 */
	public void setContactInfo( Name name ) {
		removeChild( HrfinDTD.VENDORINFO_CONTACTINFO);
		addChild( HrfinDTD.VENDORINFO_CONTACTINFO, new ContactInfo( name ) );
	}

	/**
	 *  Gets the value of the <code>&lt;ContactInfo&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contact information."</i><p>
	 *
	 *  @return A <code>ContactInfo</code> object
	 *  @since 2.0
	 */
	public ContactInfo getContactInfo() { 
		return (ContactInfo)getChild( HrfinDTD.VENDORINFO_CONTACTINFO);
	}

	/**
	 *  Removes the <code>ContactInfo</code> child element previously created by calling <code>setContactInfo</code>
	 *
	 *  @since 2.0
	 */
	public void removeContactInfo() { 
		removeChild( HrfinDTD.VENDORINFO_CONTACTINFO );
	}

	/**
	 *  Sets the value of the <code>&lt;Address&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element has the staff member's address information (in SIF 2.x use the ContactInfo element)"</i><p>
	 *
	 *  @param value A <code>Address</code> object
	 *  @since 1.5r1
	 */
	public void setAddress( Address value ) { 
		removeChild( HrfinDTD.VENDORINFO_ADDRESS );
		addChild( HrfinDTD.VENDORINFO_ADDRESS, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Address&gt;</code> child element.
	 *  This form of <code>setAddress</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setAddress</code>
	 *  that accepts a single <code>Address</code> object.
	 *
	 *  @param type Code that defines the location of the address.  Note:  A subset of specific valid values for each instance in a data object may be listed in that object.
	 *  @param street The street part of the address
	 *  @param city The city part of the address.
	 *  @param stateProvince The state or province code.
	 *  @param country The country code.
	 *  @param postalCode The ZIP/postal code.
	 *  @since 1.5r1
	 */
	public void setAddress( AddressType type, Street street, String city, StatePrCode stateProvince, CountryCode country, String postalCode ) {
		removeChild( HrfinDTD.VENDORINFO_ADDRESS);
		addChild( HrfinDTD.VENDORINFO_ADDRESS, new Address( type, street, city, stateProvince, country, postalCode ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Address&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element has the staff member's address information (in SIF 2.x use the ContactInfo element)"</i><p>
	 *
	 *  @return An <code>Address</code> object
	 *  @since 1.5r1
	 */
	public Address getAddress() { 
		return (Address)getChild( HrfinDTD.VENDORINFO_ADDRESS);
	}

	/**
	 *  Removes the <code>Address</code> child element previously created by calling <code>setAddress</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeAddress() { 
		removeChild( HrfinDTD.VENDORINFO_ADDRESS );
	}

	/**
	 *  Adds a new <code>&lt;PhoneNumber&gt;</code> child element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This is the vendor's phone number (In SIF 2.x use the ContactInfo element)"</i><p>
	 *
	 *  @param value A <code>PhoneNumber</code> object
	 *  @since 1.5r1
	 */
	public void addPhoneNumber( PhoneNumber value ) { 
		addChild( HrfinDTD.VENDORINFO_PHONENUMBER, value);
	}

	/**
	 *  Adds a new <code>&lt;PhoneNumber&gt;</code> repeatable element.
	 *  This form of <code>setPhoneNumber</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setPhoneNumber</code>
	 *  that accepts a single <code>PhoneNumber</code> object.
	 *
	 *  @param type Code that specifies what type of phone number this is.  Note: A subset of valid values may be specified in data objects.
	 *  @param number Phone number.  Acceptable formats:
	 *  @since 1.5r1
	 */
	public void addPhoneNumber( PhoneNumberType type, String number ) {
		addChild( HrfinDTD.VENDORINFO_PHONENUMBER, new PhoneNumber( type, number ) );
	}

	/**
	 *  Removes a <code>PhoneNumber</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the PhoneNumber object to remove by its Type value
	 *  @since 1.5r1
	 */
	public void removePhoneNumber( PhoneNumberType type ) { 
		removeChild( HrfinDTD.VENDORINFO_PHONENUMBER, new String[] { type.toString() } );
	}

	/**
	 *  Gets a <code>PhoneNumber</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the PhoneNumber object to return by its "Type" attribute value
	 *  @return A <code>PhoneNumber</code> object
	 *  @since 1.5r1
	 */
	public PhoneNumber getPhoneNumber( PhoneNumberType type ) { 
		return (PhoneNumber)getChild( HrfinDTD.VENDORINFO_PHONENUMBER, new String[] { type.toString() } );
	}

	/**
	 *  Gets all <code>PhoneNumber</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>PhoneNumber</code> objects
	 *  @since 1.5r1
	 */
	public PhoneNumber[] getPhoneNumbers() {
		List<SIFElement> v = getChildList( HrfinDTD.VENDORINFO_PHONENUMBER);
		PhoneNumber[] cvt = new PhoneNumber[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>PhoneNumber</code> objects. All existing 
	 * <code>PhoneNumber</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>PhoneNumbers</code>.
	 *
	 *  @since 1.5r1
	 */
	public void setPhoneNumbers( PhoneNumber[] phonenumbers ) {
		setChildren( HrfinDTD.VENDORINFO_PHONENUMBER, phonenumbers );
	}

	/**
	 *  Adds a new <code>&lt;Email&gt;</code> child element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This is the vendor's email address number (In SIF 2.x use the ContactInfo element)"</i><p>
	 *
	 *  @param value A <code>Email</code> object
	 *  @since 1.5r1
	 */
	public void addEmail( Email value ) { 
		addChild( HrfinDTD.VENDORINFO_EMAIL, value);
	}

	/**
	 *  Adds a new <code>&lt;Email&gt;</code> repeatable element.
	 *  This form of <code>setEmail</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setEmail</code>
	 *  that accepts a single <code>Email</code> object.
	 *
	 *  @param type This attribute specifies the type of e-mail address.
	 *  @param value Gets or sets the content value of the &lt;Email&gt; element
	 *  @since 1.5r1
	 */
	public void addEmail( EmailType type, String value ) {
		addChild( HrfinDTD.VENDORINFO_EMAIL, new Email( type, value ) );
	}

	/**
	 *  Removes an <code>Email</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the Email object to remove by its Type value
	 *  @since 1.5r1
	 */
	public void removeEmail( EmailType type ) { 
		removeChild( HrfinDTD.VENDORINFO_EMAIL, new String[] { type.toString() } );
	}

	/**
	 *  Gets an <code>Email</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the Email object to return by its "Type" attribute value
	 *  @return An <code>Email</code> object
	 *  @since 1.5r1
	 */
	public Email getEmail( EmailType type ) { 
		return (Email)getChild( HrfinDTD.VENDORINFO_EMAIL, new String[] { type.toString() } );
	}

	/**
	 *  Gets all <code>Email</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>Email</code> objects
	 *  @since 1.5r1
	 */
	public Email[] getEmails() {
		List<SIFElement> v = getChildList( HrfinDTD.VENDORINFO_EMAIL);
		Email[] cvt = new Email[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>Email</code> objects. All existing 
	 * <code>Email</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>Emails</code>.
	 *
	 *  @since 1.5r1
	 */
	public void setEmails( Email[] emails ) {
		setChildren( HrfinDTD.VENDORINFO_EMAIL, emails );
	}

	/**
	 *  Gets the value of the <code>&lt;ContactName&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contact of salesperson name (In SIF 2.x use the ContactInfo element)"</i><p>
	 *
	 *  @return The <code>ContactName</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getContactName() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.VENDORINFO_CONTACTNAME );
	}

	/**
	 *  Sets the value of the <code>&lt;ContactName&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contact of salesperson name (In SIF 2.x use the ContactInfo element)"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setContactName( String value ) { 
		setFieldValue( HrfinDTD.VENDORINFO_CONTACTNAME, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;CustomerId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Account number or other ID."</i><p>
	 *
	 *  @return The <code>CustomerId</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getCustomerId() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.VENDORINFO_CUSTOMERID );
	}

	/**
	 *  Sets the value of the <code>&lt;CustomerId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Account number or other ID."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setCustomerId( String value ) { 
		setFieldValue( HrfinDTD.VENDORINFO_CUSTOMERID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;EmployeePersonalRefId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"
        When the vendor and employee are the same, it may be appropriate to link the EmployeePersonal records to
        the VendorInfo when tracking expense and tuition reimbursement.  This is the GUID of the associated EmployeePersonal object.
      "</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"EmployeeId"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"EmployeePersonalRefId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>EmployeePersonalRefId</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getEmployeePersonalRefId() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.VENDORINFO_EMPLOYEEPERSONALREFID );
	}

	/**
	 *  Sets the value of the <code>&lt;EmployeePersonalRefId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"
        When the vendor and employee are the same, it may be appropriate to link the EmployeePersonal records to
        the VendorInfo when tracking expense and tuition reimbursement.  This is the GUID of the associated EmployeePersonal object.
      "</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"EmployeeId"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"EmployeePersonalRefId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setEmployeePersonalRefId( String value ) { 
		setFieldValue( HrfinDTD.VENDORINFO_EMPLOYEEPERSONALREFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Send1099&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Send 1099 to this vendor."</i><p>
	 *
	 *  @return The <code>Send1099</code> element of this object.
	 *  @since 1.5r1
	 */
	public Boolean getSend1099() { 
		return (Boolean) getSIFSimpleFieldValue( HrfinDTD.VENDORINFO_SEND1099 );
	}

	/**
	 *  Sets the value of the <code>&lt;Send1099&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Send 1099 to this vendor."</i><p>
	 *
	 *  @param value A <code>Boolean</code> object
	 *  @since 1.5r1
	 */
	public void setSend1099( Boolean value ) { 
		setFieldValue( HrfinDTD.VENDORINFO_SEND1099, new SIFBoolean( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;FederalTaxId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Taxpayer identification number/Federal tax ID for this vendor."</i><p>
	 *
	 *  @param value A <code>FederalTaxId</code> object
	 *  @since 1.5r1
	 */
	public void setFederalTaxId( FederalTaxId value ) { 
		removeChild( HrfinDTD.VENDORINFO_FEDERALTAXID );
		addChild( HrfinDTD.VENDORINFO_FEDERALTAXID, value);
	}

	/**
	 *  Sets the value of the <code>&lt;FederalTaxId&gt;</code> child element.
	 *  This form of <code>setFederalTaxId</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setFederalTaxId</code>
	 *  that accepts a single <code>FederalTaxId</code> object.
	 *
	 *  @param code The type tax ID that this is. TIN based on IRS Publication 1915 [IRSTIN].
	 *  @param value Gets or sets the content value of the &lt;FederalTaxId&gt; element
	 *  @since 1.5r1
	 */
	public void setFederalTaxId( FederalTaxIdCode code, String value ) {
		removeChild( HrfinDTD.VENDORINFO_FEDERALTAXID);
		addChild( HrfinDTD.VENDORINFO_FEDERALTAXID, new FederalTaxId( code, value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;FederalTaxId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Taxpayer identification number/Federal tax ID for this vendor."</i><p>
	 *
	 *  @return A <code>FederalTaxId</code> object
	 *  @since 1.5r1
	 */
	public FederalTaxId getFederalTaxId() { 
		return (FederalTaxId)getChild( HrfinDTD.VENDORINFO_FEDERALTAXID);
	}

	/**
	 *  Removes the <code>FederalTaxId</code> child element previously created by calling <code>setFederalTaxId</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeFederalTaxId() { 
		removeChild( HrfinDTD.VENDORINFO_FEDERALTAXID );
	}

}
