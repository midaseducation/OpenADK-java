// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.hrfin;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  Information about budget accounts being submitted<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class BudgetAccount extends SIFElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public BudgetAccount() {
		super( HrfinDTD.BUDGETACCOUNT );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param accountClass Classification of budgetary account code summary
	 *  @param functionBreakdown Function breakdown of account code for summarization.
	 *  @param budgetAmount Summarized, positive amount without cents for breakdowns
	 */
	public BudgetAccount( AccountClass accountClass, String functionBreakdown, MonetaryAmount budgetAmount ) {
		super( HrfinDTD.BUDGETACCOUNT );
		this.setAccountClass( accountClass );
		this.setFunctionBreakdown(functionBreakdown);
		this.setBudgetAmount(budgetAmount);
	}

	/**
	 *  Gets the value of the <code>&lt;AccountClass&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Classification of budgetary account code summary"</i><p>
	 *
	 *  @return The <code>AccountClass</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getAccountClass() { 
		return getFieldValue( HrfinDTD.BUDGETACCOUNT_ACCOUNTCLASS );
	}

	/**
	 *  Sets the value of the <code>&lt;AccountClass&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Classification of budgetary account code summary"</i><p>
	 *
	 *  @param value A constant defined by the <code>AccountClass</code> class
	 *  @since 1.5r1
	 */
	public void setAccountClass( AccountClass value ) { 
		setField( HrfinDTD.BUDGETACCOUNT_ACCOUNTCLASS, value );
	}

	/**
	 *  Sets the value of the <code>&lt;AccountClass&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Classification of budgetary account code summary"</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setAccountClass( String value ) { 
		setField( HrfinDTD.BUDGETACCOUNT_ACCOUNTCLASS, value );
	}

	/**
	 *  Gets the value of the <code>&lt;FundBreakdown&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Fund breakdown of account code for summarization."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"FundBreak"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"FundBreakdown"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>FundBreakdown</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getFundBreakdown() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.BUDGETACCOUNT_FUNDBREAKDOWN );
	}

	/**
	 *  Sets the value of the <code>&lt;FundBreakdown&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Fund breakdown of account code for summarization."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"FundBreak"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"FundBreakdown"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setFundBreakdown( String value ) { 
		setFieldValue( HrfinDTD.BUDGETACCOUNT_FUNDBREAKDOWN, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;FunctionBreakdown&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Function breakdown of account code for summarization."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"FuncBreak"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"FunctionBreakdown"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>FunctionBreakdown</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getFunctionBreakdown() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.BUDGETACCOUNT_FUNCTIONBREAKDOWN );
	}

	/**
	 *  Sets the value of the <code>&lt;FunctionBreakdown&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Function breakdown of account code for summarization."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"FuncBreak"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"FunctionBreakdown"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setFunctionBreakdown( String value ) { 
		setFieldValue( HrfinDTD.BUDGETACCOUNT_FUNCTIONBREAKDOWN, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;ObjectBreakdown&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Object breakdown of account code for summarization."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"ObjBreak"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"ObjectBreakdown"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>ObjectBreakdown</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getObjectBreakdown() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.BUDGETACCOUNT_OBJECTBREAKDOWN );
	}

	/**
	 *  Sets the value of the <code>&lt;ObjectBreakdown&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Object breakdown of account code for summarization."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"ObjBreak"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"ObjectBreakdown"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setObjectBreakdown( String value ) { 
		setFieldValue( HrfinDTD.BUDGETACCOUNT_OBJECTBREAKDOWN, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;BudgetAmount&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Summarized, positive amount without cents for breakdowns"</i><p>
	 *
	 *  @param value A <code>MonetaryAmount</code> object
	 *  @since 1.5r1
	 */
	public void setBudgetAmount( MonetaryAmount value ) { 
		removeChild( HrfinDTD.BUDGETACCOUNT_BUDGETAMOUNT );
		addChild( HrfinDTD.BUDGETACCOUNT_BUDGETAMOUNT, value);
	}

	/**
	 *  Sets the value of the <code>&lt;BudgetAmount&gt;</code> child element.
	 *  This form of <code>setBudgetAmount</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setBudgetAmount</code>
	 *  that accepts a single <code>MonetaryAmount</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;MonetaryAmount&gt; element
	 *  @since 1.5r1
	 */
	public void setBudgetAmount( BigDecimal value ) {
		removeChild( HrfinDTD.BUDGETACCOUNT_BUDGETAMOUNT);
		addChild( HrfinDTD.BUDGETACCOUNT_BUDGETAMOUNT, new MonetaryAmount( value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;BudgetAmount&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Summarized, positive amount without cents for breakdowns"</i><p>
	 *
	 *  @return A <code>MonetaryAmount</code> object
	 *  @since 1.5r1
	 */
	public MonetaryAmount getBudgetAmount() { 
		return (MonetaryAmount)getChild( HrfinDTD.BUDGETACCOUNT_BUDGETAMOUNT);
	}

	/**
	 *  Removes the <code>BudgetAmount</code> child element previously created by calling <code>setBudgetAmount</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeBudgetAmount() { 
		removeChild( HrfinDTD.BUDGETACCOUNT_BUDGETAMOUNT );
	}

}
