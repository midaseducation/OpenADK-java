// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.hrfin;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  LocationInfo represents a location in a district.  SIF_Events are reported.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class LocationInfo extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public LocationInfo() {
		super( ADK.getSIFVersion(), HrfinDTD.LOCATIONINFO );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId The SIF unique identifier for the location.
	 *  @param locationType Defines whether the location is a school or a non-school location.
	 *  @param siteCategory Specific site category.
	 *  @param name Text name of the location
	 *  @param localId The locally-assigned identifier for this location.
	 */
	public LocationInfo( String refId, LocationInfoType locationType, String siteCategory, String name, String localId ) {
		super( ADK.getSIFVersion(), HrfinDTD.LOCATIONINFO );
		this.setRefId(refId);
		this.setLocationType( locationType );
		this.setSiteCategory(siteCategory);
		this.setName(name);
		this.setLocalId(localId);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( HrfinDTD.LOCATIONINFO_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { HrfinDTD.LOCATIONINFO_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The SIF unique identifier for the location."</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.LOCATIONINFO_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The SIF unique identifier for the location."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setRefId( String value ) { 
		setFieldValue( HrfinDTD.LOCATIONINFO_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>LocationType</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Defines whether the location is a school or a non-school location."</i><p>
	 *
	 *  @return The <code>LocationType</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getLocationType() { 
		return getFieldValue( HrfinDTD.LOCATIONINFO_LOCATIONTYPE );
	}

	/**
	 *  Sets the value of the <code>LocationType</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Defines whether the location is a school or a non-school location."</i><p>
	 *
	 *  @param value A constant defined by the <code>LocationInfoType</code> class
	 *  @since 1.5r1
	 */
	public void setLocationType( LocationInfoType value ) { 
		setField( HrfinDTD.LOCATIONINFO_LOCATIONTYPE, value );
	}

	/**
	 *  Sets the value of the <code>LocationType</code> attribute as a String.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Defines whether the location is a school or a non-school location."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setLocationType( String value ) { 
		setField( HrfinDTD.LOCATIONINFO_LOCATIONTYPE, value );
	}

	/**
	 *  Gets the value of the <code>&lt;SiteCategory&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Specific site category."</i><p>
	 *
	 *  @return The <code>SiteCategory</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getSiteCategory() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.LOCATIONINFO_SITECATEGORY );
	}

	/**
	 *  Sets the value of the <code>&lt;SiteCategory&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Specific site category."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setSiteCategory( String value ) { 
		setFieldValue( HrfinDTD.LOCATIONINFO_SITECATEGORY, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Text name of the location"</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"LocationName"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Name"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>Name</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getName() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.LOCATIONINFO_NAME );
	}

	/**
	 *  Sets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Text name of the location"</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"LocationName"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"Name"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setName( String value ) { 
		setFieldValue( HrfinDTD.LOCATIONINFO_NAME, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Description about the location."</i><p>
	 *
	 *  @return The <code>Description</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getDescription() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.LOCATIONINFO_DESCRIPTION );
	}

	/**
	 *  Sets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Description about the location."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setDescription( String value ) { 
		setFieldValue( HrfinDTD.LOCATIONINFO_DESCRIPTION, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;LocalId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The locally-assigned identifier for this location."</i><p>
	 *
	 *  @return The <code>LocalId</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getLocalId() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.LOCATIONINFO_LOCALID );
	}

	/**
	 *  Sets the value of the <code>&lt;LocalId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The locally-assigned identifier for this location."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setLocalId( String value ) { 
		setFieldValue( HrfinDTD.LOCATIONINFO_LOCALID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;IdentificationInfoList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Other identification information associated with a location, such as the locally-defined code/identifier, etc."</i><p>
	 *
	 *  @param value A <code>IdentificationInfoList</code> object
	 *  @since 1.5r1
	 */
	public void setIdentificationInfoList( IdentificationInfoList value ) { 
		removeChild( HrfinDTD.LOCATIONINFO_IDENTIFICATIONINFOLIST );
		addChild( HrfinDTD.LOCATIONINFO_IDENTIFICATIONINFOLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;IdentificationInfoList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Other identification information associated with a location, such as the locally-defined code/identifier, etc."</i><p>
	 *
	 *  @return An <code>IdentificationInfoList</code> object
	 *  @since 1.5r1
	 */
	public IdentificationInfoList getIdentificationInfoList() { 
		return (IdentificationInfoList)getChild( HrfinDTD.LOCATIONINFO_IDENTIFICATIONINFOLIST);
	}

	/**
	 *  Removes the <code>IdentificationInfoList</code> child element previously created by calling <code>setIdentificationInfoList</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeIdentificationInfoList() { 
		removeChild( HrfinDTD.LOCATIONINFO_IDENTIFICATIONINFOLIST );
	}

	/**
	 *  Gets the value of the <code>&lt;StateProvinceId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The state-assigned identifier for this location."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"StatePrId"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"StateProvinceId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>StateProvinceId</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getStateProvinceId() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.LOCATIONINFO_STATEPROVINCEID );
	}

	/**
	 *  Sets the value of the <code>&lt;StateProvinceId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The state-assigned identifier for this location."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"StatePrId"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"StateProvinceId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setStateProvinceId( String value ) { 
		setFieldValue( HrfinDTD.LOCATIONINFO_STATEPROVINCEID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;NCESId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The NCES-assigned identifier for this location.For a description of this element, see 5.1.19 NCESId."</i><p>
	 *
	 *  @return The <code>NCESId</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getNCESId() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.LOCATIONINFO_NCESID );
	}

	/**
	 *  Sets the value of the <code>&lt;NCESId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The NCES-assigned identifier for this location.For a description of this element, see 5.1.19 NCESId."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setNCESId( String value ) { 
		setFieldValue( HrfinDTD.LOCATIONINFO_NCESID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;LEAInfoRefId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The ID (GUID) that identifies the district."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"SchoolDistrict"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"LEAInfoRefId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>LEAInfoRefId</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getLEAInfoRefId() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.LOCATIONINFO_LEAINFOREFID );
	}

	/**
	 *  Sets the value of the <code>&lt;LEAInfoRefId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The ID (GUID) that identifies the district."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"SchoolDistrict"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"LEAInfoRefId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setLEAInfoRefId( String value ) { 
		setFieldValue( HrfinDTD.LOCATIONINFO_LEAINFOREFID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;OtherLEAs&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Other related education agency, such as a regional service agency."</i><p>
	 *
	 *  @param value A <code>OtherLEAs</code> object
	 *  @since 1.5r1
	 */
	public void setOtherLEAs( OtherLEAs value ) { 
		removeChild( HrfinDTD.LOCATIONINFO_OTHERLEAS );
		addChild( HrfinDTD.LOCATIONINFO_OTHERLEAS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;OtherLEAs&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Other related education agency, such as a regional service agency."</i><p>
	 *
	 *  @return An <code>OtherLEAs</code> object
	 *  @since 1.5r1
	 */
	public OtherLEAs getOtherLEAs() { 
		return (OtherLEAs)getChild( HrfinDTD.LOCATIONINFO_OTHERLEAS);
	}

	/**
	 *  Removes the <code>OtherLEAs</code> child element previously created by calling <code>setOtherLEAs</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeOtherLEAs() { 
		removeChild( HrfinDTD.LOCATIONINFO_OTHERLEAS );
	}

	/**
	 *  Sets the value of the <code>&lt;ParentLocationInfo&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A LocationInfo instance could be related to another LocationInfo.  This element will help create that relation."</i><p>
	 *
	 *  @param value A <code>ParentLocationInfo</code> object
	 *  @since 1.5r1
	 */
	public void setParentLocationInfo( ParentLocationInfo value ) { 
		removeChild( HrfinDTD.LOCATIONINFO_PARENTLOCATIONINFO );
		addChild( HrfinDTD.LOCATIONINFO_PARENTLOCATIONINFO, value);
	}

	/**
	 *  Sets the value of the <code>&lt;ParentLocationInfo&gt;</code> child element.
	 *  This form of <code>setParentLocationInfo</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setParentLocationInfo</code>
	 *  that accepts a single <code>ParentLocationInfo</code> object.
	 *
	 *  @param sifRefObject The name of the object referenced.
	 *  @param value Gets or sets the content value of the &lt;ParentLocationInfo&gt; element
	 *  @since 1.5r1
	 */
	public void setParentLocationInfo( String sifRefObject, String value ) {
		removeChild( HrfinDTD.LOCATIONINFO_PARENTLOCATIONINFO);
		addChild( HrfinDTD.LOCATIONINFO_PARENTLOCATIONINFO, new ParentLocationInfo( sifRefObject, value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;ParentLocationInfo&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A LocationInfo instance could be related to another LocationInfo.  This element will help create that relation."</i><p>
	 *
	 *  @return A <code>ParentLocationInfo</code> object
	 *  @since 1.5r1
	 */
	public ParentLocationInfo getParentLocationInfo() { 
		return (ParentLocationInfo)getChild( HrfinDTD.LOCATIONINFO_PARENTLOCATIONINFO);
	}

	/**
	 *  Removes the <code>ParentLocationInfo</code> child element previously created by calling <code>setParentLocationInfo</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeParentLocationInfo() { 
		removeChild( HrfinDTD.LOCATIONINFO_PARENTLOCATIONINFO );
	}

	/**
	 *  Gets the value of the <code>&lt;SchoolInfoRefId&gt;</code> element.
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"School"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"SchoolInfoRefId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>SchoolInfoRefId</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getSchoolInfoRefId() { 
		return (String) getSIFSimpleFieldValue( HrfinDTD.LOCATIONINFO_SCHOOLINFOREFID );
	}

	/**
	 *  Sets the value of the <code>&lt;SchoolInfoRefId&gt;</code> element.
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"School"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"SchoolInfoRefId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setSchoolInfoRefId( String value ) { 
		setFieldValue( HrfinDTD.LOCATIONINFO_SCHOOLINFOREFID, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;AddressList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element has the LocationInfo address information."</i><p>
	 *
	 *  @param value A <code>AddressList</code> object
	 *  @since 1.5r1
	 */
	public void setAddressList( AddressList value ) { 
		removeChild( HrfinDTD.LOCATIONINFO_ADDRESSLIST );
		addChild( HrfinDTD.LOCATIONINFO_ADDRESSLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;AddressList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element has the LocationInfo address information."</i><p>
	 *
	 *  @return An <code>AddressList</code> object
	 *  @since 1.5r1
	 */
	public AddressList getAddressList() { 
		return (AddressList)getChild( HrfinDTD.LOCATIONINFO_ADDRESSLIST);
	}

	/**
	 *  Removes the <code>AddressList</code> child element previously created by calling <code>setAddressList</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeAddressList() { 
		removeChild( HrfinDTD.LOCATIONINFO_ADDRESSLIST );
	}

	/**
	 *  Sets the value of the <code>&lt;PhoneNumberList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The location's phone numbers."</i><p>
	 *
	 *  @param value A <code>PhoneNumberList</code> object
	 *  @since 1.5r1
	 */
	public void setPhoneNumberList( PhoneNumberList value ) { 
		removeChild( HrfinDTD.LOCATIONINFO_PHONENUMBERLIST );
		addChild( HrfinDTD.LOCATIONINFO_PHONENUMBERLIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;PhoneNumberList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The location's phone numbers."</i><p>
	 *
	 *  @return A <code>PhoneNumberList</code> object
	 *  @since 1.5r1
	 */
	public PhoneNumberList getPhoneNumberList() { 
		return (PhoneNumberList)getChild( HrfinDTD.LOCATIONINFO_PHONENUMBERLIST);
	}

	/**
	 *  Removes the <code>PhoneNumberList</code> child element previously created by calling <code>setPhoneNumberList</code>
	 *
	 *  @since 1.5r1
	 */
	public void removePhoneNumberList() { 
		removeChild( HrfinDTD.LOCATIONINFO_PHONENUMBERLIST );
	}

}
