// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.trans;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.1
 */
public class TransferPoints extends SIFList<TransferPoint>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public TransferPoints() {
		super( TransDTD.TRANSFERPOINTS );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param transferPoint There should be one TransferPoint for each intermediate point on a trip. The "embark" and "disembark" bus stops for a single transfer point must be at the same location. To order multiple TransferPoint elements, use the Time element of the BusStopInfo objects referenced by the attributes.
	 */
	public TransferPoints( TransferPoint transferPoint ) {
		super( TransDTD.TRANSFERPOINTS );
		this.safeAddChild( TransDTD.TRANSFERPOINTS_TRANSFERPOINT, transferPoint );
	}

	/**
	 *  Adds a new <code>&lt;TransferPoint&gt;</code> repeatable element.
	 *  This form of <code>setTransferPoint</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setTransferPoint</code>
	 *  that accepts a single <code>TransferPoint</code> object.
	 *
	 *  @param embarkBusRouteDetail The GUID that identifies the bus stop/route when the student gets on the bus.
	 *  @param disembarkBusRouteDetail The GUID that identifies the bus stop/route when the student gets off the bus.
	 *  @since 1.1
	 */
	public void addTransferPoint( EmbarkBusRouteDetail embarkBusRouteDetail, DisembarkBusRouteDetail disembarkBusRouteDetail ) {
		addChild( TransDTD.TRANSFERPOINTS_TRANSFERPOINT, new TransferPoint( embarkBusRouteDetail, disembarkBusRouteDetail ) );
	}

	/**
	 *  Removes a <code>TransferPoint</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param embarkBusRouteDetail Identifies the TransferPoint object to remove by its EmbarkBusRouteDetail value
	 *  @param disembarkBusRouteDetail Identifies the TransferPoint object to remove by its DisembarkBusRouteDetail value
	 *  @since 1.1
	 */
	public void removeTransferPoint( EmbarkBusRouteDetail embarkBusRouteDetail, DisembarkBusRouteDetail disembarkBusRouteDetail ) { 
		removeChild( TransDTD.TRANSFERPOINTS_TRANSFERPOINT, new String[] { embarkBusRouteDetail.toString(),disembarkBusRouteDetail.toString() } );
	}

	/**
	 *  Gets a <code>TransferPoint</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param embarkBusRouteDetail Identifies the TransferPoint object to return by its "EmbarkBusRouteDetail" attribute value
	 *  @param disembarkBusRouteDetail Identifies the TransferPoint object to return by its "DisembarkBusRouteDetail" attribute value
	 *  @return A <code>TransferPoint</code> object
	 *  @since 1.1
	 */
	public TransferPoint getTransferPoint( EmbarkBusRouteDetail embarkBusRouteDetail, DisembarkBusRouteDetail disembarkBusRouteDetail ) { 
		return (TransferPoint)getChild( TransDTD.TRANSFERPOINTS_TRANSFERPOINT, new String[] { embarkBusRouteDetail.toString(),disembarkBusRouteDetail.toString() } );
	}

	/**
	 *  Gets all <code>TransferPoint</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>TransferPoint</code> objects
	 *  @since 1.1
	 */
	public TransferPoint[] getTransferPoints() {
		List<SIFElement> v = getChildList( TransDTD.TRANSFERPOINTS_TRANSFERPOINT);
		TransferPoint[] cvt = new TransferPoint[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>TransferPoint</code> objects. All existing 
	 * <code>TransferPoint</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>TransferPoints</code>.
	 *
	 *  @since 1.1
	 */
	public void setTransferPoints( TransferPoint[] transferpoints ) {
		setChildren( TransDTD.TRANSFERPOINTS_TRANSFERPOINT, transferpoints );
	}

}
