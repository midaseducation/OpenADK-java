// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.common;

import openadk.library.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  This list contains information that describes each specific instructional, related or transitional service that has been prescribed or recommended in the program plan developed for a student who has been placed in an individualized special program.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.4
 */
public class StudentPlacementList extends SIFKeyedList<StudentPlacementData>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public StudentPlacementList() {
		super( CommonDTD.STUDENTPLACEMENTLIST );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param studentPlacementData Collects elements of interest for each StudentPlacement.
	 */
	public StudentPlacementList( StudentPlacementData studentPlacementData ) {
		super( CommonDTD.STUDENTPLACEMENTLIST );
		this.safeAddChild( CommonDTD.STUDENTPLACEMENTLIST_STUDENTPLACEMENTDATA, studentPlacementData );
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( CommonDTD.STUDENTPLACEMENTLIST_STUDENTPLACEMENTDATA );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { CommonDTD.STUDENTPLACEMENTLIST_STUDENTPLACEMENTDATA };
	}

	/**
	 *  Adds a new <code>&lt;StudentPlacementData&gt;</code> repeatable element.
	 *  This form of <code>setStudentPlacementData</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setStudentPlacementData</code>
	 *  that accepts a single <code>StudentPlacementData</code> object.
	 *
	 *  @param service 
	 *  @since 2.4
	 */
	public void addStudentPlacementData( Service service ) {
		addChild( CommonDTD.STUDENTPLACEMENTLIST_STUDENTPLACEMENTDATA, new StudentPlacementData( service ) );
	}

	/**
	 *  Removes a <code>StudentPlacementData</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param service Identifies the StudentPlacementData object to remove by its Service value
	 *  @since 2.4
	 */
	public void removeStudentPlacementData( Service service ) { 
		removeChild( CommonDTD.STUDENTPLACEMENTLIST_STUDENTPLACEMENTDATA, new String[] { service.toString() } );
	}

	/**
	 *  Gets a <code>StudentPlacementData</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param service Identifies the StudentPlacementData object to return by its "Service" attribute value
	 *  @return A <code>StudentPlacementData</code> object
	 *  @since 2.4
	 */
	public StudentPlacementData getStudentPlacementData( Service service ) { 
		return (StudentPlacementData)getChild( CommonDTD.STUDENTPLACEMENTLIST_STUDENTPLACEMENTDATA, new String[] { service.toString() } );
	}

	/**
	 *  Gets all <code>StudentPlacementData</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>StudentPlacementData</code> objects
	 *  @since 2.4
	 */
	public StudentPlacementData[] getStudentPlacementDatas() {
		List<SIFElement> v = getChildList( CommonDTD.STUDENTPLACEMENTLIST_STUDENTPLACEMENTDATA);
		StudentPlacementData[] cvt = new StudentPlacementData[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>StudentPlacementData</code> objects. All existing 
	 * <code>StudentPlacementData</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>StudentPlacementDatas</code>.
	 *
	 *  @since 2.4
	 */
	public void setStudentPlacementDatas( StudentPlacementData[] studentplacementdatas ) {
		setChildren( CommonDTD.STUDENTPLACEMENTLIST_STUDENTPLACEMENTDATA, studentplacementdatas );
	}

}
