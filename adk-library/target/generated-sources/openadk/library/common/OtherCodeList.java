// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.common;

import openadk.library.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.0
 */
public class OtherCodeList extends SIFKeyedList<OtherCode>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public OtherCodeList() {
		super( CommonDTD.OTHERCODELIST );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param otherCode A state/province code, local code, other code or a text string that crosswalks to or serves as a translation of an associated Code element.
	 */
	public OtherCodeList( OtherCode otherCode ) {
		super( CommonDTD.OTHERCODELIST );
		this.safeAddChild( CommonDTD.OTHERCODELIST_OTHERCODE, otherCode );
	}

	/**
	 *  Adds a new <code>&lt;OtherCode&gt;</code> repeatable element.
	 *  This form of <code>setOtherCode</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setOtherCode</code>
	 *  that accepts a single <code>OtherCode</code> object.
	 *
	 *  @param codeset Describes the OtherCode element content as either a state/province code, a local code, other code, or text string.
	 *  @param value Gets or sets the content value of the &lt;OtherCode&gt; element
	 *  @since 2.0
	 */
	public void addOtherCode( Codeset codeset, String value ) {
		addChild( CommonDTD.OTHERCODELIST_OTHERCODE, new OtherCode( codeset, value ) );
	}

	/**
	 *  Removes an <code>OtherCode</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param codeset Identifies the OtherCode object to remove by its Codeset value
	 *  @since 2.0
	 */
	public void removeOtherCode( Codeset codeset ) { 
		removeChild( CommonDTD.OTHERCODELIST_OTHERCODE, new String[] { codeset.toString() } );
	}

	/**
	 *  Gets an <code>OtherCode</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param codeset Identifies the OtherCode object to return by its "Codeset" attribute value
	 *  @return An <code>OtherCode</code> object
	 *  @since 2.0
	 */
	public OtherCode getOtherCode( Codeset codeset ) { 
		return (OtherCode)getChild( CommonDTD.OTHERCODELIST_OTHERCODE, new String[] { codeset.toString() } );
	}

	/**
	 *  Gets all <code>OtherCode</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>OtherCode</code> objects
	 *  @since 2.0
	 */
	public OtherCode[] getOtherCodes() {
		List<SIFElement> v = getChildList( CommonDTD.OTHERCODELIST_OTHERCODE);
		OtherCode[] cvt = new OtherCode[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>OtherCode</code> objects. All existing 
	 * <code>OtherCode</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>OtherCodes</code>.
	 *
	 *  @since 2.0
	 */
	public void setOtherCodes( OtherCode[] othercodes ) {
		setChildren( CommonDTD.OTHERCODELIST_OTHERCODE, othercodes );
	}

}
