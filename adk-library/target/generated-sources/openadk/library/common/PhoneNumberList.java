// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.common;

import openadk.library.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.1
 */
public class PhoneNumberList extends SIFActionList<PhoneNumber>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public PhoneNumberList() {
		super( CommonDTD.PHONENUMBERLIST );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param phoneNumber This element contains the employee's phone number.For a description of this element, see 5.1.22 PhoneNumber.
	 */
	public PhoneNumberList( PhoneNumber phoneNumber ) {
		super( CommonDTD.PHONENUMBERLIST );
		this.safeAddChild( CommonDTD.PHONENUMBERLIST_PHONENUMBER, phoneNumber );
	}

	/**
	 *  Adds a new <code>&lt;PhoneNumber&gt;</code> repeatable element.
	 *  This form of <code>setPhoneNumber</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setPhoneNumber</code>
	 *  that accepts a single <code>PhoneNumber</code> object.
	 *
	 *  @param type Code that specifies what type of phone number this is.  Note: A subset of valid values may be specified in data objects.
	 *  @param number Phone number.  Acceptable formats:
	 *  @since 1.1
	 */
	public void addPhoneNumber( PhoneNumberType type, String number ) {
		addChild( CommonDTD.PHONENUMBERLIST_PHONENUMBER, new PhoneNumber( type, number ) );
	}

	/**
	 *  Removes a <code>PhoneNumber</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the PhoneNumber object to remove by its Type value
	 *  @since 1.1
	 */
	public void removePhoneNumber( PhoneNumberType type ) { 
		removeChild( CommonDTD.PHONENUMBERLIST_PHONENUMBER, new String[] { type.toString() } );
	}

	/**
	 *  Gets a <code>PhoneNumber</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the PhoneNumber object to return by its "Type" attribute value
	 *  @return A <code>PhoneNumber</code> object
	 *  @since 1.1
	 */
	public PhoneNumber getPhoneNumber( PhoneNumberType type ) { 
		return (PhoneNumber)getChild( CommonDTD.PHONENUMBERLIST_PHONENUMBER, new String[] { type.toString() } );
	}

	/**
	 *  Gets all <code>PhoneNumber</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>PhoneNumber</code> objects
	 *  @since 1.1
	 */
	public PhoneNumber[] getPhoneNumbers() {
		List<SIFElement> v = getChildList( CommonDTD.PHONENUMBERLIST_PHONENUMBER);
		PhoneNumber[] cvt = new PhoneNumber[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>PhoneNumber</code> objects. All existing 
	 * <code>PhoneNumber</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>PhoneNumbers</code>.
	 *
	 *  @since 1.1
	 */
	public void setPhoneNumbers( PhoneNumber[] phonenumbers ) {
		setChildren( CommonDTD.PHONENUMBERLIST_PHONENUMBER, phonenumbers );
	}

}
