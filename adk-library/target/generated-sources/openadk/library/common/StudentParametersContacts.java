// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.common;

import openadk.library.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.4
 */
public class StudentParametersContacts extends SIFKeyedList<Contact>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public StudentParametersContacts() {
		super( CommonDTD.STUDENTPARAMETERSCONTACTS );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param contact Typically used to provide the state information about a person's parents and legal guardians.
	 */
	public StudentParametersContacts( Contact contact ) {
		super( CommonDTD.STUDENTPARAMETERSCONTACTS );
		this.safeAddChild( CommonDTD.STUDENTPARAMETERSCONTACTS_CONTACT, contact );
	}

	/**
	 *  Adds a new <code>&lt;Contact&gt;</code> repeatable element.
	 *  This form of <code>setContact</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setContact</code>
	 *  that accepts a single <code>Contact</code> object.
	 *
	 *  @param relationship Relationship to the person.
	 *  @since 2.4
	 */
	public void addContact( Relationship relationship ) {
		addChild( CommonDTD.STUDENTPARAMETERSCONTACTS_CONTACT, new Contact( relationship ) );
	}

	/**
	 *  Removes a <code>Contact</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param relationship Identifies the Contact object to remove by its Relationship value
	 *  @since 2.4
	 */
	public void removeContact( Relationship relationship ) { 
		removeChild( CommonDTD.STUDENTPARAMETERSCONTACTS_CONTACT, new String[] { relationship.toString() } );
	}

	/**
	 *  Gets a <code>Contact</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param relationship Identifies the Contact object to return by its "Relationship" attribute value
	 *  @return A <code>Contact</code> object
	 *  @since 2.4
	 */
	public Contact getContact( Relationship relationship ) { 
		return (Contact)getChild( CommonDTD.STUDENTPARAMETERSCONTACTS_CONTACT, new String[] { relationship.toString() } );
	}

	/**
	 *  Gets all <code>Contact</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>Contact</code> objects
	 *  @since 2.4
	 */
	public Contact[] getContacts() {
		List<SIFElement> v = getChildList( CommonDTD.STUDENTPARAMETERSCONTACTS_CONTACT);
		Contact[] cvt = new Contact[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>Contact</code> objects. All existing 
	 * <code>Contact</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>Contacts</code>.
	 *
	 *  @since 2.4
	 */
	public void setContacts( Contact[] contacts ) {
		setChildren( CommonDTD.STUDENTPARAMETERSCONTACTS_CONTACT, contacts );
	}

}
