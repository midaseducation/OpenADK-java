// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.common;

import openadk.library.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  AbstractContentPackageType used as an element rather than an object,
   		omitting RefId, SIF_Metadata and SIF_ExtendedElements.
   		<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.6
 */
public class AbstractContentElementType extends SIFKeyedElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public AbstractContentElementType() {
		super( CommonDTD.ABSTRACTCONTENTELEMENTTYPE );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param mimeType MIME type to indicate the content type.
	 */
	public AbstractContentElementType( String mimeType ) {
		super( CommonDTD.ABSTRACTCONTENTELEMENTTYPE );
		this.setMIMEType(mimeType);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_MIMETYPE );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { CommonDTD.ABSTRACTCONTENTELEMENTTYPE_MIMETYPE };
	}

	/**
	 *  Gets the value of the <code>&lt;XMLData&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contains an arbitary XML element, encoded in UTF-8."</i><p>
	 *
	 *  @return The <code>XMLData</code> element of this object.
	 *  @since 2.6
	 */
	public String getXMLData() { 
		return (String) getSIFSimpleFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_XMLDATA );
	}

	/**
	 *  Sets the value of the <code>&lt;XMLData&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contains an arbitary XML element, encoded in UTF-8."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setXMLData( String value ) { 
		setFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_XMLDATA, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>Description</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Contains an optional description of the content or a processing hint with
   				regard to its structure (e.g. named standard, file layout or XSD). Contents may
   				be mandated in instances of this type, or types that follow the AbstractContentPackageType
   				pattern.
   				"</i><p>
	 *
	 *  @return The <code>Description</code> attribute of this object.
	 *  @since 2.6
	 */
	public String getDescription() { 
		return (String) getSIFSimpleFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_DESCRIPTION );
	}

	/**
	 *  Sets the value of the <code>Description</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Contains an optional description of the content or a processing hint with
   				regard to its structure (e.g. named standard, file layout or XSD). Contents may
   				be mandated in instances of this type, or types that follow the AbstractContentPackageType
   				pattern.
   				"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setDescription( String value ) { 
		setFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_DESCRIPTION, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;TextData&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contains arbitrary text, encoded in UTF-8."</i><p>
	 *
	 *  @return The <code>TextData</code> element of this object.
	 *  @since 2.6
	 */
	public String getTextData() { 
		return (String) getSIFSimpleFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_TEXTDATA );
	}

	/**
	 *  Sets the value of the <code>&lt;TextData&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contains arbitrary text, encoded in UTF-8."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setTextData( String value ) { 
		setFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_TEXTDATA, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>MIMEType</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"MIME type to indicate the content type."</i><p>
	 *
	 *  @return The <code>MIMEType</code> attribute of this object.
	 *  @since 2.6
	 */
	public String getMIMEType() { 
		return (String) getSIFSimpleFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_MIMETYPE );
	}

	/**
	 *  Sets the value of the <code>MIMEType</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"MIME type to indicate the content type."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setMIMEType( String value ) { 
		setFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_MIMETYPE, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>FileName</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Optional file name to indicate the file from which the content originated,
   				or to suggest a name to use when saving the content.
   				"</i><p>
	 *
	 *  @return The <code>FileName</code> attribute of this object.
	 *  @since 2.6
	 */
	public String getFileName() { 
		return (String) getSIFSimpleFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_FILENAME );
	}

	/**
	 *  Sets the value of the <code>FileName</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Optional file name to indicate the file from which the content originated,
   				or to suggest a name to use when saving the content.
   				"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setFileName( String value ) { 
		setFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_FILENAME, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;BinaryData&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contains the base64Binary encoding of binary or text data not encoded in UTF-8."</i><p>
	 *
	 *  @return The <code>BinaryData</code> element of this object.
	 *  @since 2.6
	 */
	public String getBinaryData() { 
		return (String) getSIFSimpleFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_BINARYDATA );
	}

	/**
	 *  Sets the value of the <code>&lt;BinaryData&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Contains the base64Binary encoding of binary or text data not encoded in UTF-8."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setBinaryData( String value ) { 
		setFieldValue( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_BINARYDATA, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;Reference&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"References external content via a URL."</i><p>
	 *
	 *  @param value A <code>Reference</code> object
	 *  @since 2.6
	 */
	public void setReference( Reference value ) { 
		removeChild( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_REFERENCE );
		addChild( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_REFERENCE, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Reference&gt;</code> child element.
	 *  This form of <code>setReference</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setReference</code>
	 *  that accepts a single <code>Reference</code> object.
	 *
	 *  @param url Location of external content.
	 *  @param value Gets or sets the content value of the &lt;Reference&gt; element
	 *  @since 2.6
	 */
	public void setReference( String url, String value ) {
		removeChild( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_REFERENCE);
		addChild( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_REFERENCE, new Reference( url, value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Reference&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"References external content via a URL."</i><p>
	 *
	 *  @return A <code>Reference</code> object
	 *  @since 2.6
	 */
	public Reference getReference() { 
		return (Reference)getChild( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_REFERENCE);
	}

	/**
	 *  Removes the <code>Reference</code> child element previously created by calling <code>setReference</code>
	 *
	 *  @since 2.6
	 */
	public void removeReference() { 
		removeChild( CommonDTD.ABSTRACTCONTENTELEMENTTYPE_REFERENCE );
	}

}
