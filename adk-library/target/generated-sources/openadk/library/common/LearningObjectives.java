// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.common;

import openadk.library.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.0
 */
public class LearningObjectives extends SIFKeyedList<LearningObjective>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public LearningObjectives() {
		super( CommonDTD.LEARNINGOBJECTIVES );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param learningObjective Narrative description of a learning objective.
	 */
	public LearningObjectives( LearningObjective learningObjective ) {
		super( CommonDTD.LEARNINGOBJECTIVES );
		this.safeAddChild( CommonDTD.LEARNINGOBJECTIVES_LEARNINGOBJECTIVE, learningObjective );
	}

	/**
	 *  Adds a new <code>&lt;LearningObjective&gt;</code> repeatable element.
	 *  This form of <code>setLearningObjective</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setLearningObjective</code>
	 *  that accepts a single <code>LearningObjective</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;LearningObjective&gt; element
	 *  @since 2.0
	 */
	public void addLearningObjective( String value ) {
		addChild( CommonDTD.LEARNINGOBJECTIVES_LEARNINGOBJECTIVE, new LearningObjective( value ) );
	}

	/**
	 *  Removes a <code>LearningObjective</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param value Identifies the LearningObjective object to remove by its Value value
	 *  @since 2.0
	 */
	public void removeLearningObjective( String value ) { 
		removeChild( CommonDTD.LEARNINGOBJECTIVES_LEARNINGOBJECTIVE, new String[] { value.toString() } );
	}

	/**
	 *  Gets a <code>LearningObjective</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param value Identifies the LearningObjective object to return by its "Value" attribute value
	 *  @return A <code>LearningObjective</code> object
	 *  @since 2.0
	 */
	public LearningObjective getLearningObjective( String value ) { 
		return (LearningObjective)getChild( CommonDTD.LEARNINGOBJECTIVES_LEARNINGOBJECTIVE, new String[] { value.toString() } );
	}

	/**
	 *  Gets all <code>LearningObjective</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>LearningObjective</code> objects
	 *  @since 2.0
	 */
	public LearningObjective[] getLearningObjectives() {
		List<SIFElement> v = getChildList( CommonDTD.LEARNINGOBJECTIVES_LEARNINGOBJECTIVE);
		LearningObjective[] cvt = new LearningObjective[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>LearningObjective</code> objects. All existing 
	 * <code>LearningObjective</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>LearningObjectives</code>.
	 *
	 *  @since 2.0
	 */
	public void setLearningObjectives( LearningObjective[] learningobjectives ) {
		setChildren( CommonDTD.LEARNINGOBJECTIVES_LEARNINGOBJECTIVE, learningobjectives );
	}

}
