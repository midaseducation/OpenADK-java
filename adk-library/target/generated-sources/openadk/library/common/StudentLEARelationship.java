// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.common;

import openadk.library.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  
      The purpose of the StudentLEARelationship object is to represent the current information available regarding a single student's relationship/affiliation to a single LEA for a specific school year as of the time a SIF_Event or SIF_Response is generated by the system of record. This object is not designed to operate on a historical/longitudinal basis in the default context.

      StudentLEARelationship instances must not span multiple school years.

      Only one instance of the StudentLEARelationship object with MembershipType=Home may exist for a specific time interval between EntryDate and ExitDate (inclusive) for a given student, LEA, and school year.

      Multiple instances of the StudentLEARelationship object with MembershipType=Concurrent may exist for a specific time interval between EntryDate and ExitDate (inclusive) for a given student, LEA, and school year.

      Multiple instances of StudentLEARelationship will occur for specific or overlapping time intervals if a student has affiliations with multiple LEA's. This will most likely be detected during aggregate data collection from multiple LEA's. Since StudentLEARelationship/@RefId and StudentLEARelationship/@StudentPersonalRefId are zone-specific, external mechanisms (e.g. student locator) would be required to correlate multiple instances of a single student affiliating with multiple LEA's.
    <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.2
 */
public class StudentLEARelationship extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public StudentLEARelationship() {
		super( ADK.getSIFVersion(), CommonDTD.STUDENTLEARELATIONSHIP );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId The unique identifier for a particular affiliation between a student and a LEA.
	 *  @param studentPersonalRefId The SIF RefId of the StudentPersonal object to which this instance of StudentLEARelationship refers.
	 *  @param leaInfoRefId The SIF RefId of the LEAInfo object to which this instance of StudentLEARelationship refers.
	 *  @param schoolYear Contains the SIF school year to which this instance of StudentLEARelationship applies. StudentLEARelationship must not span multiple school years.
	 *  @param membershipType The type of this affiliation as it relates to the LEA identified in LEAInfoRefId.
	 *  @param leaRelationshipType An instance of the OrganizationRelationshipType common element that describes the details of the student's affiliation with the LEA.
	 *  @param entryDate The date from when this affiliation is valid.
	 */
	public StudentLEARelationship( String refId, String studentPersonalRefId, String leaInfoRefId, Integer schoolYear, MembershipType membershipType, OrganizationRelationshipType leaRelationshipType, Calendar entryDate ) {
		super( ADK.getSIFVersion(), CommonDTD.STUDENTLEARELATIONSHIP );
		this.setRefId(refId);
		this.setStudentPersonalRefId(studentPersonalRefId);
		this.setLEAInfoRefId(leaInfoRefId);
		this.setSchoolYear(schoolYear);
		this.setMembershipType( membershipType );
		this.setLEARelationshipType(leaRelationshipType);
		this.setEntryDate(entryDate);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { CommonDTD.STUDENTLEARELATIONSHIP_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The unique identifier for a particular affiliation between a student and a LEA."</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 2.2
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The unique identifier for a particular affiliation between a student and a LEA."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.2
	 */
	public void setRefId( String value ) { 
		setFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>StudentPersonalRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The SIF RefId of the StudentPersonal object to which this instance of StudentLEARelationship refers."</i><p>
	 *
	 *  @return The <code>StudentPersonalRefId</code> attribute of this object.
	 *  @since 2.2
	 */
	public String getStudentPersonalRefId() { 
		return (String) getSIFSimpleFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_STUDENTPERSONALREFID );
	}

	/**
	 *  Sets the value of the <code>StudentPersonalRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The SIF RefId of the StudentPersonal object to which this instance of StudentLEARelationship refers."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.2
	 */
	public void setStudentPersonalRefId( String value ) { 
		setFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_STUDENTPERSONALREFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>LEAInfoRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The SIF RefId of the LEAInfo object to which this instance of StudentLEARelationship refers."</i><p>
	 *
	 *  @return The <code>LEAInfoRefId</code> attribute of this object.
	 *  @since 2.2
	 */
	public String getLEAInfoRefId() { 
		return (String) getSIFSimpleFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_LEAINFOREFID );
	}

	/**
	 *  Sets the value of the <code>LEAInfoRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The SIF RefId of the LEAInfo object to which this instance of StudentLEARelationship refers."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.2
	 */
	public void setLEAInfoRefId( String value ) { 
		setFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_LEAINFOREFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>SchoolYear</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Contains the SIF school year to which this instance of StudentLEARelationship applies. StudentLEARelationship must not span multiple school years."</i><p>
	 *
	 *  @return The <code>SchoolYear</code> attribute of this object.
	 *  @since 2.2
	 */
	public Integer getSchoolYear() { 
		return (Integer) getSIFSimpleFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_SCHOOLYEAR );
	}

	/**
	 *  Sets the value of the <code>SchoolYear</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Contains the SIF school year to which this instance of StudentLEARelationship applies. StudentLEARelationship must not span multiple school years."</i><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 2.2
	 */
	public void setSchoolYear( Integer value ) { 
		setFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_SCHOOLYEAR, new SIFInt( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;MembershipType&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The type of this affiliation as it relates to the LEA identified in LEAInfoRefId."</i><p>
	 *
	 *  @return The <code>MembershipType</code> element of this object.
	 *  @since 2.2
	 */
	public String getMembershipType() { 
		return getFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_MEMBERSHIPTYPE );
	}

	/**
	 *  Sets the value of the <code>&lt;MembershipType&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The type of this affiliation as it relates to the LEA identified in LEAInfoRefId."</i><p>
	 *
	 *  @param value A constant defined by the <code>MembershipType</code> class
	 *  @since 2.2
	 */
	public void setMembershipType( MembershipType value ) { 
		setField( CommonDTD.STUDENTLEARELATIONSHIP_MEMBERSHIPTYPE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;MembershipType&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The type of this affiliation as it relates to the LEA identified in LEAInfoRefId."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 2.2
	 */
	public void setMembershipType( String value ) { 
		setField( CommonDTD.STUDENTLEARELATIONSHIP_MEMBERSHIPTYPE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;LEARelationshipType&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"An instance of the OrganizationRelationshipType common element that describes the details of the student's affiliation with the LEA."</i><p>
	 *
	 *  @param value A <code>OrganizationRelationshipType</code> object
	 *  @since 2.2
	 */
	public void setLEARelationshipType( OrganizationRelationshipType value ) { 
		removeChild( CommonDTD.STUDENTLEARELATIONSHIP_LEARELATIONSHIPTYPE );
		addChild( CommonDTD.STUDENTLEARELATIONSHIP_LEARELATIONSHIPTYPE, value);
	}

	/**
	 *  Sets the value of the <code>&lt;LEARelationshipType&gt;</code> child element.
	 *  This form of <code>setLEARelationshipType</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setLEARelationshipType</code>
	 *  that accepts a single <code>OrganizationRelationshipType</code> object.
	 *
	 *  @param residencyStatus 
	 *  @param providingInstruction Flag that indicates if the reporting organization is providing instruction to the student.
	 *  @param providingServices Flag that indicates if the reporting organization is providing services that are not related to instruction to the student. An example of a non-instructional service is transportation.
	 *  @param financiallyResponsible Flag that indicates if the reporting organization is financially responsible for the student.
	 *  @since 2.2
	 */
	public void setLEARelationshipType( ResidencyStatus residencyStatus, Boolean providingInstruction, Boolean providingServices, Boolean financiallyResponsible ) {
		removeChild( CommonDTD.STUDENTLEARELATIONSHIP_LEARELATIONSHIPTYPE);
		addChild( CommonDTD.STUDENTLEARELATIONSHIP_LEARELATIONSHIPTYPE, new OrganizationRelationshipType( residencyStatus, providingInstruction, providingServices, financiallyResponsible ) );
	}

	/**
	 *  Gets the value of the <code>&lt;LEARelationshipType&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"An instance of the OrganizationRelationshipType common element that describes the details of the student's affiliation with the LEA."</i><p>
	 *
	 *  @return An <code>OrganizationRelationshipType</code> object
	 *  @since 2.2
	 */
	public OrganizationRelationshipType getLEARelationshipType() { 
		return (OrganizationRelationshipType)getChild( CommonDTD.STUDENTLEARELATIONSHIP_LEARELATIONSHIPTYPE);
	}

	/**
	 *  Removes the <code>LEARelationshipType</code> child element previously created by calling <code>setLEARelationshipType</code>
	 *
	 *  @since 2.2
	 */
	public void removeLEARelationshipType() { 
		removeChild( CommonDTD.STUDENTLEARELATIONSHIP_LEARELATIONSHIPTYPE );
	}

	/**
	 *  Gets the value of the <code>&lt;EntryDate&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The date from when this affiliation is valid."</i><p>
	 *
	 *  @return The <code>EntryDate</code> element of this object.
	 *  @since 2.2
	 */
	public Calendar getEntryDate() { 
		return (Calendar) getSIFSimpleFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_ENTRYDATE );
	}

	/**
	 *  Sets the value of the <code>&lt;EntryDate&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The date from when this affiliation is valid."</i><p>
	 *
	 *  @param value A <code>Calendar</code> object
	 *  @since 2.2
	 */
	public void setEntryDate( Calendar value ) { 
		setFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_ENTRYDATE, new SIFDate( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;EntryType&gt;</code> element.
	 *
	 *  @param value A <code>EntryType</code> object
	 *  @since 2.2
	 */
	public void setEntryType( EntryType value ) { 
		removeChild( CommonDTD.STUDENTLEARELATIONSHIP_ENTRYTYPE );
		addChild( CommonDTD.STUDENTLEARELATIONSHIP_ENTRYTYPE, value);
	}

	/**
	 *  Sets the value of the <code>&lt;EntryType&gt;</code> child element.
	 *  This form of <code>setEntryType</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setEntryType</code>
	 *  that accepts a single <code>EntryType</code> object.
	 *
	 *  @param code Code indicating the type of entry for this enrollment
	 *  @since 2.2
	 */
	public void setEntryType( EntryTypeCode code ) {
		removeChild( CommonDTD.STUDENTLEARELATIONSHIP_ENTRYTYPE);
		addChild( CommonDTD.STUDENTLEARELATIONSHIP_ENTRYTYPE, new EntryType( code ) );
	}

	/**
	 *  Gets the value of the <code>&lt;EntryType&gt;</code> element.
	 *
	 *  @return An <code>EntryType</code> object
	 *  @since 2.2
	 */
	public EntryType getEntryType() { 
		return (EntryType)getChild( CommonDTD.STUDENTLEARELATIONSHIP_ENTRYTYPE);
	}

	/**
	 *  Removes the <code>EntryType</code> child element previously created by calling <code>setEntryType</code>
	 *
	 *  @since 2.2
	 */
	public void removeEntryType() { 
		removeChild( CommonDTD.STUDENTLEARELATIONSHIP_ENTRYTYPE );
	}

	/**
	 *  Gets the value of the <code>&lt;ExitDate&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The last school calendar day (membership day) the student was affiliated with the LEA (inclusive)."</i><p>
	 *
	 *  @return The <code>ExitDate</code> element of this object.
	 *  @since 2.2
	 */
	public Calendar getExitDate() { 
		return (Calendar) getSIFSimpleFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_EXITDATE );
	}

	/**
	 *  Sets the value of the <code>&lt;ExitDate&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The last school calendar day (membership day) the student was affiliated with the LEA (inclusive)."</i><p>
	 *
	 *  @param value A <code>Calendar</code> object
	 *  @since 2.2
	 */
	public void setExitDate( Calendar value ) { 
		setFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_EXITDATE, new SIFDate( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;ExitType&gt;</code> element.
	 *
	 *  @param value A <code>ExitType</code> object
	 *  @since 2.2
	 */
	public void setExitType( ExitType value ) { 
		removeChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITTYPE );
		addChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITTYPE, value);
	}

	/**
	 *  Sets the value of the <code>&lt;ExitType&gt;</code> child element.
	 *  This form of <code>setExitType</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setExitType</code>
	 *  that accepts a single <code>ExitType</code> object.
	 *
	 *  @param code Code indicating the type of exit for this enrollment.
	 *  @since 2.2
	 */
	public void setExitType( ExitTypeCode code ) {
		removeChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITTYPE);
		addChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITTYPE, new ExitType( code ) );
	}

	/**
	 *  Gets the value of the <code>&lt;ExitType&gt;</code> element.
	 *
	 *  @return An <code>ExitType</code> object
	 *  @since 2.2
	 */
	public ExitType getExitType() { 
		return (ExitType)getChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITTYPE);
	}

	/**
	 *  Removes the <code>ExitType</code> child element previously created by calling <code>setExitType</code>
	 *
	 *  @since 2.2
	 */
	public void removeExitType() { 
		removeChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITTYPE );
	}

	/**
	 *  Sets the value of the <code>&lt;ExitStatus&gt;</code> element.
	 *
	 *  @param value A <code>ExitStatus</code> object
	 *  @since 2.2
	 */
	public void setExitStatus( ExitStatus value ) { 
		removeChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITSTATUS );
		addChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITSTATUS, value);
	}

	/**
	 *  Sets the value of the <code>&lt;ExitStatus&gt;</code> child element.
	 *  This form of <code>setExitStatus</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setExitStatus</code>
	 *  that accepts a single <code>ExitStatus</code> object.
	 *
	 *  @param code Code indicating the exit status for this affiliation.
	 *  @since 2.2
	 */
	public void setExitStatus( ExitStatusCode code ) {
		removeChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITSTATUS);
		addChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITSTATUS, new ExitStatus( code ) );
	}

	/**
	 *  Gets the value of the <code>&lt;ExitStatus&gt;</code> element.
	 *
	 *  @return An <code>ExitStatus</code> object
	 *  @since 2.2
	 */
	public ExitStatus getExitStatus() { 
		return (ExitStatus)getChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITSTATUS);
	}

	/**
	 *  Removes the <code>ExitStatus</code> child element previously created by calling <code>setExitStatus</code>
	 *
	 *  @since 2.2
	 */
	public void removeExitStatus() { 
		removeChild( CommonDTD.STUDENTLEARELATIONSHIP_EXITSTATUS );
	}

	/**
	 *  Gets the value of the <code>&lt;NonResidentAttendReason&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Indicates the reason that the student has an affiliation with this LEA if the student is a not a resident of the LEA."</i><p>
	 *
	 *  @return The <code>NonResidentAttendReason</code> element of this object.
	 *  @since 2.2
	 */
	public String getNonResidentAttendReason() { 
		return getFieldValue( CommonDTD.STUDENTLEARELATIONSHIP_NONRESIDENTATTENDREASON );
	}

	/**
	 *  Sets the value of the <code>&lt;NonResidentAttendReason&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Indicates the reason that the student has an affiliation with this LEA if the student is a not a resident of the LEA."</i><p>
	 *
	 *  @param value A constant defined by the <code>NonResidentAttendRationale</code> class
	 *  @since 2.2
	 */
	public void setNonResidentAttendReason( NonResidentAttendRationale value ) { 
		setField( CommonDTD.STUDENTLEARELATIONSHIP_NONRESIDENTATTENDREASON, value );
	}

	/**
	 *  Sets the value of the <code>&lt;NonResidentAttendReason&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Indicates the reason that the student has an affiliation with this LEA if the student is a not a resident of the LEA."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 2.2
	 */
	public void setNonResidentAttendReason( String value ) { 
		setField( CommonDTD.STUDENTLEARELATIONSHIP_NONRESIDENTATTENDREASON, value );
	}

	/**
	 *  Sets the value of the <code>&lt;GradeLevel&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The grade or academic level of the student."</i><p>
	 *
	 *  @param value A <code>GradeLevel</code> object
	 *  @since 2.2
	 */
	public void setGradeLevel( GradeLevel value ) { 
		removeChild( CommonDTD.STUDENTLEARELATIONSHIP_GRADELEVEL );
		addChild( CommonDTD.STUDENTLEARELATIONSHIP_GRADELEVEL, value);
	}

	/**
	 *  Sets the value of the <code>&lt;GradeLevel&gt;</code> child element.
	 *  This form of <code>setGradeLevel</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setGradeLevel</code>
	 *  that accepts a single <code>GradeLevel</code> object.
	 *
	 *  @param code Code representing the grade level.
	 *  @since 2.2
	 */
	public void setGradeLevel( GradeLevelCode code ) {
		removeChild( CommonDTD.STUDENTLEARELATIONSHIP_GRADELEVEL);
		addChild( CommonDTD.STUDENTLEARELATIONSHIP_GRADELEVEL, new GradeLevel( code ) );
	}

	/**
	 *  Gets the value of the <code>&lt;GradeLevel&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The grade or academic level of the student."</i><p>
	 *
	 *  @return A <code>GradeLevel</code> object
	 *  @since 2.2
	 */
	public GradeLevel getGradeLevel() { 
		return (GradeLevel)getChild( CommonDTD.STUDENTLEARELATIONSHIP_GRADELEVEL);
	}

	/**
	 *  Removes the <code>GradeLevel</code> child element previously created by calling <code>setGradeLevel</code>
	 *
	 *  @since 2.2
	 */
	public void removeGradeLevel() { 
		removeChild( CommonDTD.STUDENTLEARELATIONSHIP_GRADELEVEL );
	}

}
