// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.common;

import openadk.library.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  This element represents an address. This object occurs within objects and elements such as StaffPersonal and StudentPersonal/StudentAddress, etc.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.1
 */
public class Address extends SIFKeyedElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public Address() {
		super( CommonDTD.ADDRESS );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param type Code that defines the location of the address.  Note:  A subset of specific valid values for each instance in a data object may be listed in that object.
	 *  @param street The street part of the address
	 *  @param city The city part of the address.
	 *  @param stateProvince The state or province code.
	 *  @param country The country code.
	 *  @param postalCode The ZIP/postal code.
	 */
	public Address( AddressType type, Street street, String city, StatePrCode stateProvince, CountryCode country, String postalCode ) {
		super( CommonDTD.ADDRESS );
		this.setType( type );
		this.setStreet(street);
		this.setCity(city);
		this.setStateProvince( stateProvince );
		this.setCountry( country );
		this.setPostalCode(postalCode);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( CommonDTD.ADDRESS_TYPE );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { CommonDTD.ADDRESS_TYPE };
	}

	/**
	 *  Gets the value of the <code>Type</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Code that defines the location of the address.  Note:  A subset of specific valid values for each instance in a data object may be listed in that object."</i><p>
	 *
	 *  @return The <code>Type</code> attribute of this object.
	 *  @since 1.1
	 */
	public String getType() { 
		return getFieldValue( CommonDTD.ADDRESS_TYPE );
	}

	/**
	 *  Sets the value of the <code>Type</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Code that defines the location of the address.  Note:  A subset of specific valid values for each instance in a data object may be listed in that object."</i><p>
	 *
	 *  @param value A constant defined by the <code>AddressType</code> class
	 *  @since 1.1
	 */
	public void setType( AddressType value ) { 
		setField( CommonDTD.ADDRESS_TYPE, value );
	}

	/**
	 *  Sets the value of the <code>Type</code> attribute as a String.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Code that defines the location of the address.  Note:  A subset of specific valid values for each instance in a data object may be listed in that object."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.1
	 */
	public void setType( String value ) { 
		setField( CommonDTD.ADDRESS_TYPE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Street&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The street part of the address"</i><p>
	 *
	 *  @param value A <code>Street</code> object
	 *  @since 1.1
	 */
	public void setStreet( Street value ) { 
		removeChild( CommonDTD.ADDRESS_STREET );
		addChild( CommonDTD.ADDRESS_STREET, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Street&gt;</code> child element.
	 *  This form of <code>setStreet</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setStreet</code>
	 *  that accepts a single <code>Street</code> object.
	 *
	 *  @param line1 Address line 1.
	 *  @since 1.1
	 */
	public void setStreet( String line1 ) {
		removeChild( CommonDTD.ADDRESS_STREET);
		addChild( CommonDTD.ADDRESS_STREET, new Street( line1 ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Street&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The street part of the address"</i><p>
	 *
	 *  @return A <code>Street</code> object
	 *  @since 1.1
	 */
	public Street getStreet() { 
		return (Street)getChild( CommonDTD.ADDRESS_STREET);
	}

	/**
	 *  Removes the <code>Street</code> child element previously created by calling <code>setStreet</code>
	 *
	 *  @since 1.1
	 */
	public void removeStreet() { 
		removeChild( CommonDTD.ADDRESS_STREET );
	}

	/**
	 *  Gets the value of the <code>SIF_Action</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"In a Change event, this flag can be used to indicate an element has been deleted from the parent list container. At a minimum the key for the list must also be present."</i><p>
	 *
	 *  @return The <code>SIF_Action</code> attribute of this object.
	 *  @since 2.0
	 */
	public String getSIF_Action() { 
		return getFieldValue( CommonDTD.ADDRESS_SIF_ACTION );
	}

	/**
	 *  Sets the value of the <code>SIF_Action</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"In a Change event, this flag can be used to indicate an element has been deleted from the parent list container. At a minimum the key for the list must also be present."</i><p>
	 *
	 *  @param value A constant defined by the <code>SIFActionType</code> class
	 *  @since 2.0
	 */
	public void setSIF_Action( SIFActionType value ) { 
		setField( CommonDTD.ADDRESS_SIF_ACTION, value );
	}

	/**
	 *  Sets the value of the <code>SIF_Action</code> attribute as a String.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"In a Change event, this flag can be used to indicate an element has been deleted from the parent list container. At a minimum the key for the list must also be present."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 2.0
	 */
	public void setSIF_Action( String value ) { 
		setField( CommonDTD.ADDRESS_SIF_ACTION, value );
	}

	/**
	 *  Gets the value of the <code>&lt;City&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The city part of the address."</i><p>
	 *
	 *  @return The <code>City</code> element of this object.
	 *  @since 1.1
	 */
	public String getCity() { 
		return (String) getSIFSimpleFieldValue( CommonDTD.ADDRESS_CITY );
	}

	/**
	 *  Sets the value of the <code>&lt;City&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The city part of the address."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setCity( String value ) { 
		setFieldValue( CommonDTD.ADDRESS_CITY, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;County&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The county part of the address."</i><p>
	 *
	 *  @return The <code>County</code> element of this object.
	 *  @since 1.1
	 */
	public String getCounty() { 
		return (String) getSIFSimpleFieldValue( CommonDTD.ADDRESS_COUNTY );
	}

	/**
	 *  Sets the value of the <code>&lt;County&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The county part of the address."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setCounty( String value ) { 
		setFieldValue( CommonDTD.ADDRESS_COUNTY, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;StateProvince&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The state or province code."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"StatePr"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"StateProvince"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>StateProvince</code> element of this object.
	 *  @since 1.1
	 */
	public String getStateProvince() { 
		return getFieldValue( CommonDTD.ADDRESS_STATEPROVINCE );
	}

	/**
	 *  Sets the value of the <code>&lt;StateProvince&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The state or province code."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"StatePr"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"StateProvince"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A constant defined by the <code>StatePrCode</code> class
	 *  @since 1.1
	 */
	public void setStateProvince( StatePrCode value ) { 
		setField( CommonDTD.ADDRESS_STATEPROVINCE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;StateProvince&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The state or province code."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.1 (and greater)</font></td><td>"StatePr"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"StateProvince"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.1
	 */
	public void setStateProvince( String value ) { 
		setField( CommonDTD.ADDRESS_STATEPROVINCE, value );
	}

	/**
	 *  Gets the value of the <code>&lt;Country&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The country code."</i><p>
	 *
	 *  @return The <code>Country</code> element of this object.
	 *  @since 1.1
	 */
	public String getCountry() { 
		return getFieldValue( CommonDTD.ADDRESS_COUNTRY );
	}

	/**
	 *  Sets the value of the <code>&lt;Country&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The country code."</i><p>
	 *
	 *  @param value A constant defined by the <code>CountryCode</code> class
	 *  @since 1.1
	 */
	public void setCountry( CountryCode value ) { 
		setField( CommonDTD.ADDRESS_COUNTRY, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Country&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The country code."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.1
	 */
	public void setCountry( String value ) { 
		setField( CommonDTD.ADDRESS_COUNTRY, value );
	}

	/**
	 *  Gets the value of the <code>&lt;PostalCode&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The ZIP/postal code."</i><p>
	 *
	 *  @return The <code>PostalCode</code> element of this object.
	 *  @since 1.1
	 */
	public String getPostalCode() { 
		return (String) getSIFSimpleFieldValue( CommonDTD.ADDRESS_POSTALCODE );
	}

	/**
	 *  Sets the value of the <code>&lt;PostalCode&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The ZIP/postal code."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setPostalCode( String value ) { 
		setFieldValue( CommonDTD.ADDRESS_POSTALCODE, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;GridLocation&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The location of the address."</i><p>
	 *
	 *  @param value A <code>GridLocation</code> object
	 *  @since 1.1
	 */
	public void setGridLocation( GridLocation value ) { 
		removeChild( CommonDTD.ADDRESS_GRIDLOCATION );
		addChild( CommonDTD.ADDRESS_GRIDLOCATION, value);
	}

	/**
	 *  Sets the value of the <code>&lt;GridLocation&gt;</code> child element.
	 *  This form of <code>setGridLocation</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setGridLocation</code>
	 *  that accepts a single <code>GridLocation</code> object.
	 *
	 *  @param latitude The latitude coordinate of this location expressed in decimal format (e.g. "41.7699657")
	 *  @param longitude The longitude coordinate of this location expressed in decimal format (e.g. "79.548445")
	 *  @since 1.1
	 */
	public void setGridLocation( BigDecimal latitude, BigDecimal longitude ) {
		removeChild( CommonDTD.ADDRESS_GRIDLOCATION);
		addChild( CommonDTD.ADDRESS_GRIDLOCATION, new GridLocation( latitude, longitude ) );
	}

	/**
	 *  Gets the value of the <code>&lt;GridLocation&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The location of the address."</i><p>
	 *
	 *  @return A <code>GridLocation</code> object
	 *  @since 1.1
	 */
	public GridLocation getGridLocation() { 
		return (GridLocation)getChild( CommonDTD.ADDRESS_GRIDLOCATION);
	}

	/**
	 *  Removes the <code>GridLocation</code> child element previously created by calling <code>setGridLocation</code>
	 *
	 *  @since 1.1
	 */
	public void removeGridLocation() { 
		removeChild( CommonDTD.ADDRESS_GRIDLOCATION );
	}

}
