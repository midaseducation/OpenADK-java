// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.common;

import openadk.library.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  Contains information about required software.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.4
 */
public class SoftwareRequirementList extends SIFKeyedList<SoftwareRequirement>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public SoftwareRequirementList() {
		super( CommonDTD.SOFTWAREREQUIREMENTLIST );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param softwareRequirement Contains information about a specific required piece of software.
	 */
	public SoftwareRequirementList( SoftwareRequirement softwareRequirement ) {
		super( CommonDTD.SOFTWAREREQUIREMENTLIST );
		this.safeAddChild( CommonDTD.SOFTWAREREQUIREMENTLIST_SOFTWAREREQUIREMENT, softwareRequirement );
	}

	/**
	 *  Adds a new <code>&lt;SoftwareRequirement&gt;</code> repeatable element.
	 *  This form of <code>setSoftwareRequirement</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setSoftwareRequirement</code>
	 *  that accepts a single <code>SoftwareRequirement</code> object.
	 *
	 *  @param softwareTitle This is the title of the specific software. This does not include the vendor. For example, Flash not Adobe.
	 *  @since 2.4
	 */
	public void addSoftwareRequirement( String softwareTitle ) {
		addChild( CommonDTD.SOFTWAREREQUIREMENTLIST_SOFTWAREREQUIREMENT, new SoftwareRequirement( softwareTitle ) );
	}

	/**
	 *  Removes a <code>SoftwareRequirement</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param softwareTitle Identifies the SoftwareRequirement object to remove by its SoftwareTitle value
	 *  @since 2.4
	 */
	public void removeSoftwareRequirement( String softwareTitle ) { 
		removeChild( CommonDTD.SOFTWAREREQUIREMENTLIST_SOFTWAREREQUIREMENT, new String[] { softwareTitle.toString() } );
	}

	/**
	 *  Gets a <code>SoftwareRequirement</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param softwareTitle Identifies the SoftwareRequirement object to return by its "SoftwareTitle" attribute value
	 *  @return A <code>SoftwareRequirement</code> object
	 *  @since 2.4
	 */
	public SoftwareRequirement getSoftwareRequirement( String softwareTitle ) { 
		return (SoftwareRequirement)getChild( CommonDTD.SOFTWAREREQUIREMENTLIST_SOFTWAREREQUIREMENT, new String[] { softwareTitle.toString() } );
	}

	/**
	 *  Gets all <code>SoftwareRequirement</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>SoftwareRequirement</code> objects
	 *  @since 2.4
	 */
	public SoftwareRequirement[] getSoftwareRequirements() {
		List<SIFElement> v = getChildList( CommonDTD.SOFTWAREREQUIREMENTLIST_SOFTWAREREQUIREMENT);
		SoftwareRequirement[] cvt = new SoftwareRequirement[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>SoftwareRequirement</code> objects. All existing 
	 * <code>SoftwareRequirement</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>SoftwareRequirements</code>.
	 *
	 *  @since 2.4
	 */
	public void setSoftwareRequirements( SoftwareRequirement[] softwarerequirements ) {
		setChildren( CommonDTD.SOFTWAREREQUIREMENTLIST_SOFTWAREREQUIREMENT, softwarerequirements );
	}

}
