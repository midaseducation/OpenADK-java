// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.common;

import openadk.library.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  Exceptionality description/code which will identify the exceptionality of the student.  Not all programs require identification of an exceptionality.  If required for this program type, must have at least one element with Type attribute = "Primary".<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class ExceptionalityCategory extends SIFKeyedElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public ExceptionalityCategory() {
		super( CommonDTD.EXCEPTIONALITYCATEGORY );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param codeType If CodeType = "NCES" then use code set 0768 Primary Disability Type [NCES Handbooks]
	 *  @param exceptionalityPriority Identifies priority of the exceptionality.  "Primary" is the first and is required even if only one exceptionality is specified. "Secondary", etc. are of lower priority. Primary, Secondary, and Tertiary must be specified before "Additional" is used.
	 *  @param code Exceptionality description/code which identifies the exceptionality or areas of need of the student.  Not all programs require identification of an exceptionality.  If required for this program type, must have at least one element with ExceptionalityPriority attribute = "Primary".
	 */
	public ExceptionalityCategory( String codeType, ExceptionalityPriority exceptionalityPriority, ExceptionalityCategoryCode code ) {
		super( CommonDTD.EXCEPTIONALITYCATEGORY );
		this.setCodeType(codeType);
		this.setExceptionalityPriority( exceptionalityPriority );
		this.setCode( code );
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( CommonDTD.EXCEPTIONALITYCATEGORY_EXCEPTIONALITYPRIORITY );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { CommonDTD.EXCEPTIONALITYCATEGORY_EXCEPTIONALITYPRIORITY };
	}

	/**
	 *  Gets the value of the <code>CodeType</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"If CodeType = "NCES" then use code set 0768 Primary Disability Type [NCES Handbooks]"</i><p>
	 *
	 *  @return The <code>CodeType</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getCodeType() { 
		return (String) getSIFSimpleFieldValue( CommonDTD.EXCEPTIONALITYCATEGORY_CODETYPE );
	}

	/**
	 *  Sets the value of the <code>CodeType</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"If CodeType = "NCES" then use code set 0768 Primary Disability Type [NCES Handbooks]"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setCodeType( String value ) { 
		setFieldValue( CommonDTD.EXCEPTIONALITYCATEGORY_CODETYPE, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>ExceptionalityPriority</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Identifies priority of the exceptionality.  "Primary" is the first and is required even if only one exceptionality is specified. "Secondary", etc. are of lower priority. Primary, Secondary, and Tertiary must be specified before "Additional" is used."</i><p>
	 *  This attribute is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering attributes of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"Type"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"ExceptionalityPriority"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>ExceptionalityPriority</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getExceptionalityPriority() { 
		return getFieldValue( CommonDTD.EXCEPTIONALITYCATEGORY_EXCEPTIONALITYPRIORITY );
	}

	/**
	 *  Sets the value of the <code>ExceptionalityPriority</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Identifies priority of the exceptionality.  "Primary" is the first and is required even if only one exceptionality is specified. "Secondary", etc. are of lower priority. Primary, Secondary, and Tertiary must be specified before "Additional" is used."</i><p>
	 *  This attribute is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering attributes of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"Type"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"ExceptionalityPriority"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A constant defined by the <code>ExceptionalityPriority</code> class
	 *  @since 1.5r1
	 */
	public void setExceptionalityPriority( ExceptionalityPriority value ) { 
		setField( CommonDTD.EXCEPTIONALITYCATEGORY_EXCEPTIONALITYPRIORITY, value );
	}

	/**
	 *  Sets the value of the <code>ExceptionalityPriority</code> attribute as a String.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Identifies priority of the exceptionality.  "Primary" is the first and is required even if only one exceptionality is specified. "Secondary", etc. are of lower priority. Primary, Secondary, and Tertiary must be specified before "Additional" is used."</i><p>
	 *  This attribute is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering attributes of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"Type"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"ExceptionalityPriority"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setExceptionalityPriority( String value ) { 
		setField( CommonDTD.EXCEPTIONALITYCATEGORY_EXCEPTIONALITYPRIORITY, value );
	}

	/**
	 *  Sets the value of the <code>&lt;OtherCodeList&gt;</code> element.
	 *
	 *  @param value A <code>OtherCodeList</code> object
	 *  @since 2.0
	 */
	public void setOtherCodeList( OtherCodeList value ) { 
		removeChild( CommonDTD.EXCEPTIONALITYCATEGORY_OTHERCODELIST );
		addChild( CommonDTD.EXCEPTIONALITYCATEGORY_OTHERCODELIST, value);
	}

	/**
	 *  Gets the value of the <code>&lt;OtherCodeList&gt;</code> element.
	 *
	 *  @return An <code>OtherCodeList</code> object
	 *  @since 2.0
	 */
	public OtherCodeList getOtherCodeList() { 
		return (OtherCodeList)getChild( CommonDTD.EXCEPTIONALITYCATEGORY_OTHERCODELIST);
	}

	/**
	 *  Removes the <code>OtherCodeList</code> child element previously created by calling <code>setOtherCodeList</code>
	 *
	 *  @since 2.0
	 */
	public void removeOtherCodeList() { 
		removeChild( CommonDTD.EXCEPTIONALITYCATEGORY_OTHERCODELIST );
	}

	/**
	 *  Gets the value of the <code>&lt;Code&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Exceptionality description/code which identifies the exceptionality or areas of need of the student.  Not all programs require identification of an exceptionality.  If required for this program type, must have at least one element with ExceptionalityPriority attribute = "Primary"."</i><p>
	 *
	 *  @return The <code>Code</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getCode() { 
		return getFieldValue( CommonDTD.EXCEPTIONALITYCATEGORY_CODE );
	}

	/**
	 *  Sets the value of the <code>&lt;Code&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Exceptionality description/code which identifies the exceptionality or areas of need of the student.  Not all programs require identification of an exceptionality.  If required for this program type, must have at least one element with ExceptionalityPriority attribute = "Primary"."</i><p>
	 *
	 *  @param value A constant defined by the <code>ExceptionalityCategoryCode</code> class
	 *  @since 1.5r1
	 */
	public void setCode( ExceptionalityCategoryCode value ) { 
		setField( CommonDTD.EXCEPTIONALITYCATEGORY_CODE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Code&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Exceptionality description/code which identifies the exceptionality or areas of need of the student.  Not all programs require identification of an exceptionality.  If required for this program type, must have at least one element with ExceptionalityPriority attribute = "Primary"."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setCode( String value ) { 
		setField( CommonDTD.EXCEPTIONALITYCATEGORY_CODE, value );
	}

}
