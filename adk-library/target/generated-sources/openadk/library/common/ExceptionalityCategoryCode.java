// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.common;

import openadk.library.*;

/**
 *  Defines the set of values that can be specified whenever an ExceptionalityCategoryCode
 *  is used as a parameter to a method or constructor. Alternatively, the static
 *  <code>wrap</code> method can be called to encapsulate any string value in
 *  an ExceptionalityCategoryCode object.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class ExceptionalityCategoryCode extends SIFEnum
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Traumatic brain injury ("2130")
	 */
	public static final ExceptionalityCategoryCode BRAIN_INJURY = new ExceptionalityCategoryCode("2130");

	/**
	 *  Autistic / autism ("2121")
	 */
	public static final ExceptionalityCategoryCode AUTISM = new ExceptionalityCategoryCode("2121");

	/**
	 *  Deafness ("2133")
	 */
	public static final ExceptionalityCategoryCode DEAFNESS = new ExceptionalityCategoryCode("2133");

	/**
	 *  Other (not valid for special education) ("9999")
	 */
	public static final ExceptionalityCategoryCode OTHER = new ExceptionalityCategoryCode("9999");

	/**
	 *  Mental retardatioN ("2124")
	 */
	public static final ExceptionalityCategoryCode MENTAL_RETARDATION = new ExceptionalityCategoryCode("2124");

	/**
	 *  Visual impairment ("2131")
	 */
	public static final ExceptionalityCategoryCode VIUSAL_IMPAIRMENT = new ExceptionalityCategoryCode("2131");

	/**
	 *  Developmental delay ("2134")
	 */
	public static final ExceptionalityCategoryCode DEVELOPMENTAL_DELAY = new ExceptionalityCategoryCode("2134");

	/**
	 *  Deaf-blindness ("2122")
	 */
	public static final ExceptionalityCategoryCode DEAF_BLIND = new ExceptionalityCategoryCode("2122");

	/**
	 *  Orthopedic impairment ("2127")
	 */
	public static final ExceptionalityCategoryCode ORTHOPEDIC_IMPAIRMENT = new ExceptionalityCategoryCode("2127");

	/**
	 *  Multiple disabilities ("2125")
	 */
	public static final ExceptionalityCategoryCode MULTIPLE_DISABILITIES = new ExceptionalityCategoryCode("2125");

	/**
	 *  Hearing impairment ("2123")
	 */
	public static final ExceptionalityCategoryCode HEARING_IMPAIRMENT = new ExceptionalityCategoryCode("2123");

	/**
	 *  Other health impairment ("2132")
	 */
	public static final ExceptionalityCategoryCode OTHER_HEALTH_IMPAIRMENT = new ExceptionalityCategoryCode("2132");

	/**
	 *  Infants and toddlers with disabilities ("2135")
	 */
	public static final ExceptionalityCategoryCode INFANT_TODDLER_DISABILITY = new ExceptionalityCategoryCode("2135");

	/**
	 *  Specific learning disability ("2128")
	 */
	public static final ExceptionalityCategoryCode SPECIFIC_LEARNING_DISABILITY = new ExceptionalityCategoryCode("2128");

	/**
	 *  Speech or language impairment ("2129")
	 */
	public static final ExceptionalityCategoryCode SPEECH_IMPAIRMENT = new ExceptionalityCategoryCode("2129");

	/**
	 *  Wrap an arbitrary string value in an ExceptionalityCategoryCode object.
	 *  @param value The element/attribute value. This method does not verify
	 *      that the value is valid according to the SIF Specification.
	 */
	public static ExceptionalityCategoryCode wrap( String value ) {
		return new ExceptionalityCategoryCode( value );
	}

	private ExceptionalityCategoryCode( String value ) {
		super(value);
	}
}
