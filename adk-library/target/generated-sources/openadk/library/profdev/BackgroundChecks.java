// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.profdev;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class BackgroundChecks extends SIFList<BackgroundCheck>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public BackgroundChecks() {
		super( ProfdevDTD.BACKGROUNDCHECKS );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param backgroundCheck 
	 */
	public BackgroundChecks( BackgroundCheck backgroundCheck ) {
		super( ProfdevDTD.BACKGROUNDCHECKS );
		this.safeAddChild( ProfdevDTD.BACKGROUNDCHECKS_BACKGROUNDCHECK, backgroundCheck );
	}

	/**
	 *  Gets all <code>BackgroundCheck</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>BackgroundCheck</code> objects
	 *  @since 1.5r1
	 */
	public BackgroundCheck[] getBackgroundChecks() {
		List<SIFElement> v = getChildList( ProfdevDTD.BACKGROUNDCHECKS_BACKGROUNDCHECK);
		BackgroundCheck[] cvt = new BackgroundCheck[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>BackgroundCheck</code> objects. All existing 
	 * <code>BackgroundCheck</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>BackgroundChecks</code>.
	 *
	 *  @since 1.5r1
	 */
	public void setBackgroundChecks( BackgroundCheck[] backgroundchecks ) {
		setChildren( ProfdevDTD.BACKGROUNDCHECKS_BACKGROUNDCHECK, backgroundchecks );
	}

}
