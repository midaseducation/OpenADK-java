// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.profdev;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class Certifications extends SIFKeyedList<Certification>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public Certifications() {
		super( ProfdevDTD.CERTIFICATIONS );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param certification 
	 */
	public Certifications( Certification certification ) {
		super( ProfdevDTD.CERTIFICATIONS );
		this.safeAddChild( ProfdevDTD.CERTIFICATIONS_CERTIFICATION, certification );
	}

	/**
	 *  Adds a new <code>&lt;Certification&gt;</code> repeatable element.
	 *  This form of <code>setCertification</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setCertification</code>
	 *  that accepts a single <code>Certification</code> object.
	 *
	 *  @param description Certification description as defined by state
	 *  @since 1.5r1
	 */
	public void addCertification( String description ) {
		addChild( ProfdevDTD.CERTIFICATIONS_CERTIFICATION, new Certification( description ) );
	}

	/**
	 *  Removes a <code>Certification</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param description Identifies the Certification object to remove by its Description value
	 *  @since 1.5r1
	 */
	public void removeCertification( String description ) { 
		removeChild( ProfdevDTD.CERTIFICATIONS_CERTIFICATION, new String[] { description.toString() } );
	}

	/**
	 *  Gets a <code>Certification</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param description Identifies the Certification object to return by its "Description" attribute value
	 *  @return A <code>Certification</code> object
	 *  @since 1.5r1
	 */
	public Certification getCertification( String description ) { 
		return (Certification)getChild( ProfdevDTD.CERTIFICATIONS_CERTIFICATION, new String[] { description.toString() } );
	}

	/**
	 *  Gets all <code>Certification</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>Certification</code> objects
	 *  @since 1.5r1
	 */
	public Certification[] getCertifications() {
		List<SIFElement> v = getChildList( ProfdevDTD.CERTIFICATIONS_CERTIFICATION);
		Certification[] cvt = new Certification[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>Certification</code> objects. All existing 
	 * <code>Certification</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>Certifications</code>.
	 *
	 *  @since 1.5r1
	 */
	public void setCertifications( Certification[] certifications ) {
		setChildren( ProfdevDTD.CERTIFICATIONS_CERTIFICATION, certifications );
	}

}
