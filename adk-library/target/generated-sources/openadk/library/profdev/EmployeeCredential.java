// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.profdev;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  This object contains HR, certification and teaching assignment information for elementary and secondary professional personnel for state reporting.   It is a snapshot object used for vertical reporting of data related to K-12 elementary and secondary professional employees.  SIF_Events are not reported.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class EmployeeCredential extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public EmployeeCredential() {
		super( ADK.getSIFVersion(), ProfdevDTD.EMPLOYEECREDENTIAL );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param reportDate Date that report snapshot was generated
	 *  @param refId Key
	 *  @param schoolYear School year for which the information is applicable, expressed as the four-digit year in which the school year ends (e.g., "2004" for the 2003-04 school year).
	 *  @param stateProvinceId State assigned reporting unit number
	 *  @param ssn Employee social security number
	 *  @param name Name of employee.
	 *  @param race Primary employee's race
	 *  @param certifications Employee certification area information
	 *  @param salary Employee's salary
	 *  @param status 
	 *  @param leave Is this employee on leave this year?
	 *  @param totalYears Total number of years employee has been in a professional position
	 *  @param unitYears Total number of years at current LEA
	 *  @param education Highest level of education attained by employee.
	 */
	public EmployeeCredential( Calendar reportDate, String refId, Integer schoolYear, String stateProvinceId, String ssn, Name name, RaceType race, Certifications certifications, MonetaryAmount salary, EmploymentStatus status, YesNo leave, BigDecimal totalYears, BigDecimal unitYears, TeachingCredentialBasis education ) {
		super( ADK.getSIFVersion(), ProfdevDTD.EMPLOYEECREDENTIAL );
		this.setReportDate(reportDate);
		this.setRefId(refId);
		this.setSchoolYear(schoolYear);
		this.setStateProvinceId(stateProvinceId);
		this.setSSN(ssn);
		this.setName(name);
		this.setRace( race );
		this.setCertifications(certifications);
		this.setSalary(salary);
		this.setStatus( status );
		this.setLeave( leave );
		this.setTotalYears(totalYears);
		this.setUnitYears(unitYears);
		this.setEducation( education );
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { ProfdevDTD.EMPLOYEECREDENTIAL_REFID };
	}

	/**
	 *  Gets the value of the <code>&lt;ReportDate&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Date that report snapshot was generated"</i><p>
	 *
	 *  @return The <code>ReportDate</code> element of this object.
	 *  @since 1.5r1
	 */
	public Calendar getReportDate() { 
		return (Calendar) getSIFSimpleFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_REPORTDATE );
	}

	/**
	 *  Sets the value of the <code>&lt;ReportDate&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Date that report snapshot was generated"</i><p>
	 *
	 *  @param value A <code>Calendar</code> object
	 *  @since 1.5r1
	 */
	public void setReportDate( Calendar value ) { 
		setFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_REPORTDATE, new SIFDate( value ), value );
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Key"</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 2.7
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Key"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.7
	 */
	public void setRefId( String value ) { 
		setFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;SchoolYear&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"School year for which the information is applicable, expressed as the four-digit year in which the school year ends (e.g., "2004" for the 2003-04 school year)."</i><p>
	 *
	 *  @return The <code>SchoolYear</code> element of this object.
	 *  @since 1.5r1
	 */
	public Integer getSchoolYear() { 
		return (Integer) getSIFSimpleFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_SCHOOLYEAR );
	}

	/**
	 *  Sets the value of the <code>&lt;SchoolYear&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"School year for which the information is applicable, expressed as the four-digit year in which the school year ends (e.g., "2004" for the 2003-04 school year)."</i><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 1.5r1
	 */
	public void setSchoolYear( Integer value ) { 
		setFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_SCHOOLYEAR, new SIFInt( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;StateProvinceId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"State assigned reporting unit number"</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"StatePrId"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"StateProvinceId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>StateProvinceId</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getStateProvinceId() { 
		return (String) getSIFSimpleFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_STATEPROVINCEID );
	}

	/**
	 *  Sets the value of the <code>&lt;StateProvinceId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"State assigned reporting unit number"</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"StatePrId"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"StateProvinceId"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setStateProvinceId( String value ) { 
		setFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_STATEPROVINCEID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;SSN&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Employee social security number"</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"Ssn"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"SSN"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>SSN</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getSSN() { 
		return (String) getSIFSimpleFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_SSN );
	}

	/**
	 *  Sets the value of the <code>&lt;SSN&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Employee social security number"</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"Ssn"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"SSN"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setSSN( String value ) { 
		setFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_SSN, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Name of employee."</i><p>
	 *
	 *  @param value A <code>Name</code> object
	 *  @since 1.5r1
	 */
	public void setName( Name value ) { 
		removeChild( ProfdevDTD.EMPLOYEECREDENTIAL_NAME );
		addChild( ProfdevDTD.EMPLOYEECREDENTIAL_NAME, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Name&gt;</code> child element.
	 *  This form of <code>setName</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setName</code>
	 *  that accepts a single <code>Name</code> object.
	 *
	 *  @param type Code that specifies what type of name this is.  If unsure, use 04.
	 *  @param lastName The last name.
	 *  @param firstName The first name.
	 *  @since 1.5r1
	 */
	public void setName( NameType type, String lastName, String firstName ) {
		removeChild( ProfdevDTD.EMPLOYEECREDENTIAL_NAME);
		addChild( ProfdevDTD.EMPLOYEECREDENTIAL_NAME, new Name( type, lastName, firstName ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Name of employee."</i><p>
	 *
	 *  @return A <code>Name</code> object
	 *  @since 1.5r1
	 */
	public Name getName() { 
		return (Name)getChild( ProfdevDTD.EMPLOYEECREDENTIAL_NAME);
	}

	/**
	 *  Removes the <code>Name</code> child element previously created by calling <code>setName</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeName() { 
		removeChild( ProfdevDTD.EMPLOYEECREDENTIAL_NAME );
	}

	/**
	 *  Sets the value of the <code>&lt;Demographics&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element contains information related to employee demographics."</i><p>
	 *
	 *  @param value A <code>Demographics</code> object
	 *  @since 1.5r1
	 */
	public void setDemographics( Demographics value ) { 
		removeChild( ProfdevDTD.EMPLOYEECREDENTIAL_DEMOGRAPHICS );
		addChild( ProfdevDTD.EMPLOYEECREDENTIAL_DEMOGRAPHICS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;Demographics&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element contains information related to employee demographics."</i><p>
	 *
	 *  @return A <code>Demographics</code> object
	 *  @since 1.5r1
	 */
	public Demographics getDemographics() { 
		return (Demographics)getChild( ProfdevDTD.EMPLOYEECREDENTIAL_DEMOGRAPHICS);
	}

	/**
	 *  Removes the <code>Demographics</code> child element previously created by calling <code>setDemographics</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeDemographics() { 
		removeChild( ProfdevDTD.EMPLOYEECREDENTIAL_DEMOGRAPHICS );
	}

	/**
	 *  Gets the value of the <code>&lt;Race&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Primary employee's race"</i><p>
	 *
	 *  @return The <code>Race</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getRace() { 
		return getFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_RACE );
	}

	/**
	 *  Sets the value of the <code>&lt;Race&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Primary employee's race"</i><p>
	 *
	 *  @param value A constant defined by the <code>RaceType</code> class
	 *  @since 1.5r1
	 */
	public void setRace( RaceType value ) { 
		setField( ProfdevDTD.EMPLOYEECREDENTIAL_RACE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Race&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Primary employee's race"</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setRace( String value ) { 
		setField( ProfdevDTD.EMPLOYEECREDENTIAL_RACE, value );
	}

	/**
	 *  Gets the value of the <code>&lt;Hispanic&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Is this employee Hispanic or Latino?"</i><p>
	 *
	 *  @return The <code>Hispanic</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getHispanic() { 
		return getFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_HISPANIC );
	}

	/**
	 *  Sets the value of the <code>&lt;Hispanic&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Is this employee Hispanic or Latino?"</i><p>
	 *
	 *  @param value A constant defined by the <code>YesNo</code> class
	 *  @since 1.5r1
	 */
	public void setHispanic( YesNo value ) { 
		setField( ProfdevDTD.EMPLOYEECREDENTIAL_HISPANIC, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Hispanic&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Is this employee Hispanic or Latino?"</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setHispanic( String value ) { 
		setField( ProfdevDTD.EMPLOYEECREDENTIAL_HISPANIC, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Certifications&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Employee certification area information"</i><p>
	 *
	 *  @param value A <code>Certifications</code> object
	 *  @since 1.5r1
	 */
	public void setCertifications( Certifications value ) { 
		removeChild( ProfdevDTD.EMPLOYEECREDENTIAL_CERTIFICATIONS );
		addChild( ProfdevDTD.EMPLOYEECREDENTIAL_CERTIFICATIONS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;Certifications&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Employee certification area information"</i><p>
	 *
	 *  @return A <code>Certifications</code> object
	 *  @since 1.5r1
	 */
	public Certifications getCertifications() { 
		return (Certifications)getChild( ProfdevDTD.EMPLOYEECREDENTIAL_CERTIFICATIONS);
	}

	/**
	 *  Removes the <code>Certifications</code> child element previously created by calling <code>setCertifications</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeCertifications() { 
		removeChild( ProfdevDTD.EMPLOYEECREDENTIAL_CERTIFICATIONS );
	}

	/**
	 *  Sets the value of the <code>&lt;Salary&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Employee's salary"</i><p>
	 *
	 *  @param value A <code>MonetaryAmount</code> object
	 *  @since 1.5r1
	 */
	public void setSalary( MonetaryAmount value ) { 
		removeChild( ProfdevDTD.EMPLOYEECREDENTIAL_SALARY );
		addChild( ProfdevDTD.EMPLOYEECREDENTIAL_SALARY, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Salary&gt;</code> child element.
	 *  This form of <code>setSalary</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setSalary</code>
	 *  that accepts a single <code>MonetaryAmount</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;MonetaryAmount&gt; element
	 *  @since 1.5r1
	 */
	public void setSalary( BigDecimal value ) {
		removeChild( ProfdevDTD.EMPLOYEECREDENTIAL_SALARY);
		addChild( ProfdevDTD.EMPLOYEECREDENTIAL_SALARY, new MonetaryAmount( value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Salary&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Employee's salary"</i><p>
	 *
	 *  @return A <code>MonetaryAmount</code> object
	 *  @since 1.5r1
	 */
	public MonetaryAmount getSalary() { 
		return (MonetaryAmount)getChild( ProfdevDTD.EMPLOYEECREDENTIAL_SALARY);
	}

	/**
	 *  Removes the <code>Salary</code> child element previously created by calling <code>setSalary</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeSalary() { 
		removeChild( ProfdevDTD.EMPLOYEECREDENTIAL_SALARY );
	}

	/**
	 *  Gets the value of the <code>&lt;Status&gt;</code> element.
	 *
	 *  @return The <code>Status</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getStatus() { 
		return getFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_STATUS );
	}

	/**
	 *  Sets the value of the <code>&lt;Status&gt;</code> element.
	 *
	 *  @param value A constant defined by the <code>EmploymentStatus</code> class
	 *  @since 1.5r1
	 */
	public void setStatus( EmploymentStatus value ) { 
		setField( ProfdevDTD.EMPLOYEECREDENTIAL_STATUS, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Status&gt;</code> element as a String.
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setStatus( String value ) { 
		setField( ProfdevDTD.EMPLOYEECREDENTIAL_STATUS, value );
	}

	/**
	 *  Gets the value of the <code>&lt;Leave&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Is this employee on leave this year?"</i><p>
	 *
	 *  @return The <code>Leave</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getLeave() { 
		return getFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_LEAVE );
	}

	/**
	 *  Sets the value of the <code>&lt;Leave&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Is this employee on leave this year?"</i><p>
	 *
	 *  @param value A constant defined by the <code>YesNo</code> class
	 *  @since 1.5r1
	 */
	public void setLeave( YesNo value ) { 
		setField( ProfdevDTD.EMPLOYEECREDENTIAL_LEAVE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Leave&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Is this employee on leave this year?"</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setLeave( String value ) { 
		setField( ProfdevDTD.EMPLOYEECREDENTIAL_LEAVE, value );
	}

	/**
	 *  Gets the value of the <code>&lt;TotalYears&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Total number of years employee has been in a professional position"</i><p>
	 *
	 *  @return The <code>TotalYears</code> element of this object.
	 *  @since 1.5r1
	 */
	public BigDecimal getTotalYears() { 
		return (BigDecimal) getSIFSimpleFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_TOTALYEARS );
	}

	/**
	 *  Sets the value of the <code>&lt;TotalYears&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Total number of years employee has been in a professional position"</i><p>
	 *
	 *  @param value A <code>BigDecimal</code> object
	 *  @since 1.5r1
	 */
	public void setTotalYears( BigDecimal value ) { 
		setFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_TOTALYEARS, new SIFDecimal( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;UnitYears&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Total number of years at current LEA"</i><p>
	 *
	 *  @return The <code>UnitYears</code> element of this object.
	 *  @since 1.5r1
	 */
	public BigDecimal getUnitYears() { 
		return (BigDecimal) getSIFSimpleFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_UNITYEARS );
	}

	/**
	 *  Sets the value of the <code>&lt;UnitYears&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Total number of years at current LEA"</i><p>
	 *
	 *  @param value A <code>BigDecimal</code> object
	 *  @since 1.5r1
	 */
	public void setUnitYears( BigDecimal value ) { 
		setFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_UNITYEARS, new SIFDecimal( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Education&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Highest level of education attained by employee."</i><p>
	 *
	 *  @return The <code>Education</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getEducation() { 
		return getFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_EDUCATION );
	}

	/**
	 *  Sets the value of the <code>&lt;Education&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Highest level of education attained by employee."</i><p>
	 *
	 *  @param value A constant defined by the <code>TeachingCredentialBasis</code> class
	 *  @since 1.5r1
	 */
	public void setEducation( TeachingCredentialBasis value ) { 
		setField( ProfdevDTD.EMPLOYEECREDENTIAL_EDUCATION, value );
	}

	/**
	 *  Sets the value of the <code>&lt;Education&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Highest level of education attained by employee."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setEducation( String value ) { 
		setField( ProfdevDTD.EMPLOYEECREDENTIAL_EDUCATION, value );
	}

	/**
	 *  Adds a new <code>&lt;TeachingCredentialType&gt;</code> child element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Category in which teacher is authorized to teach"</i><p>
	 *
	 *  @param value A <code>TeachingCredential</code> object
	 *  @since 1.5r1
	 */
	public void addTeachingCredentialType( TeachingCredential value ) { 
		addChild( ProfdevDTD.EMPLOYEECREDENTIAL_TEACHINGCREDENTIALTYPE, value);
	}

	/**
	 *  Adds a new <code>&lt;TeachingCredentialType&gt;</code> repeatable element.
	 *  This form of <code>setTeachingCredentialType</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setTeachingCredentialType</code>
	 *  that accepts a single <code>TeachingCredential</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;TeachingCredential&gt; element
	 *  @since 1.5r1
	 */
	public void addTeachingCredentialType( TeachingCredentialType value ) {
		addChild( ProfdevDTD.EMPLOYEECREDENTIAL_TEACHINGCREDENTIALTYPE, new TeachingCredential( value ) );
	}

	/**
	 *  Removes a <code>TeachingCredential</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param value Identifies the TeachingCredential object to remove by its Value value
	 *  @since 1.5r1
	 */
	public void removeTeachingCredentialType( TeachingCredentialType value ) { 
		removeChild( ProfdevDTD.EMPLOYEECREDENTIAL_TEACHINGCREDENTIALTYPE, new String[] { value.toString() } );
	}

	/**
	 *  Gets a <code>TeachingCredential</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param value Identifies the TeachingCredential object to return by its "Value" attribute value
	 *  @return A <code>TeachingCredential</code> object
	 *  @since 1.5r1
	 */
	public TeachingCredential getTeachingCredentialType( TeachingCredentialType value ) { 
		return (TeachingCredential)getChild( ProfdevDTD.EMPLOYEECREDENTIAL_TEACHINGCREDENTIALTYPE, new String[] { value.toString() } );
	}

	/**
	 *  Gets all <code>TeachingCredential</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>TeachingCredential</code> objects
	 *  @since 1.5r1
	 */
	public TeachingCredential[] getTeachingCredentialTypes() {
		List<SIFElement> v = getChildList( ProfdevDTD.EMPLOYEECREDENTIAL_TEACHINGCREDENTIALTYPE);
		TeachingCredential[] cvt = new TeachingCredential[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>TeachingCredential</code> objects. All existing 
	 * <code>TeachingCredential</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>TeachingCredentials</code>.
	 *
	 *  @since 1.5r1
	 */
	public void setTeachingCredentialTypes( TeachingCredential[] teachingcredentialtypes ) {
		setChildren( ProfdevDTD.EMPLOYEECREDENTIAL_TEACHINGCREDENTIALTYPE, teachingcredentialtypes );
	}

	/**
	 *  Gets the value of the <code>&lt;TerminationCode&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"If appropriate, employment separation reason"</i><p>
	 *
	 *  @return The <code>TerminationCode</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getTerminationCode() { 
		return getFieldValue( ProfdevDTD.EMPLOYEECREDENTIAL_TERMINATIONCODE );
	}

	/**
	 *  Sets the value of the <code>&lt;TerminationCode&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"If appropriate, employment separation reason"</i><p>
	 *
	 *  @param value A constant defined by the <code>EmploymentSeperationReason</code> class
	 *  @since 1.5r1
	 */
	public void setTerminationCode( EmploymentSeperationReason value ) { 
		setField( ProfdevDTD.EMPLOYEECREDENTIAL_TERMINATIONCODE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;TerminationCode&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"If appropriate, employment separation reason"</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setTerminationCode( String value ) { 
		setField( ProfdevDTD.EMPLOYEECREDENTIAL_TERMINATIONCODE, value );
	}

	/**
	 *  Sets the value of the <code>&lt;BackgroundChecks&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Information about background checks done on employee"</i><p>
	 *
	 *  @param value A <code>BackgroundChecks</code> object
	 *  @since 1.5r1
	 */
	public void setBackgroundChecks( BackgroundChecks value ) { 
		removeChild( ProfdevDTD.EMPLOYEECREDENTIAL_BACKGROUNDCHECKS );
		addChild( ProfdevDTD.EMPLOYEECREDENTIAL_BACKGROUNDCHECKS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;BackgroundChecks&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Information about background checks done on employee"</i><p>
	 *
	 *  @return A <code>BackgroundChecks</code> object
	 *  @since 1.5r1
	 */
	public BackgroundChecks getBackgroundChecks() { 
		return (BackgroundChecks)getChild( ProfdevDTD.EMPLOYEECREDENTIAL_BACKGROUNDCHECKS);
	}

	/**
	 *  Removes the <code>BackgroundChecks</code> child element previously created by calling <code>setBackgroundChecks</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeBackgroundChecks() { 
		removeChild( ProfdevDTD.EMPLOYEECREDENTIAL_BACKGROUNDCHECKS );
	}

	/**
	 *  Sets the value of the <code>&lt;Assignments&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Information about the school and assignment of employee"</i><p>
	 *
	 *  @param value A <code>EmployeeAssignments</code> object
	 *  @since 1.5r1
	 */
	public void setAssignments( EmployeeAssignments value ) { 
		removeChild( ProfdevDTD.EMPLOYEECREDENTIAL_ASSIGNMENTS );
		addChild( ProfdevDTD.EMPLOYEECREDENTIAL_ASSIGNMENTS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;Assignments&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Information about the school and assignment of employee"</i><p>
	 *
	 *  @return An <code>EmployeeAssignments</code> object
	 *  @since 1.5r1
	 */
	public EmployeeAssignments getAssignments() { 
		return (EmployeeAssignments)getChild( ProfdevDTD.EMPLOYEECREDENTIAL_ASSIGNMENTS);
	}

	/**
	 *  Removes the <code>Assignments</code> child element previously created by calling <code>setAssignments</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeAssignments() { 
		removeChild( ProfdevDTD.EMPLOYEECREDENTIAL_ASSIGNMENTS );
	}

}
