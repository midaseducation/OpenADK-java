// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.programs;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.4
 */
public class NeglectedOrDelinquentParticipationList extends SIFKeyedList<NeglectedOrDelinquentParticipation>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public NeglectedOrDelinquentParticipationList() {
		super( ProgramsDTD.NEGLECTEDORDELINQUENTPARTICIPATIONLIST );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param neglectedOrDelinquentParticipation The type and number of days a student participated in a Neglected or Delinquent program during the reporting period.
	 */
	public NeglectedOrDelinquentParticipationList( NeglectedOrDelinquentParticipation neglectedOrDelinquentParticipation ) {
		super( ProgramsDTD.NEGLECTEDORDELINQUENTPARTICIPATIONLIST );
		this.safeAddChild( ProgramsDTD.NEGLECTEDORDELINQUENTPARTICIPATIONLIST_NEGLECTEDORDELINQUENTPARTICIPATION, neglectedOrDelinquentParticipation );
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( ProgramsDTD.NEGLECTEDORDELINQUENTPARTICIPATIONLIST_NEGLECTEDORDELINQUENTPARTICIPATION );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { ProgramsDTD.NEGLECTEDORDELINQUENTPARTICIPATIONLIST_NEGLECTEDORDELINQUENTPARTICIPATION };
	}

	/**
	 *  Adds a new <code>&lt;NeglectedOrDelinquentParticipation&gt;</code> repeatable element.
	 *  This form of <code>setNeglectedOrDelinquentParticipation</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setNeglectedOrDelinquentParticipation</code>
	 *  that accepts a single <code>NeglectedOrDelinquentParticipation</code> object.
	 *
	 *  @param type The specific classification for the neglected or delinquent program.
	 *  @since 2.4
	 */
	public void addNeglectedOrDelinquentParticipation( NeglectedOrDelinquentParticipationType type ) {
		addChild( ProgramsDTD.NEGLECTEDORDELINQUENTPARTICIPATIONLIST_NEGLECTEDORDELINQUENTPARTICIPATION, new NeglectedOrDelinquentParticipation( type ) );
	}

	/**
	 *  Removes a <code>NeglectedOrDelinquentParticipation</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the NeglectedOrDelinquentParticipation object to remove by its Type value
	 *  @since 2.4
	 */
	public void removeNeglectedOrDelinquentParticipation( NeglectedOrDelinquentParticipationType type ) { 
		removeChild( ProgramsDTD.NEGLECTEDORDELINQUENTPARTICIPATIONLIST_NEGLECTEDORDELINQUENTPARTICIPATION, new String[] { type.toString() } );
	}

	/**
	 *  Gets a <code>NeglectedOrDelinquentParticipation</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the NeglectedOrDelinquentParticipation object to return by its "Type" attribute value
	 *  @return A <code>NeglectedOrDelinquentParticipation</code> object
	 *  @since 2.4
	 */
	public NeglectedOrDelinquentParticipation getNeglectedOrDelinquentParticipation( NeglectedOrDelinquentParticipationType type ) { 
		return (NeglectedOrDelinquentParticipation)getChild( ProgramsDTD.NEGLECTEDORDELINQUENTPARTICIPATIONLIST_NEGLECTEDORDELINQUENTPARTICIPATION, new String[] { type.toString() } );
	}

	/**
	 *  Gets all <code>NeglectedOrDelinquentParticipation</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>NeglectedOrDelinquentParticipation</code> objects
	 *  @since 2.4
	 */
	public NeglectedOrDelinquentParticipation[] getNeglectedOrDelinquentParticipations() {
		List<SIFElement> v = getChildList( ProgramsDTD.NEGLECTEDORDELINQUENTPARTICIPATIONLIST_NEGLECTEDORDELINQUENTPARTICIPATION);
		NeglectedOrDelinquentParticipation[] cvt = new NeglectedOrDelinquentParticipation[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>NeglectedOrDelinquentParticipation</code> objects. All existing 
	 * <code>NeglectedOrDelinquentParticipation</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>NeglectedOrDelinquentParticipations</code>.
	 *
	 *  @since 2.4
	 */
	public void setNeglectedOrDelinquentParticipations( NeglectedOrDelinquentParticipation[] neglectedordelinquentparticipations ) {
		setChildren( ProgramsDTD.NEGLECTEDORDELINQUENTPARTICIPATIONLIST_NEGLECTEDORDELINQUENTPARTICIPATION, neglectedordelinquentparticipations );
	}

}
