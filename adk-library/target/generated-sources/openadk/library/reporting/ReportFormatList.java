// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.reporting;

import openadk.library.*;
import openadk.library.common.*;
import openadk.library.infra.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class ReportFormatList extends SIFKeyedList<ReportFormat>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public ReportFormatList() {
		super( ReportingDTD.REPORTFORMATLIST );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param reportFormat A third-party format that describes the visual representation of the report data.
	 */
	public ReportFormatList( ReportFormat reportFormat ) {
		super( ReportingDTD.REPORTFORMATLIST );
		this.safeAddChild( ReportingDTD.REPORTFORMATLIST_REPORTFORMAT, reportFormat );
	}

	/**
	 *  Adds a new <code>&lt;ReportFormat&gt;</code> repeatable element.
	 *  This form of <code>setReportFormat</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setReportFormat</code>
	 *  that accepts a single <code>ReportFormat</code> object.
	 *
	 *  @param type This attribute indicates the encoding of the format reference.
	 *  @param value Gets or sets the content value of the &lt;ReportFormat&gt; element
	 *  @since 1.5r1
	 */
	public void addReportFormat( ReportFormatType type, String value ) {
		addChild( ReportingDTD.REPORTFORMATLIST_REPORTFORMAT, new ReportFormat( type, value ) );
	}

	/**
	 *  Removes a <code>ReportFormat</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the ReportFormat object to remove by its Type value
	 *  @since 1.5r1
	 */
	public void removeReportFormat( ReportFormatType type ) { 
		removeChild( ReportingDTD.REPORTFORMATLIST_REPORTFORMAT, new String[] { type.toString() } );
	}

	/**
	 *  Gets a <code>ReportFormat</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the ReportFormat object to return by its "Type" attribute value
	 *  @return A <code>ReportFormat</code> object
	 *  @since 1.5r1
	 */
	public ReportFormat getReportFormat( ReportFormatType type ) { 
		return (ReportFormat)getChild( ReportingDTD.REPORTFORMATLIST_REPORTFORMAT, new String[] { type.toString() } );
	}

	/**
	 *  Gets all <code>ReportFormat</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>ReportFormat</code> objects
	 *  @since 1.5r1
	 */
	public ReportFormat[] getReportFormats() {
		List<SIFElement> v = getChildList( ReportingDTD.REPORTFORMATLIST_REPORTFORMAT);
		ReportFormat[] cvt = new ReportFormat[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>ReportFormat</code> objects. All existing 
	 * <code>ReportFormat</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>ReportFormats</code>.
	 *
	 *  @since 1.5r1
	 */
	public void setReportFormats( ReportFormat[] reportformats ) {
		setChildren( ReportingDTD.REPORTFORMATLIST_REPORTFORMAT, reportformats );
	}

}
