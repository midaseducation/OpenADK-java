// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.reporting;

import openadk.library.*;
import openadk.library.common.*;
import openadk.library.infra.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  This object contains information on authorities that provide ReportManifest objects and/or collect SIF_ReportObject objects, such as state departments of education, regional service agencies, or other report collecting agencies.  SIF_Events are reported.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class ReportAuthorityInfo extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public ReportAuthorityInfo() {
		super( ADK.getSIFVersion(), ReportingDTD.REPORTAUTHORITYINFO );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId The unique identifier for this agency/report authority.
	 *  @param authorityName Name of the agency/report authority.
	 *  @param authorityId The zone unique case-sensitive identifier for the authority. This will be the contents of the SIF_SourceId element in the header of requests for reports.
	 *  @param authorityLevel Level of the authority.
	 */
	public ReportAuthorityInfo( String refId, String authorityName, String authorityId, AuthorityLevel authorityLevel ) {
		super( ADK.getSIFVersion(), ReportingDTD.REPORTAUTHORITYINFO );
		this.setRefId(refId);
		this.setAuthorityName(authorityName);
		this.setAuthorityId(authorityId);
		this.setAuthorityLevel( authorityLevel );
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( ReportingDTD.REPORTAUTHORITYINFO_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { ReportingDTD.REPORTAUTHORITYINFO_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The unique identifier for this agency/report authority."</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( ReportingDTD.REPORTAUTHORITYINFO_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The unique identifier for this agency/report authority."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setRefId( String value ) { 
		setFieldValue( ReportingDTD.REPORTAUTHORITYINFO_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;AuthorityName&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Name of the agency/report authority."</i><p>
	 *
	 *  @return The <code>AuthorityName</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getAuthorityName() { 
		return (String) getSIFSimpleFieldValue( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYNAME );
	}

	/**
	 *  Sets the value of the <code>&lt;AuthorityName&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Name of the agency/report authority."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setAuthorityName( String value ) { 
		setFieldValue( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYNAME, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;AuthorityId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The zone unique case-sensitive identifier for the authority. This will be the contents of the SIF_SourceId element in the header of requests for reports."</i><p>
	 *
	 *  @return The <code>AuthorityId</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getAuthorityId() { 
		return (String) getSIFSimpleFieldValue( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYID );
	}

	/**
	 *  Sets the value of the <code>&lt;AuthorityId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The zone unique case-sensitive identifier for the authority. This will be the contents of the SIF_SourceId element in the header of requests for reports."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setAuthorityId( String value ) { 
		setFieldValue( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;AuthorityDepartment&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Department, office, or subdivision of the agency/report authority."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"AuthorityDept"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"AuthorityDepartment"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @return The <code>AuthorityDepartment</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getAuthorityDepartment() { 
		return (String) getSIFSimpleFieldValue( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYDEPARTMENT );
	}

	/**
	 *  Sets the value of the <code>&lt;AuthorityDepartment&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Department, office, or subdivision of the agency/report authority."</i><p>
	 *  This element is known by more than one tag name depending on the version of SIF in use. The ADK will use the tag names shown below when parsing and rendering elements of this kind.<p>
	 *  <table width='50%' border='1'><tr><td align='center'><font face='verdana,helvetica' size='-1'>Version</font></td><td align='center'><font face='verdana,helvetica' size='-1'>Tag</font></td></tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF1.5r1 (and greater)</font></td><td>"AuthorityDept"</td>	 *  </tr>
	 *  <tr>	 *  <td><font face='verdana,helvetica' size='-1'>SIF2.0 (and greater)</font></td><td>"AuthorityDepartment"</td>	 *  </tr>
	 *  </table><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setAuthorityDepartment( String value ) { 
		setFieldValue( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYDEPARTMENT, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;AuthorityLevel&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Level of the authority."</i><p>
	 *
	 *  @return The <code>AuthorityLevel</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getAuthorityLevel() { 
		return getFieldValue( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYLEVEL );
	}

	/**
	 *  Sets the value of the <code>&lt;AuthorityLevel&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Level of the authority."</i><p>
	 *
	 *  @param value A constant defined by the <code>AuthorityLevel</code> class
	 *  @since 1.5r1
	 */
	public void setAuthorityLevel( AuthorityLevel value ) { 
		setField( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYLEVEL, value );
	}

	/**
	 *  Sets the value of the <code>&lt;AuthorityLevel&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Level of the authority."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setAuthorityLevel( String value ) { 
		setField( ReportingDTD.REPORTAUTHORITYINFO_AUTHORITYLEVEL, value );
	}

	/**
	 *  Sets the value of the <code>&lt;ContactInfo&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Information on the contact person in this agency."</i><p>
	 *
	 *  @param value A <code>ContactInfo</code> object
	 *  @since 1.5r1
	 */
	public void setContactInfo( ContactInfo value ) { 
		removeChild( ReportingDTD.REPORTAUTHORITYINFO_CONTACTINFO );
		addChild( ReportingDTD.REPORTAUTHORITYINFO_CONTACTINFO, value);
	}

	/**
	 *  Sets the value of the <code>&lt;ContactInfo&gt;</code> child element.
	 *  This form of <code>setContactInfo</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setContactInfo</code>
	 *  that accepts a single <code>ContactInfo</code> object.
	 *
	 *  @param name The name of the contact person.
	 *  @since 1.5r1
	 */
	public void setContactInfo( Name name ) {
		removeChild( ReportingDTD.REPORTAUTHORITYINFO_CONTACTINFO);
		addChild( ReportingDTD.REPORTAUTHORITYINFO_CONTACTINFO, new ContactInfo( name ) );
	}

	/**
	 *  Gets the value of the <code>&lt;ContactInfo&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Information on the contact person in this agency."</i><p>
	 *
	 *  @return A <code>ContactInfo</code> object
	 *  @since 1.5r1
	 */
	public ContactInfo getContactInfo() { 
		return (ContactInfo)getChild( ReportingDTD.REPORTAUTHORITYINFO_CONTACTINFO);
	}

	/**
	 *  Removes the <code>ContactInfo</code> child element previously created by calling <code>setContactInfo</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeContactInfo() { 
		removeChild( ReportingDTD.REPORTAUTHORITYINFO_CONTACTINFO );
	}

	/**
	 *  Sets the value of the <code>&lt;Address&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"For a description of this element, see 5.1.1 Address."</i><p>
	 *
	 *  @param value A <code>Address</code> object
	 *  @since 1.5r1
	 */
	public void setAddress( Address value ) { 
		removeChild( ReportingDTD.REPORTAUTHORITYINFO_ADDRESS );
		addChild( ReportingDTD.REPORTAUTHORITYINFO_ADDRESS, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Address&gt;</code> child element.
	 *  This form of <code>setAddress</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setAddress</code>
	 *  that accepts a single <code>Address</code> object.
	 *
	 *  @param type Code that defines the location of the address.  Note:  A subset of specific valid values for each instance in a data object may be listed in that object.
	 *  @param street The street part of the address
	 *  @param city The city part of the address.
	 *  @param stateProvince The state or province code.
	 *  @param country The country code.
	 *  @param postalCode The ZIP/postal code.
	 *  @since 1.5r1
	 */
	public void setAddress( AddressType type, Street street, String city, StatePrCode stateProvince, CountryCode country, String postalCode ) {
		removeChild( ReportingDTD.REPORTAUTHORITYINFO_ADDRESS);
		addChild( ReportingDTD.REPORTAUTHORITYINFO_ADDRESS, new Address( type, street, city, stateProvince, country, postalCode ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Address&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"For a description of this element, see 5.1.1 Address."</i><p>
	 *
	 *  @return An <code>Address</code> object
	 *  @since 1.5r1
	 */
	public Address getAddress() { 
		return (Address)getChild( ReportingDTD.REPORTAUTHORITYINFO_ADDRESS);
	}

	/**
	 *  Removes the <code>Address</code> child element previously created by calling <code>setAddress</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeAddress() { 
		removeChild( ReportingDTD.REPORTAUTHORITYINFO_ADDRESS );
	}

	/**
	 *  Sets the value of the <code>&lt;PhoneNumber&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"For a description of this element, see 5.1.22 PhoneNumber."</i><p>
	 *
	 *  @param value A <code>PhoneNumber</code> object
	 *  @since 1.5r1
	 */
	public void setPhoneNumber( PhoneNumber value ) { 
		removeChild( ReportingDTD.REPORTAUTHORITYINFO_PHONENUMBER );
		addChild( ReportingDTD.REPORTAUTHORITYINFO_PHONENUMBER, value);
	}

	/**
	 *  Sets the value of the <code>&lt;PhoneNumber&gt;</code> child element.
	 *  This form of <code>setPhoneNumber</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setPhoneNumber</code>
	 *  that accepts a single <code>PhoneNumber</code> object.
	 *
	 *  @param type Code that specifies what type of phone number this is.  Note: A subset of valid values may be specified in data objects.
	 *  @param number Phone number.  Acceptable formats:
	 *  @since 1.5r1
	 */
	public void setPhoneNumber( PhoneNumberType type, String number ) {
		removeChild( ReportingDTD.REPORTAUTHORITYINFO_PHONENUMBER);
		addChild( ReportingDTD.REPORTAUTHORITYINFO_PHONENUMBER, new PhoneNumber( type, number ) );
	}

	/**
	 *  Gets the value of the <code>&lt;PhoneNumber&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"For a description of this element, see 5.1.22 PhoneNumber."</i><p>
	 *
	 *  @return A <code>PhoneNumber</code> object
	 *  @since 1.5r1
	 */
	public PhoneNumber getPhoneNumber() { 
		return (PhoneNumber)getChild( ReportingDTD.REPORTAUTHORITYINFO_PHONENUMBER);
	}

	/**
	 *  Removes the <code>PhoneNumber</code> child element previously created by calling <code>setPhoneNumber</code>
	 *
	 *  @since 1.5r1
	 */
	public void removePhoneNumber() { 
		removeChild( ReportingDTD.REPORTAUTHORITYINFO_PHONENUMBER );
	}

}
