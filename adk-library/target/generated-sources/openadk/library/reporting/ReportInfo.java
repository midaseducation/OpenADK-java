// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.reporting;

import openadk.library.*;
import openadk.library.common.*;
import openadk.library.infra.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  Identifies the manifest for the report and characteristics of the submission. This element is a conditional element. This element is included or the ReportData element is included but never both at the same time within an instance of this object. See examples of the usage of the object below.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class ReportInfo extends SIFKeyedElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public ReportInfo() {
		super( ReportingDTD.REPORTINFO );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param reportManifestRefId The report manifest corresponding to this report.
	 *  @param calculationDate The date on which the report was calculated.
	 *  @param submissionNumber A number that identifies the submission; beginning at 1 and incremented each time a submission is done for a particular report; used to indicate resubmission(s).
	 *  @param submissionReason Reason for the report submission.
	 */
	public ReportInfo( String reportManifestRefId, Calendar calculationDate, Integer submissionNumber, SubmissionReason submissionReason ) {
		super( ReportingDTD.REPORTINFO );
		this.setReportManifestRefId(reportManifestRefId);
		this.setCalculationDate(calculationDate);
		this.setSubmissionNumber(submissionNumber);
		this.setSubmissionReason( submissionReason );
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( ReportingDTD.REPORTINFO_REPORTMANIFESTREFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { ReportingDTD.REPORTINFO_REPORTMANIFESTREFID };
	}

	/**
	 *  Gets the value of the <code>ReportManifestRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The report manifest corresponding to this report."</i><p>
	 *
	 *  @return The <code>ReportManifestRefId</code> attribute of this object.
	 *  @since 1.5r1
	 */
	public String getReportManifestRefId() { 
		return (String) getSIFSimpleFieldValue( ReportingDTD.REPORTINFO_REPORTMANIFESTREFID );
	}

	/**
	 *  Sets the value of the <code>ReportManifestRefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The report manifest corresponding to this report."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setReportManifestRefId( String value ) { 
		setFieldValue( ReportingDTD.REPORTINFO_REPORTMANIFESTREFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;CalculationDate&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The date on which the report was calculated."</i><p>
	 *
	 *  @return The <code>CalculationDate</code> element of this object.
	 *  @since 1.5r1
	 */
	public Calendar getCalculationDate() { 
		return (Calendar) getSIFSimpleFieldValue( ReportingDTD.REPORTINFO_CALCULATIONDATE );
	}

	/**
	 *  Sets the value of the <code>&lt;CalculationDate&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The date on which the report was calculated."</i><p>
	 *
	 *  @param value A <code>Calendar</code> object
	 *  @since 1.5r1
	 */
	public void setCalculationDate( Calendar value ) { 
		setFieldValue( ReportingDTD.REPORTINFO_CALCULATIONDATE, new SIFDate( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;SubmissionNumber&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A number that identifies the submission; beginning at 1 and incremented each time a submission is done for a particular report; used to indicate resubmission(s)."</i><p>
	 *
	 *  @return The <code>SubmissionNumber</code> element of this object.
	 *  @since 1.5r1
	 */
	public Integer getSubmissionNumber() { 
		return (Integer) getSIFSimpleFieldValue( ReportingDTD.REPORTINFO_SUBMISSIONNUMBER );
	}

	/**
	 *  Sets the value of the <code>&lt;SubmissionNumber&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A number that identifies the submission; beginning at 1 and incremented each time a submission is done for a particular report; used to indicate resubmission(s)."</i><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 1.5r1
	 */
	public void setSubmissionNumber( Integer value ) { 
		setFieldValue( ReportingDTD.REPORTINFO_SUBMISSIONNUMBER, new SIFInt( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;SubmissionReason&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Reason for the report submission."</i><p>
	 *
	 *  @return The <code>SubmissionReason</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getSubmissionReason() { 
		return getFieldValue( ReportingDTD.REPORTINFO_SUBMISSIONREASON );
	}

	/**
	 *  Sets the value of the <code>&lt;SubmissionReason&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Reason for the report submission."</i><p>
	 *
	 *  @param value A constant defined by the <code>SubmissionReason</code> class
	 *  @since 1.5r1
	 */
	public void setSubmissionReason( SubmissionReason value ) { 
		setField( ReportingDTD.REPORTINFO_SUBMISSIONREASON, value );
	}

	/**
	 *  Sets the value of the <code>&lt;SubmissionReason&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Reason for the report submission."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setSubmissionReason( String value ) { 
		setField( ReportingDTD.REPORTINFO_SUBMISSIONREASON, value );
	}

	/**
	 *  Sets the value of the <code>&lt;ReportSubmitterInfo&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Identifies the submitter of the report.This element is conditional depending on the context in which the SIF_ReportObject is used.  It must be present in the ReportInfo element when a SIF_ReportObject is sent to a report authority in a SIF_Event message.  However, its presence is optional in SIF_ReportObject packets delivered to report authorities in SIF_Response messages."</i><p>
	 *
	 *  @param value A <code>ReportSubmitterInfo</code> object
	 *  @since 1.5r1
	 */
	public void setReportSubmitterInfo( ReportSubmitterInfo value ) { 
		removeChild( ReportingDTD.REPORTINFO_REPORTSUBMITTERINFO );
		addChild( ReportingDTD.REPORTINFO_REPORTSUBMITTERINFO, value);
	}

	/**
	 *  Sets the value of the <code>&lt;ReportSubmitterInfo&gt;</code> child element.
	 *  This form of <code>setReportSubmitterInfo</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setReportSubmitterInfo</code>
	 *  that accepts a single <code>ReportSubmitterInfo</code> object.
	 *
	 *  @param submitterName Name of the report submitter.This is a descriptive string that names the entity submitting the SIF_ReportObject to the report authority.  It could be the name of an agency, a district, a school, the SIF_SourceId of the submitting agent, or any other string that a report authority could use to identify the submitter of a report.  This element may be present regardless of the presence of the SifRefIdType and SifRefId elements.  When those elements are used, it is recommended that collector agents reproduce the name of the LEA or school here.
	 *  @since 1.5r1
	 */
	public void setReportSubmitterInfo( String submitterName ) {
		removeChild( ReportingDTD.REPORTINFO_REPORTSUBMITTERINFO);
		addChild( ReportingDTD.REPORTINFO_REPORTSUBMITTERINFO, new ReportSubmitterInfo( submitterName ) );
	}

	/**
	 *  Gets the value of the <code>&lt;ReportSubmitterInfo&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Identifies the submitter of the report.This element is conditional depending on the context in which the SIF_ReportObject is used.  It must be present in the ReportInfo element when a SIF_ReportObject is sent to a report authority in a SIF_Event message.  However, its presence is optional in SIF_ReportObject packets delivered to report authorities in SIF_Response messages."</i><p>
	 *
	 *  @return A <code>ReportSubmitterInfo</code> object
	 *  @since 1.5r1
	 */
	public ReportSubmitterInfo getReportSubmitterInfo() { 
		return (ReportSubmitterInfo)getChild( ReportingDTD.REPORTINFO_REPORTSUBMITTERINFO);
	}

	/**
	 *  Removes the <code>ReportSubmitterInfo</code> child element previously created by calling <code>setReportSubmitterInfo</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeReportSubmitterInfo() { 
		removeChild( ReportingDTD.REPORTINFO_REPORTSUBMITTERINFO );
	}

	/**
	 *  Gets the value of the <code>&lt;Description&gt;</code> element.
	 *
	 *  @return The <code>Description</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getDescription() { 
		return (String) getSIFSimpleFieldValue( ReportingDTD.REPORTINFO_DESCRIPTION );
	}

	/**
	 *  Sets the value of the <code>&lt;Description&gt;</code> element.
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.5r1
	 */
	public void setDescription( String value ) { 
		setFieldValue( ReportingDTD.REPORTINFO_DESCRIPTION, new SIFString( value ), value );
	}

}
