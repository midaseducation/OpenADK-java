// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.reporting;

import openadk.library.*;
import openadk.library.common.*;
import openadk.library.infra.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  Typically used to provide the state information about a student's parents and legal guardians.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.5r1
 */
public class SLContact extends SIFKeyedElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public SLContact() {
		super( ReportingDTD.SLCONTACT );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param relationship Relationship to the student.
	 */
	public SLContact( Relationship relationship ) {
		super( ReportingDTD.SLCONTACT );
		this.setRelationship(relationship);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( ReportingDTD.SLCONTACT_RELATIONSHIP );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { ReportingDTD.SLCONTACT_RELATIONSHIP };
	}

	/**
	 *  Sets the value of the <code>&lt;Relationship&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Relationship to the student."</i><p>
	 *
	 *  @param value A <code>Relationship</code> object
	 *  @since 1.5r1
	 */
	public void setRelationship( Relationship value ) { 
		removeChild( ReportingDTD.SLCONTACT_RELATIONSHIP );
		addChild( ReportingDTD.SLCONTACT_RELATIONSHIP, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Relationship&gt;</code> child element.
	 *  This form of <code>setRelationship</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setRelationship</code>
	 *  that accepts a single <code>Relationship</code> object.
	 *
	 *  @param code Code representing the relationship.
	 *  @since 1.5r1
	 */
	public void setRelationship( RelationshipCode code ) {
		removeChild( ReportingDTD.SLCONTACT_RELATIONSHIP);
		addChild( ReportingDTD.SLCONTACT_RELATIONSHIP, new Relationship( code ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Relationship&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Relationship to the student."</i><p>
	 *
	 *  @return A <code>Relationship</code> object
	 *  @since 1.5r1
	 */
	public Relationship getRelationship() { 
		return (Relationship)getChild( ReportingDTD.SLCONTACT_RELATIONSHIP);
	}

	/**
	 *  Removes the <code>Relationship</code> child element previously created by calling <code>setRelationship</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeRelationship() { 
		removeChild( ReportingDTD.SLCONTACT_RELATIONSHIP );
	}

	/**
	 *  Adds a new <code>&lt;Name&gt;</code> child element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The name(s) of the contact."</i><p>
	 *
	 *  @param value A <code>Name</code> object
	 *  @since 1.5r1
	 */
	public void addName( Name value ) { 
		addChild( ReportingDTD.SLCONTACT_NAME, value);
	}

	/**
	 *  Adds a new <code>&lt;Name&gt;</code> repeatable element.
	 *  This form of <code>setName</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setName</code>
	 *  that accepts a single <code>Name</code> object.
	 *
	 *  @param type Code that specifies what type of name this is.  If unsure, use 04.
	 *  @param lastName The last name.
	 *  @param firstName The first name.
	 *  @since 1.5r1
	 */
	public void addName( NameType type, String lastName, String firstName ) {
		addChild( ReportingDTD.SLCONTACT_NAME, new Name( type, lastName, firstName ) );
	}

	/**
	 *  Removes a <code>Name</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the Name object to remove by its Type value
	 *  @since 1.5r1
	 */
	public void removeName( NameType type ) { 
		removeChild( ReportingDTD.SLCONTACT_NAME, new String[] { type.toString() } );
	}

	/**
	 *  Gets a <code>Name</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param type Identifies the Name object to return by its "Type" attribute value
	 *  @return A <code>Name</code> object
	 *  @since 1.5r1
	 */
	public Name getName( NameType type ) { 
		return (Name)getChild( ReportingDTD.SLCONTACT_NAME, new String[] { type.toString() } );
	}

	/**
	 *  Gets all <code>Name</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>Name</code> objects
	 *  @since 1.5r1
	 */
	public Name[] getNames() {
		List<SIFElement> v = getChildList( ReportingDTD.SLCONTACT_NAME);
		Name[] cvt = new Name[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>Name</code> objects. All existing 
	 * <code>Name</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>Names</code>.
	 *
	 *  @since 1.5r1
	 */
	public void setNames( Name[] names ) {
		setChildren( ReportingDTD.SLCONTACT_NAME, names );
	}

	/**
	 *  Sets the value of the <code>&lt;OtherId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The ID(s) of the contact."</i><p>
	 *
	 *  @param value A <code>OtherId</code> object
	 *  @since 1.5r1
	 */
	public void setOtherId( OtherId value ) { 
		removeChild( ReportingDTD.SLCONTACT_OTHERID );
		addChild( ReportingDTD.SLCONTACT_OTHERID, value);
	}

	/**
	 *  Sets the value of the <code>&lt;OtherId&gt;</code> child element.
	 *  This form of <code>setOtherId</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setOtherId</code>
	 *  that accepts a single <code>OtherId</code> object.
	 *
	 *  @param type Code that defines the type of this other ID.  Note: A subset of valid values may be specified in data objects.
	 *  @param value Gets or sets the content value of the &lt;OtherId&gt; element
	 *  @since 1.5r1
	 */
	public void setOtherId( OtherIdType type, String value ) {
		removeChild( ReportingDTD.SLCONTACT_OTHERID);
		addChild( ReportingDTD.SLCONTACT_OTHERID, new OtherId( type, value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;OtherId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The ID(s) of the contact."</i><p>
	 *
	 *  @return An <code>OtherId</code> object
	 *  @since 1.5r1
	 */
	public OtherId getOtherId() { 
		return (OtherId)getChild( ReportingDTD.SLCONTACT_OTHERID);
	}

	/**
	 *  Removes the <code>OtherId</code> child element previously created by calling <code>setOtherId</code>
	 *
	 *  @since 1.5r1
	 */
	public void removeOtherId() { 
		removeChild( ReportingDTD.SLCONTACT_OTHERID );
	}

	/**
	 *  Gets the value of the <code>&lt;EducationalLevel&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Highest level of education completed by the contact."</i><p>
	 *
	 *  @return The <code>EducationalLevel</code> element of this object.
	 *  @since 1.5r1
	 */
	public String getEducationalLevel() { 
		return getFieldValue( ReportingDTD.SLCONTACT_EDUCATIONALLEVEL );
	}

	/**
	 *  Sets the value of the <code>&lt;EducationalLevel&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Highest level of education completed by the contact."</i><p>
	 *
	 *  @param value A constant defined by the <code>EducationalLevelCode</code> class
	 *  @since 1.5r1
	 */
	public void setEducationalLevel( EducationalLevelCode value ) { 
		setField( ReportingDTD.SLCONTACT_EDUCATIONALLEVEL, value );
	}

	/**
	 *  Sets the value of the <code>&lt;EducationalLevel&gt;</code> element as a String.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Highest level of education completed by the contact."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 1.5r1
	 */
	public void setEducationalLevel( String value ) { 
		setField( ReportingDTD.SLCONTACT_EDUCATIONALLEVEL, value );
	}

}
