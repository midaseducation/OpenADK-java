// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.infra;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 1.1
 */
public class SIF_Error extends SIFElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public SIF_Error() {
		super( InfraDTD.SIF_ERROR );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param sifCategory 
	 *  @param sifCode See Error Codes.
	 *  @param sifDesc A simple, easy to understand, description of the error. The primary consumer of this message is the application user. Example: "Unable to open database."
	 */
	public SIF_Error( Integer sifCategory, Integer sifCode, String sifDesc ) {
		super( InfraDTD.SIF_ERROR );
		this.setSIF_Category(sifCategory);
		this.setSIF_Code(sifCode);
		this.setSIF_Desc(sifDesc);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		StringBuilder b = new StringBuilder();
		b.append( getFieldValue( InfraDTD.SIF_ERROR_SIF_CATEGORY ) );
		b.append('.');
		b.append( getFieldValue( InfraDTD.SIF_ERROR_SIF_CODE ) );
		return b.toString();
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { InfraDTD.SIF_ERROR_SIF_CATEGORY, InfraDTD.SIF_ERROR_SIF_CODE };
	}

	/**
	 *  Gets the value of the <code>&lt;SIF_Category&gt;</code> element.
	 *
	 *  @return The <code>SIF_Category</code> element of this object.
	 *  @since 1.1
	 */
	public Integer getSIF_Category() { 
		return (Integer) getSIFSimpleFieldValue( InfraDTD.SIF_ERROR_SIF_CATEGORY );
	}

	/**
	 *  Sets the value of the <code>&lt;SIF_Category&gt;</code> element.
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 1.1
	 */
	public void setSIF_Category( Integer value ) { 
		setFieldValue( InfraDTD.SIF_ERROR_SIF_CATEGORY, new SIFInt( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;SIF_Code&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"See Error Codes."</i><p>
	 *
	 *  @return The <code>SIF_Code</code> element of this object.
	 *  @since 1.1
	 */
	public Integer getSIF_Code() { 
		return (Integer) getSIFSimpleFieldValue( InfraDTD.SIF_ERROR_SIF_CODE );
	}

	/**
	 *  Sets the value of the <code>&lt;SIF_Code&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"See Error Codes."</i><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 1.1
	 */
	public void setSIF_Code( Integer value ) { 
		setFieldValue( InfraDTD.SIF_ERROR_SIF_CODE, new SIFInt( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;SIF_Desc&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A simple, easy to understand, description of the error. The primary consumer of this message is the application user. Example: "Unable to open database.""</i><p>
	 *
	 *  @return The <code>SIF_Desc</code> element of this object.
	 *  @since 1.1
	 */
	public String getSIF_Desc() { 
		return (String) getSIFSimpleFieldValue( InfraDTD.SIF_ERROR_SIF_DESC );
	}

	/**
	 *  Sets the value of the <code>&lt;SIF_Desc&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A simple, easy to understand, description of the error. The primary consumer of this message is the application user. Example: "Unable to open database.""</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setSIF_Desc( String value ) { 
		setFieldValue( InfraDTD.SIF_ERROR_SIF_DESC, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;SIF_ExtendedDesc&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"An optional error description that is more complete and technical in nature. It is to be used as a diagnostic message in trouble-shooting procedures. Example: "The 'Students' table is opened in exclusive mode by user 'ADM1' (dbm.cpp, line 300).""</i><p>
	 *
	 *  @return The <code>SIF_ExtendedDesc</code> element of this object.
	 *  @since 1.1
	 */
	public String getSIF_ExtendedDesc() { 
		return (String) getSIFSimpleFieldValue( InfraDTD.SIF_ERROR_SIF_EXTENDEDDESC );
	}

	/**
	 *  Sets the value of the <code>&lt;SIF_ExtendedDesc&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"An optional error description that is more complete and technical in nature. It is to be used as a diagnostic message in trouble-shooting procedures. Example: "The 'Students' table is opened in exclusive mode by user 'ADM1' (dbm.cpp, line 300).""</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 1.1
	 */
	public void setSIF_ExtendedDesc( String value ) { 
		setFieldValue( InfraDTD.SIF_ERROR_SIF_EXTENDEDDESC, new SIFString( value ), value );
	}


// BEGIN EXTRA METHODS (/Users/ajbrown/Projects/midas/OpenADK-java/adk-generator/../adk-generator/datadef/core/sif20/SIF_Error.txt)

	/**
	 * Create an instance of SIF_Error
	 * @param sifCategory The SIF category to set
	 * @param sifCode The SIF error code to set
	 * @param sifDesc A description of the error
	 * @param sifExtDesc An extended description
	 */
	public SIF_Error( Integer sifCategory, Integer sifCode, String sifDesc, String sifExtDesc ) {
		this( sifCategory, sifCode, sifDesc );
		if( sifExtDesc != null ){
			this.setSIF_ExtendedDesc( sifExtDesc );
		}
	}

	/**
	 * Create an instance of SIF_Error
	 * @param sifCategory The SIF category to set
	 * @param sifCode The SIF error code to set
	 * @param sifDesc A description of the error
	 * @param sifExtDesc An extended description
	 */
	public SIF_Error( SIFErrorCategory sifCategory, Integer sifCode, String sifDesc, String sifExtDesc ) {
		this( sifCategory.getValue(), sifCode, sifDesc );
		if( sifExtDesc != null ){
			this.setSIF_ExtendedDesc( sifExtDesc );
		}
	}
	
	/**
	 * Sets the Category associated with this error
	 * @param errorCategory The category to use
	 */
	public void setSIF_Category(SIFErrorCategory errorCategory) {
		setSIF_Category( errorCategory.getValue() );
	}

	public String toString()
	{
		StringBuffer buf = new StringBuffer();

		try
		{
			buf.append("[Category=");
			buf.append(getSIF_Category());
			buf.append("; Code=");
			buf.append(getSIF_Code());
			buf.append("] ");

			String desc = getSIF_Desc();
			if( desc != null )
				buf.append( desc );
			desc = getSIF_ExtendedDesc();
			if( desc != null ) {
				buf.append(": ");
				buf.append( desc );
			}
		}
		catch( Throwable thr ) {
			System.out.println(thr);
			Thread.dumpStack();
		}

		return buf.toString();
	}

// END EXTRA METHODS

}
