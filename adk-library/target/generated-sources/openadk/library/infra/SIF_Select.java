// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.infra;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.0
 */
public class SIF_Select extends SIFElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public SIF_Select() {
		super( InfraDTD.SIF_SELECT );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param distinct Specifies whether query results should return all rows (false) or just distinct ones (true). Rows are distinct if at least one column differs between them.
	 *  @param rowCount The maximum number of rows to return. If All, return all rows, otherwise return the top rows up to the maximum row count indicated.
	 *  @param sifElement 
	 */
	public SIF_Select( Boolean distinct, String rowCount, SIFSelectElement sifElement ) {
		super( InfraDTD.SIF_SELECT );
		this.setDistinct(distinct);
		this.setRowCount(rowCount);
		this.addSIF_Element( sifElement );
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		StringBuilder b = new StringBuilder();
		b.append( getFieldValue( InfraDTD.SIF_SELECT_DISTINCT ) );
		b.append('.');
		b.append( getFieldValue( InfraDTD.SIF_SELECT_ROWCOUNT ) );
		return b.toString();
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { InfraDTD.SIF_SELECT_DISTINCT, InfraDTD.SIF_SELECT_ROWCOUNT };
	}

	/**
	 *  Gets the value of the <code>Distinct</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Specifies whether query results should return all rows (false) or just distinct ones (true). Rows are distinct if at least one column differs between them."</i><p>
	 *
	 *  @return The <code>Distinct</code> attribute of this object.
	 *  @since 2.0
	 */
	public Boolean getDistinct() { 
		return (Boolean) getSIFSimpleFieldValue( InfraDTD.SIF_SELECT_DISTINCT );
	}

	/**
	 *  Sets the value of the <code>Distinct</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Specifies whether query results should return all rows (false) or just distinct ones (true). Rows are distinct if at least one column differs between them."</i><p>
	 *
	 *  @param value A <code>Boolean</code> object
	 *  @since 2.0
	 */
	public void setDistinct( Boolean value ) { 
		setFieldValue( InfraDTD.SIF_SELECT_DISTINCT, new SIFBoolean( value ), value );
	}

	/**
	 *  Gets the value of the <code>RowCount</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The maximum number of rows to return. If All, return all rows, otherwise return the top rows up to the maximum row count indicated."</i><p>
	 *
	 *  @return The <code>RowCount</code> attribute of this object.
	 *  @since 2.0
	 */
	public String getRowCount() { 
		return (String) getSIFSimpleFieldValue( InfraDTD.SIF_SELECT_ROWCOUNT );
	}

	/**
	 *  Sets the value of the <code>RowCount</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The maximum number of rows to return. If All, return all rows, otherwise return the top rows up to the maximum row count indicated."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.0
	 */
	public void setRowCount( String value ) { 
		setFieldValue( InfraDTD.SIF_SELECT_ROWCOUNT, new SIFString( value ), value );
	}

	/**
	 *  Adds a new <code>&lt;SIF_Element&gt;</code> child element.
	 *
	 *  @param value A <code>SIFSelectElement</code> object
	 *  @since 2.0
	 */
	public void addSIF_Element( SIFSelectElement value ) { 
		addChild( InfraDTD.SIF_SELECT_SIF_ELEMENT, value);
	}

	/**
	 *  Adds a new <code>&lt;SIF_Element&gt;</code> repeatable element.
	 *  This form of <code>setSIF_Element</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setSIF_Element</code>
	 *  that accepts a single <code>SIFSelectElement</code> object.
	 *
	 *  @param alias 
	 *  @param objectName 
	 *  @param value Gets or sets the content value of the &lt;SIFSelectElement&gt; element
	 *  @since 2.0
	 */
	public void addSIF_Element( String alias, String objectName, String value ) {
		addChild( InfraDTD.SIF_SELECT_SIF_ELEMENT, new SIFSelectElement( alias, objectName, value ) );
	}

	/**
	 *  Removes a <code>SIFSelectElement</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param alias Identifies the SIFSelectElement object to remove by its Alias value
	 *  @param objectName Identifies the SIFSelectElement object to remove by its ObjectName value
	 *  @since 2.0
	 */
	public void removeSIF_Element( String alias, String objectName ) { 
		removeChild( InfraDTD.SIF_SELECT_SIF_ELEMENT, new String[] { alias.toString(),objectName.toString() } );
	}

	/**
	 *  Gets a <code>SIFSelectElement</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param alias Identifies the SIFSelectElement object to return by its "Alias" attribute value
	 *  @param objectName Identifies the SIFSelectElement object to return by its "ObjectName" attribute value
	 *  @return A <code>SIFSelectElement</code> object
	 *  @since 2.0
	 */
	public SIFSelectElement getSIF_Element( String alias, String objectName ) { 
		return (SIFSelectElement)getChild( InfraDTD.SIF_SELECT_SIF_ELEMENT, new String[] { alias.toString(),objectName.toString() } );
	}

	/**
	 *  Gets all <code>SIFSelectElement</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>SIFSelectElement</code> objects
	 *  @since 2.0
	 */
	public SIFSelectElement[] getSIF_Elements() {
		List<SIFElement> v = getChildList( InfraDTD.SIF_SELECT_SIF_ELEMENT);
		SIFSelectElement[] cvt = new SIFSelectElement[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>SIFSelectElement</code> objects. All existing 
	 * <code>SIFSelectElement</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>SIFSelectElements</code>.
	 *
	 *  @since 2.0
	 */
	public void setSIF_Elements( SIFSelectElement[] sif_elements ) {
		setChildren( InfraDTD.SIF_SELECT_SIF_ELEMENT, sif_elements );
	}

}
