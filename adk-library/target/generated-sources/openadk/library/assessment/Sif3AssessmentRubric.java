// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.assessment;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  This object represents the scoring rubric used to evaluate responses to open-ended items. Rubrics will define how a student response is to be evaluated and what score values should be applied based on that evaluation. Rubrics can be used by human scorers (teachers or professional scorers) or are used to train artificial intelligence engines. An individual item may have multiple rubrics that are used to evaluate different 'traits' of the response.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.6
 */
public class Sif3AssessmentRubric extends SIFElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public Sif3AssessmentRubric() {
		super( AssessmentDTD.SIF3ASSESSMENTRUBRIC );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId The GUID that uniquely identifies an instance of the object.
	 *  @param rubricName Text name of the subtest
	 */
	public Sif3AssessmentRubric( String refId, String rubricName ) {
		super( AssessmentDTD.SIF3ASSESSMENTRUBRIC );
		this.setRefId(refId);
		this.setRubricName(rubricName);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		StringBuilder b = new StringBuilder();
		b.append( getFieldValue( AssessmentDTD.SIF3ASSESSMENTRUBRIC_REFID ) );
		b.append('.');
		b.append( getFieldValue( AssessmentDTD.SIF3ASSESSMENTRUBRIC_RUBRICNAME ) );
		return b.toString();
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { AssessmentDTD.SIF3ASSESSMENTRUBRIC_REFID, AssessmentDTD.SIF3ASSESSMENTRUBRIC_RUBRICNAME };
	}

	/**
	 *  Gets the value of the <code>&lt;RefId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The GUID that uniquely identifies an instance of the object."</i><p>
	 *
	 *  @return The <code>RefId</code> element of this object.
	 *  @since 2.6
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTRUBRIC_REFID );
	}

	/**
	 *  Sets the value of the <code>&lt;RefId&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The GUID that uniquely identifies an instance of the object."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setRefId( String value ) { 
		setFieldValue( AssessmentDTD.SIF3ASSESSMENTRUBRIC_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;RubricVersion&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Identifies the version of the Rubric that this object represents. Note that new versions of the Rubric must generate new RefIds and therefore a new Rubric object. The format of the numbering system is determined by the assessment provider."</i><p>
	 *
	 *  @return The <code>RubricVersion</code> element of this object.
	 *  @since 2.6
	 */
	public String getRubricVersion() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTRUBRIC_RUBRICVERSION );
	}

	/**
	 *  Sets the value of the <code>&lt;RubricVersion&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Identifies the version of the Rubric that this object represents. Note that new versions of the Rubric must generate new RefIds and therefore a new Rubric object. The format of the numbering system is determined by the assessment provider."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setRubricVersion( String value ) { 
		setFieldValue( AssessmentDTD.SIF3ASSESSMENTRUBRIC_RUBRICVERSION, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;RubricPublishDate&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Identifies the date that this version of the Rubric was published (published means made available for use). If a RubricVersion is provided, then this element should also be provided."</i><p>
	 *
	 *  @return The <code>RubricPublishDate</code> element of this object.
	 *  @since 2.6
	 */
	public Calendar getRubricPublishDate() { 
		return (Calendar) getSIFSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTRUBRIC_RUBRICPUBLISHDATE );
	}

	/**
	 *  Sets the value of the <code>&lt;RubricPublishDate&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Identifies the date that this version of the Rubric was published (published means made available for use). If a RubricVersion is provided, then this element should also be provided."</i><p>
	 *
	 *  @param value A <code>Calendar</code> object
	 *  @since 2.6
	 */
	public void setRubricPublishDate( Calendar value ) { 
		setFieldValue( AssessmentDTD.SIF3ASSESSMENTRUBRIC_RUBRICPUBLISHDATE, new SIFDateTime( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;RubricIdentifiers&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"If the authoring system provides for a unique coding system for subtests then this element is used to store that information."</i><p>
	 *
	 *  @param value A <code>RubricIdentifiers</code> object
	 *  @since 2.6
	 */
	public void setRubricIdentifiers( RubricIdentifiers value ) { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTRUBRIC_RUBRICIDENTIFIERS );
		addChild( AssessmentDTD.SIF3ASSESSMENTRUBRIC_RUBRICIDENTIFIERS, value);
	}

	/**
	 *  Sets the value of the <code>&lt;RubricIdentifiers&gt;</code> child element.
	 *  This form of <code>setRubricIdentifiers</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setRubricIdentifiers</code>
	 *  that accepts a single <code>RubricIdentifiers</code> object.
	 *
	 *  @param rubricIdentifier An internal or natural identifier for the ScoreTable used by the assessment system
	 *  @since 2.6
	 */
	public void setRubricIdentifiers( RubricIdentifier rubricIdentifier ) {
		removeChild( AssessmentDTD.SIF3ASSESSMENTRUBRIC_RUBRICIDENTIFIERS);
		addChild( AssessmentDTD.SIF3ASSESSMENTRUBRIC_RUBRICIDENTIFIERS, new RubricIdentifiers( rubricIdentifier ) );
	}

	/**
	 *  Gets the value of the <code>&lt;RubricIdentifiers&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"If the authoring system provides for a unique coding system for subtests then this element is used to store that information."</i><p>
	 *
	 *  @return A <code>RubricIdentifiers</code> object
	 *  @since 2.6
	 */
	public RubricIdentifiers getRubricIdentifiers() { 
		return (RubricIdentifiers)getChild( AssessmentDTD.SIF3ASSESSMENTRUBRIC_RUBRICIDENTIFIERS);
	}

	/**
	 *  Removes the <code>RubricIdentifiers</code> child element previously created by calling <code>setRubricIdentifiers</code>
	 *
	 *  @since 2.6
	 */
	public void removeRubricIdentifiers() { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTRUBRIC_RUBRICIDENTIFIERS );
	}

	/**
	 *  Gets the value of the <code>&lt;RubricName&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Text name of the subtest"</i><p>
	 *
	 *  @return The <code>RubricName</code> element of this object.
	 *  @since 2.6
	 */
	public String getRubricName() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTRUBRIC_RUBRICNAME );
	}

	/**
	 *  Sets the value of the <code>&lt;RubricName&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Text name of the subtest"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setRubricName( String value ) { 
		setFieldValue( AssessmentDTD.SIF3ASSESSMENTRUBRIC_RUBRICNAME, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;ScoringGuideReference&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The location where the full documentation for the Rubric can be found."</i><p>
	 *
	 *  @return The <code>ScoringGuideReference</code> element of this object.
	 *  @since 2.6
	 */
	public String getScoringGuideReference() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTRUBRIC_SCORINGGUIDEREFERENCE );
	}

	/**
	 *  Sets the value of the <code>&lt;ScoringGuideReference&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The location where the full documentation for the Rubric can be found."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setScoringGuideReference( String value ) { 
		setFieldValue( AssessmentDTD.SIF3ASSESSMENTRUBRIC_SCORINGGUIDEREFERENCE, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;ScoresSif3Rubric&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This list will support the score codes that make up the rubric."</i><p>
	 *
	 *  @param value A <code>ScoresSif3Rubric</code> object
	 *  @since 2.6
	 */
	public void setScoresSif3Rubric( ScoresSif3Rubric value ) { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTRUBRIC_SCORESSIF3RUBRIC );
		addChild( AssessmentDTD.SIF3ASSESSMENTRUBRIC_SCORESSIF3RUBRIC, value);
	}

	/**
	 *  Sets the value of the <code>&lt;ScoresSif3Rubric&gt;</code> child element.
	 *  This form of <code>setScoresSif3Rubric</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setScoresSif3Rubric</code>
	 *  that accepts a single <code>ScoresSif3Rubric</code> object.
	 *
	 *  @param scoreSif3Rubric Provides a wrapper for the attributes of each score code.
	 *  @since 2.6
	 */
	public void setScoresSif3Rubric( ScoreSif3Rubric scoreSif3Rubric ) {
		removeChild( AssessmentDTD.SIF3ASSESSMENTRUBRIC_SCORESSIF3RUBRIC);
		addChild( AssessmentDTD.SIF3ASSESSMENTRUBRIC_SCORESSIF3RUBRIC, new ScoresSif3Rubric( scoreSif3Rubric ) );
	}

	/**
	 *  Gets the value of the <code>&lt;ScoresSif3Rubric&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This list will support the score codes that make up the rubric."</i><p>
	 *
	 *  @return A <code>ScoresSif3Rubric</code> object
	 *  @since 2.6
	 */
	public ScoresSif3Rubric getScoresSif3Rubric() { 
		return (ScoresSif3Rubric)getChild( AssessmentDTD.SIF3ASSESSMENTRUBRIC_SCORESSIF3RUBRIC);
	}

	/**
	 *  Removes the <code>ScoresSif3Rubric</code> child element previously created by calling <code>setScoresSif3Rubric</code>
	 *
	 *  @since 2.6
	 */
	public void removeScoresSif3Rubric() { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTRUBRIC_SCORESSIF3RUBRIC );
	}

}
