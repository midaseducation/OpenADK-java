// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.assessment;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.6
 */
public class TestingStatuses extends SIFKeyedList<TestingStatus>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public TestingStatuses() {
		super( AssessmentDTD.TESTINGSTATUSES );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param testingStatus Records a single student-specific special condition before, during or after the test.
	 */
	public TestingStatuses( TestingStatus testingStatus ) {
		super( AssessmentDTD.TESTINGSTATUSES );
		this.safeAddChild( AssessmentDTD.TESTINGSTATUSES_TESTINGSTATUS, testingStatus );
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( AssessmentDTD.TESTINGSTATUSES_TESTINGSTATUS );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { AssessmentDTD.TESTINGSTATUSES_TESTINGSTATUS };
	}

	/**
	 *  Adds a new <code>&lt;TestingStatus&gt;</code> repeatable element.
	 *  This form of <code>setTestingStatus</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setTestingStatus</code>
	 *  that accepts a single <code>TestingStatus</code> object.
	 *
	 *  @param testingStatusCode A code that identifies the specific testing status. Code values are determined by the testing program.
	 *  @since 2.6
	 */
	public void addTestingStatus( String testingStatusCode ) {
		addChild( AssessmentDTD.TESTINGSTATUSES_TESTINGSTATUS, new TestingStatus( testingStatusCode ) );
	}

	/**
	 *  Removes a <code>TestingStatus</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param testingStatusCode Identifies the TestingStatus object to remove by its TestingStatusCode value
	 *  @since 2.6
	 */
	public void removeTestingStatus( String testingStatusCode ) { 
		removeChild( AssessmentDTD.TESTINGSTATUSES_TESTINGSTATUS, new String[] { testingStatusCode.toString() } );
	}

	/**
	 *  Gets a <code>TestingStatus</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param testingStatusCode Identifies the TestingStatus object to return by its "TestingStatusCode" attribute value
	 *  @return A <code>TestingStatus</code> object
	 *  @since 2.6
	 */
	public TestingStatus getTestingStatus( String testingStatusCode ) { 
		return (TestingStatus)getChild( AssessmentDTD.TESTINGSTATUSES_TESTINGSTATUS, new String[] { testingStatusCode.toString() } );
	}

	/**
	 *  Gets all <code>TestingStatus</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>TestingStatus</code> objects
	 *  @since 2.6
	 */
	public TestingStatus[] getTestingStatuses() {
		List<SIFElement> v = getChildList( AssessmentDTD.TESTINGSTATUSES_TESTINGSTATUS);
		TestingStatus[] cvt = new TestingStatus[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>TestingStatus</code> objects. All existing 
	 * <code>TestingStatus</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>TestingStatuses</code>.
	 *
	 *  @since 2.6
	 */
	public void setTestingStatuses( TestingStatus[] testingstatuses ) {
		setChildren( AssessmentDTD.TESTINGSTATUSES_TESTINGSTATUS, testingstatuses );
	}

}
