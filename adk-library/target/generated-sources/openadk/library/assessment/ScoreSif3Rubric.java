// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.assessment;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.6
 */
public class ScoreSif3Rubric extends SIFKeyedElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public ScoreSif3Rubric() {
		super( AssessmentDTD.SCORESIF3RUBRIC );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param scoreValue Numeric values for the score code. For example a 4 point rubric would typically have the values 1 through 4, plus zero for no score. The non-numeric score codes will likely have a score value of zero.
	 */
	public ScoreSif3Rubric( BigDecimal scoreValue ) {
		super( AssessmentDTD.SCORESIF3RUBRIC );
		this.setScoreValue(scoreValue);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( AssessmentDTD.SCORESIF3RUBRIC_SCOREVALUE );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { AssessmentDTD.SCORESIF3RUBRIC_SCOREVALUE };
	}

	/**
	 *  Gets the value of the <code>&lt;ScoreCode&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Non-numeric score code value. Examples might be: 'BL' = blank 'OT' = off-topic The values for this field are determined by the assessment program."</i><p>
	 *
	 *  @return The <code>ScoreCode</code> element of this object.
	 *  @since 2.6
	 */
	public String getScoreCode() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.SCORESIF3RUBRIC_SCORECODE );
	}

	/**
	 *  Sets the value of the <code>&lt;ScoreCode&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Non-numeric score code value. Examples might be: 'BL' = blank 'OT' = off-topic The values for this field are determined by the assessment program."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setScoreCode( String value ) { 
		setFieldValue( AssessmentDTD.SCORESIF3RUBRIC_SCORECODE, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;ScoreCodeDefinition&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This provides the definition of the score code or value. For example, if the score code is OT, then this can provide the definition of 'Off Topic'."</i><p>
	 *
	 *  @param value A <code>AbstractContentElementType</code> object
	 *  @since 2.6
	 */
	public void setScoreCodeDefinition( AbstractContentElementType value ) { 
		removeChild( AssessmentDTD.SCORESIF3RUBRIC_SCORECODEDEFINITION );
		addChild( AssessmentDTD.SCORESIF3RUBRIC_SCORECODEDEFINITION, value);
	}

	/**
	 *  Sets the value of the <code>&lt;ScoreCodeDefinition&gt;</code> child element.
	 *  This form of <code>setScoreCodeDefinition</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setScoreCodeDefinition</code>
	 *  that accepts a single <code>AbstractContentElementType</code> object.
	 *
	 *  @param mimeType MIME type to indicate the content type.
	 *  @since 2.6
	 */
	public void setScoreCodeDefinition( String mimeType ) {
		removeChild( AssessmentDTD.SCORESIF3RUBRIC_SCORECODEDEFINITION);
		addChild( AssessmentDTD.SCORESIF3RUBRIC_SCORECODEDEFINITION, new AbstractContentElementType( mimeType ) );
	}

	/**
	 *  Gets the value of the <code>&lt;ScoreCodeDefinition&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This provides the definition of the score code or value. For example, if the score code is OT, then this can provide the definition of 'Off Topic'."</i><p>
	 *
	 *  @return An <code>AbstractContentElementType</code> object
	 *  @since 2.6
	 */
	public AbstractContentElementType getScoreCodeDefinition() { 
		return (AbstractContentElementType)getChild( AssessmentDTD.SCORESIF3RUBRIC_SCORECODEDEFINITION);
	}

	/**
	 *  Removes the <code>ScoreCodeDefinition</code> child element previously created by calling <code>setScoreCodeDefinition</code>
	 *
	 *  @since 2.6
	 */
	public void removeScoreCodeDefinition() { 
		removeChild( AssessmentDTD.SCORESIF3RUBRIC_SCORECODEDEFINITION );
	}

	/**
	 *  Gets the value of the <code>&lt;ScoreValue&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Numeric values for the score code. For example a 4 point rubric would typically have the values 1 through 4, plus zero for no score. The non-numeric score codes will likely have a score value of zero."</i><p>
	 *
	 *  @return The <code>ScoreValue</code> element of this object.
	 *  @since 2.6
	 */
	public BigDecimal getScoreValue() { 
		return (BigDecimal) getSIFSimpleFieldValue( AssessmentDTD.SCORESIF3RUBRIC_SCOREVALUE );
	}

	/**
	 *  Sets the value of the <code>&lt;ScoreValue&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Numeric values for the score code. For example a 4 point rubric would typically have the values 1 through 4, plus zero for no score. The non-numeric score codes will likely have a score value of zero."</i><p>
	 *
	 *  @param value A <code>BigDecimal</code> object
	 *  @since 2.6
	 */
	public void setScoreValue( BigDecimal value ) { 
		setFieldValue( AssessmentDTD.SCORESIF3RUBRIC_SCOREVALUE, new SIFDecimal( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;ScoreDescriptions&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This list provides the statements that define the expectations to obtain the score value."</i><p>
	 *
	 *  @param value A <code>ScoreDescriptions</code> object
	 *  @since 2.6
	 */
	public void setScoreDescriptions( ScoreDescriptions value ) { 
		removeChild( AssessmentDTD.SCORESIF3RUBRIC_SCOREDESCRIPTIONS );
		addChild( AssessmentDTD.SCORESIF3RUBRIC_SCOREDESCRIPTIONS, value);
	}

	/**
	 *  Sets the value of the <code>&lt;ScoreDescriptions&gt;</code> child element.
	 *  This form of <code>setScoreDescriptions</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setScoreDescriptions</code>
	 *  that accepts a single <code>ScoreDescriptions</code> object.
	 *
	 *  @param scoreDescription An individual statement that defines the specific expectations that the response must illustrate in order to achieve this score point. This is a complex content type in order to support math or other subjects that may require non-text representations of expectations.
	 *  @since 2.6
	 */
	public void setScoreDescriptions( AbstractContentElementType scoreDescription ) {
		removeChild( AssessmentDTD.SCORESIF3RUBRIC_SCOREDESCRIPTIONS);
		addChild( AssessmentDTD.SCORESIF3RUBRIC_SCOREDESCRIPTIONS, new ScoreDescriptions( scoreDescription ) );
	}

	/**
	 *  Gets the value of the <code>&lt;ScoreDescriptions&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This list provides the statements that define the expectations to obtain the score value."</i><p>
	 *
	 *  @return A <code>ScoreDescriptions</code> object
	 *  @since 2.6
	 */
	public ScoreDescriptions getScoreDescriptions() { 
		return (ScoreDescriptions)getChild( AssessmentDTD.SCORESIF3RUBRIC_SCOREDESCRIPTIONS);
	}

	/**
	 *  Removes the <code>ScoreDescriptions</code> child element previously created by calling <code>setScoreDescriptions</code>
	 *
	 *  @since 2.6
	 */
	public void removeScoreDescriptions() { 
		removeChild( AssessmentDTD.SCORESIF3RUBRIC_SCOREDESCRIPTIONS );
	}

	/**
	 *  Sets the value of the <code>&lt;ScoreComments&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This list provides a set of comment codes that a scorer may use to provide further detail/feedback concerning the score assigned."</i><p>
	 *
	 *  @param value A <code>ScoreComments</code> object
	 *  @since 2.6
	 */
	public void setScoreComments( ScoreComments value ) { 
		removeChild( AssessmentDTD.SCORESIF3RUBRIC_SCORECOMMENTS );
		addChild( AssessmentDTD.SCORESIF3RUBRIC_SCORECOMMENTS, value);
	}

	/**
	 *  Sets the value of the <code>&lt;ScoreComments&gt;</code> child element.
	 *  This form of <code>setScoreComments</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setScoreComments</code>
	 *  that accepts a single <code>ScoreComments</code> object.
	 *
	 *  @param scoreComment Provides a wrapper for the code and description pairs for comment codes.
	 *  @since 2.6
	 */
	public void setScoreComments( ScoreComment scoreComment ) {
		removeChild( AssessmentDTD.SCORESIF3RUBRIC_SCORECOMMENTS);
		addChild( AssessmentDTD.SCORESIF3RUBRIC_SCORECOMMENTS, new ScoreComments( scoreComment ) );
	}

	/**
	 *  Gets the value of the <code>&lt;ScoreComments&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This list provides a set of comment codes that a scorer may use to provide further detail/feedback concerning the score assigned."</i><p>
	 *
	 *  @return A <code>ScoreComments</code> object
	 *  @since 2.6
	 */
	public ScoreComments getScoreComments() { 
		return (ScoreComments)getChild( AssessmentDTD.SCORESIF3RUBRIC_SCORECOMMENTS);
	}

	/**
	 *  Removes the <code>ScoreComments</code> child element previously created by calling <code>setScoreComments</code>
	 *
	 *  @since 2.6
	 */
	public void removeScoreComments() { 
		removeChild( AssessmentDTD.SCORESIF3RUBRIC_SCORECOMMENTS );
	}

}
