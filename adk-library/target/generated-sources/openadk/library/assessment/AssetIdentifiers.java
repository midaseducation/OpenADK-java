// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.assessment;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.6
 */
public class AssetIdentifiers extends SIFKeyedList<AssetIdentifier>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public AssetIdentifiers() {
		super( AssessmentDTD.ASSETIDENTIFIERS );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param assetIdentifier The identifier for this asset
	 */
	public AssetIdentifiers( AssetIdentifier assetIdentifier ) {
		super( AssessmentDTD.ASSETIDENTIFIERS );
		this.safeAddChild( AssessmentDTD.ASSETIDENTIFIERS_ASSETIDENTIFIER, assetIdentifier );
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( AssessmentDTD.ASSETIDENTIFIERS_ASSETIDENTIFIER );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { AssessmentDTD.ASSETIDENTIFIERS_ASSETIDENTIFIER };
	}

	/**
	 *  Adds a new <code>&lt;AssetIdentifier&gt;</code> repeatable element.
	 *  This form of <code>setAssetIdentifier</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setAssetIdentifier</code>
	 *  that accepts a single <code>AssetIdentifier</code> object.
	 *
	 *  @param value Gets or sets the content value of the &lt;AssetIdentifier&gt; element
	 *  @since 2.6
	 */
	public void addAssetIdentifier( String value ) {
		addChild( AssessmentDTD.ASSETIDENTIFIERS_ASSETIDENTIFIER, new AssetIdentifier( value ) );
	}

	/**
	 *  Removes an <code>AssetIdentifier</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param value Identifies the AssetIdentifier object to remove by its Value value
	 *  @since 2.6
	 */
	public void removeAssetIdentifier( String value ) { 
		removeChild( AssessmentDTD.ASSETIDENTIFIERS_ASSETIDENTIFIER, new String[] { value.toString() } );
	}

	/**
	 *  Gets an <code>AssetIdentifier</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param value Identifies the AssetIdentifier object to return by its "Value" attribute value
	 *  @return An <code>AssetIdentifier</code> object
	 *  @since 2.6
	 */
	public AssetIdentifier getAssetIdentifier( String value ) { 
		return (AssetIdentifier)getChild( AssessmentDTD.ASSETIDENTIFIERS_ASSETIDENTIFIER, new String[] { value.toString() } );
	}

	/**
	 *  Gets all <code>AssetIdentifier</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>AssetIdentifier</code> objects
	 *  @since 2.6
	 */
	public AssetIdentifier[] getAssetIdentifiers() {
		List<SIFElement> v = getChildList( AssessmentDTD.ASSETIDENTIFIERS_ASSETIDENTIFIER);
		AssetIdentifier[] cvt = new AssetIdentifier[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>AssetIdentifier</code> objects. All existing 
	 * <code>AssetIdentifier</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>AssetIdentifiers</code>.
	 *
	 *  @since 2.6
	 */
	public void setAssetIdentifiers( AssetIdentifier[] assetidentifiers ) {
		setChildren( AssessmentDTD.ASSETIDENTIFIERS_ASSETIDENTIFIER, assetidentifiers );
	}

}
