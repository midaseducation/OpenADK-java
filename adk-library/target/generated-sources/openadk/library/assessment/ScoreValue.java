// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.assessment;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.6
 */
public class ScoreValue extends SIFKeyedElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public ScoreValue() {
		super( AssessmentDTD.SCOREVALUE );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param fromScoreMetric Indicates the score metric that is being used as the source to derive another score metric. For example, if this score table is using the raw score to derive a scaled score, then this will be the raw score metric (3478).
	 *  @param lowerCut 
	 *  @param upperCut 
	 *  @param derivedValue This is the derived score value when the from-score is within the range specified. The unit used for this value should be represented in the units reported by the ToScoreMetric.
	 */
	public ScoreValue( AssessmentReportingMethod fromScoreMetric, String lowerCut, String upperCut, DerivedValue derivedValue ) {
		super( AssessmentDTD.SCOREVALUE );
		this.setFromScoreMetric( fromScoreMetric );
		this.setLowerCut(lowerCut);
		this.setUpperCut(upperCut);
		this.setDerivedValue(derivedValue);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( AssessmentDTD.SCOREVALUE_FROMSCOREMETRIC );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { AssessmentDTD.SCOREVALUE_FROMSCOREMETRIC };
	}

	/**
	 *  Gets the value of the <code>FromScoreMetric</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Indicates the score metric that is being used as the source to derive another score metric. For example, if this score table is using the raw score to derive a scaled score, then this will be the raw score metric (3478)."</i><p>
	 *
	 *  @return The <code>FromScoreMetric</code> attribute of this object.
	 *  @since 2.6
	 */
	public String getFromScoreMetric() { 
		return getFieldValue( AssessmentDTD.SCOREVALUE_FROMSCOREMETRIC );
	}

	/**
	 *  Sets the value of the <code>FromScoreMetric</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Indicates the score metric that is being used as the source to derive another score metric. For example, if this score table is using the raw score to derive a scaled score, then this will be the raw score metric (3478)."</i><p>
	 *
	 *  @param value A constant defined by the <code>AssessmentReportingMethod</code> class
	 *  @since 2.6
	 */
	public void setFromScoreMetric( AssessmentReportingMethod value ) { 
		setField( AssessmentDTD.SCOREVALUE_FROMSCOREMETRIC, value );
	}

	/**
	 *  Sets the value of the <code>FromScoreMetric</code> attribute as a String.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Indicates the score metric that is being used as the source to derive another score metric. For example, if this score table is using the raw score to derive a scaled score, then this will be the raw score metric (3478)."</i><p>
	 *
	 *  @param value The value as a String
	 *  @since 2.6
	 */
	public void setFromScoreMetric( String value ) { 
		setField( AssessmentDTD.SCOREVALUE_FROMSCOREMETRIC, value );
	}

	/**
	 *  Gets the value of the <code>&lt;LowerCut&gt;</code> element.
	 *
	 *  @return The <code>LowerCut</code> element of this object.
	 *  @since 2.6
	 */
	public String getLowerCut() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.SCOREVALUE_LOWERCUT );
	}

	/**
	 *  Sets the value of the <code>&lt;LowerCut&gt;</code> element.
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setLowerCut( String value ) { 
		setFieldValue( AssessmentDTD.SCOREVALUE_LOWERCUT, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;UpperCut&gt;</code> element.
	 *
	 *  @return The <code>UpperCut</code> element of this object.
	 *  @since 2.6
	 */
	public String getUpperCut() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.SCOREVALUE_UPPERCUT );
	}

	/**
	 *  Sets the value of the <code>&lt;UpperCut&gt;</code> element.
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setUpperCut( String value ) { 
		setFieldValue( AssessmentDTD.SCOREVALUE_UPPERCUT, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;DerivedValue&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This is the derived score value when the from-score is within the range specified. The unit used for this value should be represented in the units reported by the ToScoreMetric."</i><p>
	 *
	 *  @param value A <code>DerivedValue</code> object
	 *  @since 2.6
	 */
	public void setDerivedValue( DerivedValue value ) { 
		removeChild( AssessmentDTD.SCOREVALUE_DERIVEDVALUE );
		addChild( AssessmentDTD.SCOREVALUE_DERIVEDVALUE, value);
	}

	/**
	 *  Sets the value of the <code>&lt;DerivedValue&gt;</code> child element.
	 *  This form of <code>setDerivedValue</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setDerivedValue</code>
	 *  that accepts a single <code>DerivedValue</code> object.
	 *
	 *  @param toScoreMetric Indicates the score metric that is being derived by this table. For example, if this score table is deriving a scaled score, then this will be the scale score metric (3479).
	 *  @param value Gets or sets the content value of the &lt;DerivedValue&gt; element
	 *  @since 2.6
	 */
	public void setDerivedValue( AssessmentReportingMethod toScoreMetric, String value ) {
		removeChild( AssessmentDTD.SCOREVALUE_DERIVEDVALUE);
		addChild( AssessmentDTD.SCOREVALUE_DERIVEDVALUE, new DerivedValue( toScoreMetric, value ) );
	}

	/**
	 *  Gets the value of the <code>&lt;DerivedValue&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This is the derived score value when the from-score is within the range specified. The unit used for this value should be represented in the units reported by the ToScoreMetric."</i><p>
	 *
	 *  @return A <code>DerivedValue</code> object
	 *  @since 2.6
	 */
	public DerivedValue getDerivedValue() { 
		return (DerivedValue)getChild( AssessmentDTD.SCOREVALUE_DERIVEDVALUE);
	}

	/**
	 *  Removes the <code>DerivedValue</code> child element previously created by calling <code>setDerivedValue</code>
	 *
	 *  @since 2.6
	 */
	public void removeDerivedValue() { 
		removeChild( AssessmentDTD.SCOREVALUE_DERIVEDVALUE );
	}

	/**
	 *  Gets the value of the <code>&lt;PassFailIndicator&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"If Pass/Fail indicators are used, then this will indicate if this derived score value represents a Passing or Failing level."</i><p>
	 *
	 *  @return The <code>PassFailIndicator</code> element of this object.
	 *  @since 2.6
	 */
	public String getPassFailIndicator() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.SCOREVALUE_PASSFAILINDICATOR );
	}

	/**
	 *  Sets the value of the <code>&lt;PassFailIndicator&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"If Pass/Fail indicators are used, then this will indicate if this derived score value represents a Passing or Failing level."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setPassFailIndicator( String value ) { 
		setFieldValue( AssessmentDTD.SCOREVALUE_PASSFAILINDICATOR, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;FeedbackList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A list of feedback that can be provided a student when they obtain this score range."</i><p>
	 *
	 *  @param value A <code>FeedbackList</code> object
	 *  @since 2.6
	 */
	public void setFeedbackList( FeedbackList value ) { 
		removeChild( AssessmentDTD.SCOREVALUE_FEEDBACKLIST );
		addChild( AssessmentDTD.SCOREVALUE_FEEDBACKLIST, value);
	}

	/**
	 *  Sets the value of the <code>&lt;FeedbackList&gt;</code> child element.
	 *  This form of <code>setFeedbackList</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setFeedbackList</code>
	 *  that accepts a single <code>FeedbackList</code> object.
	 *
	 *  @param feedback This bundles the feedback elements together.
	 *  @since 2.6
	 */
	public void setFeedbackList( Feedback feedback ) {
		removeChild( AssessmentDTD.SCOREVALUE_FEEDBACKLIST);
		addChild( AssessmentDTD.SCOREVALUE_FEEDBACKLIST, new FeedbackList( feedback ) );
	}

	/**
	 *  Gets the value of the <code>&lt;FeedbackList&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"A list of feedback that can be provided a student when they obtain this score range."</i><p>
	 *
	 *  @return A <code>FeedbackList</code> object
	 *  @since 2.6
	 */
	public FeedbackList getFeedbackList() { 
		return (FeedbackList)getChild( AssessmentDTD.SCOREVALUE_FEEDBACKLIST);
	}

	/**
	 *  Removes the <code>FeedbackList</code> child element previously created by calling <code>setFeedbackList</code>
	 *
	 *  @since 2.6
	 */
	public void removeFeedbackList() { 
		removeChild( AssessmentDTD.SCOREVALUE_FEEDBACKLIST );
	}

}
