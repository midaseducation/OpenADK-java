// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.assessment;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  A psychological construct measured by the assessment. Operationally, a subtest is a class of scores on an assessment. Some assessments may have only one subtest or type of score but most assessments measure more than one psychological construct. The subtest can be based upon items in a section or items that are empirically related. Subtests can also be composites of other subtests that are combined using a particular algorithm. Examples of subtests of an assessment are math total, reading composite, total test, and English composition.<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.6
 */
public class Sif3AssessmentSubTest extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public Sif3AssessmentSubTest() {
		super( ADK.getSIFVersion(), AssessmentDTD.SIF3ASSESSMENTSUBTEST );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId 
	 *  @param subTestName Text name of the subtest
	 */
	public Sif3AssessmentSubTest( String refId, String subTestName ) {
		super( ADK.getSIFVersion(), AssessmentDTD.SIF3ASSESSMENTSUBTEST );
		this.setRefId(refId);
		this.setSubTestName(subTestName);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { AssessmentDTD.SIF3ASSESSMENTSUBTEST_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 2.6
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setRefId( String value ) { 
		setFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;SubTestVersion&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Identifies the version of the subtest that this object instance represents. Note that new versions of subtests must generate new RefIds and therefore a new subtest object instance. The format of the numbering system is determined by the assessment provider."</i><p>
	 *
	 *  @return The <code>SubTestVersion</code> element of this object.
	 *  @since 2.6
	 */
	public String getSubTestVersion() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTVERSION );
	}

	/**
	 *  Sets the value of the <code>&lt;SubTestVersion&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Identifies the version of the subtest that this object instance represents. Note that new versions of subtests must generate new RefIds and therefore a new subtest object instance. The format of the numbering system is determined by the assessment provider."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setSubTestVersion( String value ) { 
		setFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTVERSION, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;SubTestPublishDate&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Identifies the date that this version of the subtest was published (published means made available for use). If a SubTestVersion is provided, then this element should also be provided."</i><p>
	 *
	 *  @return The <code>SubTestPublishDate</code> element of this object.
	 *  @since 2.6
	 */
	public Calendar getSubTestPublishDate() { 
		return (Calendar) getSIFSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTPUBLISHDATE );
	}

	/**
	 *  Sets the value of the <code>&lt;SubTestPublishDate&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Identifies the date that this version of the subtest was published (published means made available for use). If a SubTestVersion is provided, then this element should also be provided."</i><p>
	 *
	 *  @param value A <code>Calendar</code> object
	 *  @since 2.6
	 */
	public void setSubTestPublishDate( Calendar value ) { 
		setFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTPUBLISHDATE, new SIFDateTime( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;SubTestIdentifiers&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"If the authoring system provides for a unique coding system for subtests then this element is used to store that information."</i><p>
	 *
	 *  @param value A <code>SubTestIdentifiers</code> object
	 *  @since 2.6
	 */
	public void setSubTestIdentifiers( SubTestIdentifiers value ) { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTIDENTIFIERS );
		addChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTIDENTIFIERS, value);
	}

	/**
	 *  Sets the value of the <code>&lt;SubTestIdentifiers&gt;</code> child element.
	 *  This form of <code>setSubTestIdentifiers</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setSubTestIdentifiers</code>
	 *  that accepts a single <code>SubTestIdentifiers</code> object.
	 *
	 *  @param subTestIdentifier An internal or natural identifier for the SubTest used by the assessment system
	 *  @since 2.6
	 */
	public void setSubTestIdentifiers( SubTestIdentifier subTestIdentifier ) {
		removeChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTIDENTIFIERS);
		addChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTIDENTIFIERS, new SubTestIdentifiers( subTestIdentifier ) );
	}

	/**
	 *  Gets the value of the <code>&lt;SubTestIdentifiers&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"If the authoring system provides for a unique coding system for subtests then this element is used to store that information."</i><p>
	 *
	 *  @return A <code>SubTestIdentifiers</code> object
	 *  @since 2.6
	 */
	public SubTestIdentifiers getSubTestIdentifiers() { 
		return (SubTestIdentifiers)getChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTIDENTIFIERS);
	}

	/**
	 *  Removes the <code>SubTestIdentifiers</code> child element previously created by calling <code>setSubTestIdentifiers</code>
	 *
	 *  @since 2.6
	 */
	public void removeSubTestIdentifiers() { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTIDENTIFIERS );
	}

	/**
	 *  Gets the value of the <code>&lt;SubTestName&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Text name of the subtest"</i><p>
	 *
	 *  @return The <code>SubTestName</code> element of this object.
	 *  @since 2.6
	 */
	public String getSubTestName() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTNAME );
	}

	/**
	 *  Sets the value of the <code>&lt;SubTestName&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Text name of the subtest"</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setSubTestName( String value ) { 
		setFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTNAME, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;ScoreReporting&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Information about the scores reported about the subtest."</i><p>
	 *
	 *  @param value A <code>ScoreReporting</code> object
	 *  @since 2.6
	 */
	public void setScoreReporting( ScoreReporting value ) { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SCOREREPORTING );
		addChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SCOREREPORTING, value);
	}

	/**
	 *  Sets the value of the <code>&lt;ScoreReporting&gt;</code> child element.
	 *  This form of <code>setScoreReporting</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setScoreReporting</code>
	 *  that accepts a single <code>ScoreReporting</code> object.
	 *
	 *  @param scoreMetric The metric or scale used to report the scores.
	 *  @since 2.6
	 */
	public void setScoreReporting( AssessmentReportingMethod scoreMetric ) {
		removeChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SCOREREPORTING);
		addChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SCOREREPORTING, new ScoreReporting( scoreMetric ) );
	}

	/**
	 *  Gets the value of the <code>&lt;ScoreReporting&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Information about the scores reported about the subtest."</i><p>
	 *
	 *  @return A <code>ScoreReporting</code> object
	 *  @since 2.6
	 */
	public ScoreReporting getScoreReporting() { 
		return (ScoreReporting)getChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SCOREREPORTING);
	}

	/**
	 *  Removes the <code>ScoreReporting</code> child element previously created by calling <code>setScoreReporting</code>
	 *
	 *  @since 2.6
	 */
	public void removeScoreReporting() { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SCOREREPORTING );
	}

	/**
	 *  Sets the value of the <code>&lt;SubTestSubjectAreas&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Content area covered by the subtest."</i><p>
	 *
	 *  @param value A <code>SubjectAreaList</code> object
	 *  @since 2.6
	 */
	public void setSubTestSubjectAreas( SubjectAreaList value ) { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTSUBJECTAREAS );
		addChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTSUBJECTAREAS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;SubTestSubjectAreas&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Content area covered by the subtest."</i><p>
	 *
	 *  @return A <code>SubjectAreaList</code> object
	 *  @since 2.6
	 */
	public SubjectAreaList getSubTestSubjectAreas() { 
		return (SubjectAreaList)getChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTSUBJECTAREAS);
	}

	/**
	 *  Removes the <code>SubTestSubjectAreas</code> child element previously created by calling <code>setSubTestSubjectAreas</code>
	 *
	 *  @since 2.6
	 */
	public void removeSubTestSubjectAreas() { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTSUBJECTAREAS );
	}

	/**
	 *  Sets the value of the <code>&lt;SubTestGradeLevels&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Grade levels for which the subtest scores are valid."</i><p>
	 *
	 *  @param value A <code>GradeLevels</code> object
	 *  @since 2.6
	 */
	public void setSubTestGradeLevels( GradeLevels value ) { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTGRADELEVELS );
		addChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTGRADELEVELS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;SubTestGradeLevels&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Grade levels for which the subtest scores are valid."</i><p>
	 *
	 *  @return A <code>GradeLevels</code> object
	 *  @since 2.6
	 */
	public GradeLevels getSubTestGradeLevels() { 
		return (GradeLevels)getChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTGRADELEVELS);
	}

	/**
	 *  Removes the <code>SubTestGradeLevels</code> child element previously created by calling <code>setSubTestGradeLevels</code>
	 *
	 *  @since 2.6
	 */
	public void removeSubTestGradeLevels() { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTGRADELEVELS );
	}

	/**
	 *  Sets the value of the <code>&lt;AssessmentSubTestRefIds&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"References (possibly recursive) to other SIF AssessmentSubTests. This enables subtests or scores to be composites of other scores creating a parent/child hierachy. If any references are given here, the score is a composite score (it is a parent). The most common composite score is for total test score. The list must be unique. It is also important to note that composite scores may not be simple sums of the subordinate sub test scores."</i><p>
	 *
	 *  @param value A <code>AssessmentSubTestRefIds</code> object
	 *  @since 2.6
	 */
	public void setAssessmentSubTestRefIds( AssessmentSubTestRefIds value ) { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTSUBTESTREFIDS );
		addChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTSUBTESTREFIDS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;AssessmentSubTestRefIds&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"References (possibly recursive) to other SIF AssessmentSubTests. This enables subtests or scores to be composites of other scores creating a parent/child hierachy. If any references are given here, the score is a composite score (it is a parent). The most common composite score is for total test score. The list must be unique. It is also important to note that composite scores may not be simple sums of the subordinate sub test scores."</i><p>
	 *
	 *  @return An <code>AssessmentSubTestRefIds</code> object
	 *  @since 2.6
	 */
	public AssessmentSubTestRefIds getAssessmentSubTestRefIds() { 
		return (AssessmentSubTestRefIds)getChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTSUBTESTREFIDS);
	}

	/**
	 *  Removes the <code>AssessmentSubTestRefIds</code> child element previously created by calling <code>setAssessmentSubTestRefIds</code>
	 *
	 *  @since 2.6
	 */
	public void removeAssessmentSubTestRefIds() { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTSUBTESTREFIDS );
	}

	/**
	 *  Gets the value of the <code>&lt;ContainerOnly&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Indicator describing the purpose of an AssessmentSubTest as being that of a container for the child AssessmentSubTests. There will be no scores within this subtest."</i><p>
	 *
	 *  @return The <code>ContainerOnly</code> element of this object.
	 *  @since 2.6
	 */
	public Boolean getContainerOnly() { 
		return (Boolean) getSIFSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_CONTAINERONLY );
	}

	/**
	 *  Sets the value of the <code>&lt;ContainerOnly&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Indicator describing the purpose of an AssessmentSubTest as being that of a container for the child AssessmentSubTests. There will be no scores within this subtest."</i><p>
	 *
	 *  @param value A <code>Boolean</code> object
	 *  @since 2.6
	 */
	public void setContainerOnly( Boolean value ) { 
		setFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_CONTAINERONLY, new SIFBoolean( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;SubTestTier&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"An integer that defines the level or tier of the score in a multi-level arrangement of composite scores. Zero indicates the highest or root level."</i><p>
	 *
	 *  @return The <code>SubTestTier</code> element of this object.
	 *  @since 2.6
	 */
	public Integer getSubTestTier() { 
		return (Integer) getSIFSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTTIER );
	}

	/**
	 *  Sets the value of the <code>&lt;SubTestTier&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"An integer that defines the level or tier of the score in a multi-level arrangement of composite scores. Zero indicates the highest or root level."</i><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 2.6
	 */
	public void setSubTestTier( Integer value ) { 
		setFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_SUBTESTTIER, new SIFInt( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;LearningStandardItemRefIds&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"References to LearningStandardItems that this subtest measures. The list must be unique. If the subtest measures a higher order standard, then only the parent standard should be identified in the list."</i><p>
	 *
	 *  @param value A <code>LearningStandardItemRefIds</code> object
	 *  @since 2.6
	 */
	public void setLearningStandardItemRefIds( LearningStandardItemRefIds value ) { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_LEARNINGSTANDARDITEMREFIDS );
		addChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_LEARNINGSTANDARDITEMREFIDS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;LearningStandardItemRefIds&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"References to LearningStandardItems that this subtest measures. The list must be unique. If the subtest measures a higher order standard, then only the parent standard should be identified in the list."</i><p>
	 *
	 *  @return A <code>LearningStandardItemRefIds</code> object
	 *  @since 2.6
	 */
	public LearningStandardItemRefIds getLearningStandardItemRefIds() { 
		return (LearningStandardItemRefIds)getChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_LEARNINGSTANDARDITEMREFIDS);
	}

	/**
	 *  Removes the <code>LearningStandardItemRefIds</code> child element previously created by calling <code>setLearningStandardItemRefIds</code>
	 *
	 *  @since 2.6
	 */
	public void removeLearningStandardItemRefIds() { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_LEARNINGSTANDARDITEMREFIDS );
	}

	/**
	 *  Gets the value of the <code>&lt;Abbreviation&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This is the short version of the name of, or code identifying, the assessment subtest. It is often used for quick reference and used in reports."</i><p>
	 *
	 *  @return The <code>Abbreviation</code> element of this object.
	 *  @since 2.6
	 */
	public String getAbbreviation() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ABBREVIATION );
	}

	/**
	 *  Sets the value of the <code>&lt;Abbreviation&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This is the short version of the name of, or code identifying, the assessment subtest. It is often used for quick reference and used in reports."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setAbbreviation( String value ) { 
		setFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ABBREVIATION, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The description element provides an opportunity to pass additional information about the assessment and also be used for describing elements in a test hierarchy."</i><p>
	 *
	 *  @return The <code>Description</code> element of this object.
	 *  @since 2.6
	 */
	public String getDescription() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_DESCRIPTION );
	}

	/**
	 *  Sets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The description element provides an opportunity to pass additional information about the assessment and also be used for describing elements in a test hierarchy."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.6
	 */
	public void setDescription( String value ) { 
		setFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_DESCRIPTION, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;NumberOfItems&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element records the number of items included on the assessment. This number may be different than the possible score."</i><p>
	 *
	 *  @return The <code>NumberOfItems</code> element of this object.
	 *  @since 2.6
	 */
	public Integer getNumberOfItems() { 
		return (Integer) getSIFSimpleFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_NUMBEROFITEMS );
	}

	/**
	 *  Sets the value of the <code>&lt;NumberOfItems&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element records the number of items included on the assessment. This number may be different than the possible score."</i><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 2.6
	 */
	public void setNumberOfItems( Integer value ) { 
		setFieldValue( AssessmentDTD.SIF3ASSESSMENTSUBTEST_NUMBEROFITEMS, new SIFInt( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;AssessmentItems&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This is a list of the items that are used to compute the sub-test score."</i><p>
	 *
	 *  @param value A <code>AssessmentItems</code> object
	 *  @since 2.6
	 */
	public void setAssessmentItems( AssessmentItems value ) { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTITEMS );
		addChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTITEMS, value);
	}

	/**
	 *  Sets the value of the <code>&lt;AssessmentItems&gt;</code> child element.
	 *  This form of <code>setAssessmentItems</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setAssessmentItems</code>
	 *  that accepts a single <code>AssessmentItems</code> object.
	 *
	 *  @param assessmentItemSif3 
	 *  @since 2.6
	 */
	public void setAssessmentItems( AssessmentItemSif3 assessmentItemSif3 ) {
		removeChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTITEMS);
		addChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTITEMS, new AssessmentItems( assessmentItemSif3 ) );
	}

	/**
	 *  Gets the value of the <code>&lt;AssessmentItems&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This is a list of the items that are used to compute the sub-test score."</i><p>
	 *
	 *  @return An <code>AssessmentItems</code> object
	 *  @since 2.6
	 */
	public AssessmentItems getAssessmentItems() { 
		return (AssessmentItems)getChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTITEMS);
	}

	/**
	 *  Removes the <code>AssessmentItems</code> child element previously created by calling <code>setAssessmentItems</code>
	 *
	 *  @since 2.6
	 */
	public void removeAssessmentItems() { 
		removeChild( AssessmentDTD.SIF3ASSESSMENTSUBTEST_ASSESSMENTITEMS );
	}

}
