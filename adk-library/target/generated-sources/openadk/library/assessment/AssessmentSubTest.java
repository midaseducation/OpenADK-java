// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.assessment;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.0
 */
public class AssessmentSubTest extends SIFDataObject
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public AssessmentSubTest() {
		super( ADK.getSIFVersion(), AssessmentDTD.ASSESSMENTSUBTEST );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId The GUID that uniquely identifies an instance of the object.
	 */
	public AssessmentSubTest( String refId ) {
		super( ADK.getSIFVersion(), AssessmentDTD.ASSESSMENTSUBTEST );
		this.setRefId(refId);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( AssessmentDTD.ASSESSMENTSUBTEST_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { AssessmentDTD.ASSESSMENTSUBTEST_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The GUID that uniquely identifies an instance of the object."</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 2.0
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.ASSESSMENTSUBTEST_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"The GUID that uniquely identifies an instance of the object."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.0
	 */
	public void setRefId( String value ) { 
		setFieldValue( AssessmentDTD.ASSESSMENTSUBTEST_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Text name of the subtest."</i><p>
	 *
	 *  @return The <code>Name</code> element of this object.
	 *  @since 2.0
	 */
	public String getName() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.ASSESSMENTSUBTEST_NAME );
	}

	/**
	 *  Sets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Text name of the subtest."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.0
	 */
	public void setName( String value ) { 
		setFieldValue( AssessmentDTD.ASSESSMENTSUBTEST_NAME, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;ScoreRange&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The possible range of scores."</i><p>
	 *
	 *  @param value A <code>ScoreRange</code> object
	 *  @since 2.0
	 */
	public void setScoreRange( ScoreRange value ) { 
		removeChild( AssessmentDTD.ASSESSMENTSUBTEST_SCORERANGE );
		addChild( AssessmentDTD.ASSESSMENTSUBTEST_SCORERANGE, value);
	}

	/**
	 *  Sets the value of the <code>&lt;ScoreRange&gt;</code> child element.
	 *  This form of <code>setScoreRange</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setScoreRange</code>
	 *  that accepts a single <code>ScoreRange</code> object.
	 *
	 *  @param scoreMetric The metric or scale used to report the scores.
	 *  @since 2.0
	 */
	public void setScoreRange( AssessmentReportingMethod scoreMetric ) {
		removeChild( AssessmentDTD.ASSESSMENTSUBTEST_SCORERANGE);
		addChild( AssessmentDTD.ASSESSMENTSUBTEST_SCORERANGE, new ScoreRange( scoreMetric ) );
	}

	/**
	 *  Gets the value of the <code>&lt;ScoreRange&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The possible range of scores."</i><p>
	 *
	 *  @return A <code>ScoreRange</code> object
	 *  @since 2.0
	 */
	public ScoreRange getScoreRange() { 
		return (ScoreRange)getChild( AssessmentDTD.ASSESSMENTSUBTEST_SCORERANGE);
	}

	/**
	 *  Removes the <code>ScoreRange</code> child element previously created by calling <code>setScoreRange</code>
	 *
	 *  @since 2.0
	 */
	public void removeScoreRange() { 
		removeChild( AssessmentDTD.ASSESSMENTSUBTEST_SCORERANGE );
	}

	/**
	 *  Sets the value of the <code>&lt;PerformanceLevels&gt;</code> element.
	 *
	 *  @param value A <code>PerformanceLevels</code> object
	 *  @since 2.0
	 */
	public void setPerformanceLevels( PerformanceLevels value ) { 
		removeChild( AssessmentDTD.ASSESSMENTSUBTEST_PERFORMANCELEVELS );
		addChild( AssessmentDTD.ASSESSMENTSUBTEST_PERFORMANCELEVELS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;PerformanceLevels&gt;</code> element.
	 *
	 *  @return A <code>PerformanceLevels</code> object
	 *  @since 2.0
	 */
	public PerformanceLevels getPerformanceLevels() { 
		return (PerformanceLevels)getChild( AssessmentDTD.ASSESSMENTSUBTEST_PERFORMANCELEVELS);
	}

	/**
	 *  Removes the <code>PerformanceLevels</code> child element previously created by calling <code>setPerformanceLevels</code>
	 *
	 *  @since 2.0
	 */
	public void removePerformanceLevels() { 
		removeChild( AssessmentDTD.ASSESSMENTSUBTEST_PERFORMANCELEVELS );
	}

	/**
	 *  Gets the value of the <code>&lt;SubjectArea&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Content area covered by the score."</i><p>
	 *
	 *  @return The <code>SubjectArea</code> element of this object.
	 *  @since 2.0
	 */
	public String getSubjectArea() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.ASSESSMENTSUBTEST_SUBJECTAREA );
	}

	/**
	 *  Sets the value of the <code>&lt;SubjectArea&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Content area covered by the score."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.0
	 */
	public void setSubjectArea( String value ) { 
		setFieldValue( AssessmentDTD.ASSESSMENTSUBTEST_SUBJECTAREA, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;GradeLevels&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Grade levels for which the score is valid."</i><p>
	 *
	 *  @param value A <code>GradeLevels</code> object
	 *  @since 2.0
	 */
	public void setGradeLevels( GradeLevels value ) { 
		removeChild( AssessmentDTD.ASSESSMENTSUBTEST_GRADELEVELS );
		addChild( AssessmentDTD.ASSESSMENTSUBTEST_GRADELEVELS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;GradeLevels&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Grade levels for which the score is valid."</i><p>
	 *
	 *  @return A <code>GradeLevels</code> object
	 *  @since 2.0
	 */
	public GradeLevels getGradeLevels() { 
		return (GradeLevels)getChild( AssessmentDTD.ASSESSMENTSUBTEST_GRADELEVELS);
	}

	/**
	 *  Removes the <code>GradeLevels</code> child element previously created by calling <code>setGradeLevels</code>
	 *
	 *  @since 2.0
	 */
	public void removeGradeLevels() { 
		removeChild( AssessmentDTD.ASSESSMENTSUBTEST_GRADELEVELS );
	}

	/**
	 *  Sets the value of the <code>&lt;AssessmentSubTestRefIds&gt;</code> element.
	 *
	 *  @param value A <code>AssessmentSubTestRefIds</code> object
	 *  @since 2.0
	 */
	public void setAssessmentSubTestRefIds( AssessmentSubTestRefIds value ) { 
		removeChild( AssessmentDTD.ASSESSMENTSUBTEST_ASSESSMENTSUBTESTREFIDS );
		addChild( AssessmentDTD.ASSESSMENTSUBTEST_ASSESSMENTSUBTESTREFIDS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;AssessmentSubTestRefIds&gt;</code> element.
	 *
	 *  @return An <code>AssessmentSubTestRefIds</code> object
	 *  @since 2.0
	 */
	public AssessmentSubTestRefIds getAssessmentSubTestRefIds() { 
		return (AssessmentSubTestRefIds)getChild( AssessmentDTD.ASSESSMENTSUBTEST_ASSESSMENTSUBTESTREFIDS);
	}

	/**
	 *  Removes the <code>AssessmentSubTestRefIds</code> child element previously created by calling <code>setAssessmentSubTestRefIds</code>
	 *
	 *  @since 2.0
	 */
	public void removeAssessmentSubTestRefIds() { 
		removeChild( AssessmentDTD.ASSESSMENTSUBTEST_ASSESSMENTSUBTESTREFIDS );
	}

	/**
	 *  Gets the value of the <code>&lt;SubTestTier&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"An integer that defines the level or tier of the score in a multi-level arrangement of composite
                scores. Zero indicates the highest or root level.
            "</i><p>
	 *
	 *  @return The <code>SubTestTier</code> element of this object.
	 *  @since 2.0
	 */
	public Integer getSubTestTier() { 
		return (Integer) getSIFSimpleFieldValue( AssessmentDTD.ASSESSMENTSUBTEST_SUBTESTTIER );
	}

	/**
	 *  Sets the value of the <code>&lt;SubTestTier&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"An integer that defines the level or tier of the score in a multi-level arrangement of composite
                scores. Zero indicates the highest or root level.
            "</i><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 2.0
	 */
	public void setSubTestTier( Integer value ) { 
		setFieldValue( AssessmentDTD.ASSESSMENTSUBTEST_SUBTESTTIER, new SIFInt( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;LearningStandardItemRefIds&gt;</code> element.
	 *
	 *  @param value A <code>LearningStandardItemRefIds</code> object
	 *  @since 2.0
	 */
	public void setLearningStandardItemRefIds( LearningStandardItemRefIds value ) { 
		removeChild( AssessmentDTD.ASSESSMENTSUBTEST_LEARNINGSTANDARDITEMREFIDS );
		addChild( AssessmentDTD.ASSESSMENTSUBTEST_LEARNINGSTANDARDITEMREFIDS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;LearningStandardItemRefIds&gt;</code> element.
	 *
	 *  @return A <code>LearningStandardItemRefIds</code> object
	 *  @since 2.0
	 */
	public LearningStandardItemRefIds getLearningStandardItemRefIds() { 
		return (LearningStandardItemRefIds)getChild( AssessmentDTD.ASSESSMENTSUBTEST_LEARNINGSTANDARDITEMREFIDS);
	}

	/**
	 *  Removes the <code>LearningStandardItemRefIds</code> child element previously created by calling <code>setLearningStandardItemRefIds</code>
	 *
	 *  @since 2.0
	 */
	public void removeLearningStandardItemRefIds() { 
		removeChild( AssessmentDTD.ASSESSMENTSUBTEST_LEARNINGSTANDARDITEMREFIDS );
	}

	/**
	 *  Gets the value of the <code>&lt;Abbreviation&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This is the short version of the name of the assessment that is often used for quick reference and
                used in reports.
            "</i><p>
	 *
	 *  @return The <code>Abbreviation</code> element of this object.
	 *  @since 2.4
	 */
	public String getAbbreviation() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.ASSESSMENTSUBTEST_ABBREVIATION );
	}

	/**
	 *  Sets the value of the <code>&lt;Abbreviation&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This is the short version of the name of the assessment that is often used for quick reference and
                used in reports.
            "</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.4
	 */
	public void setAbbreviation( String value ) { 
		setFieldValue( AssessmentDTD.ASSESSMENTSUBTEST_ABBREVIATION, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The description element provides an opportunity to pass additional information about the assessment
                and also be used for describing elements in a test hierarchy.
            "</i><p>
	 *
	 *  @return The <code>Description</code> element of this object.
	 *  @since 2.4
	 */
	public String getDescription() { 
		return (String) getSIFSimpleFieldValue( AssessmentDTD.ASSESSMENTSUBTEST_DESCRIPTION );
	}

	/**
	 *  Sets the value of the <code>&lt;Description&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The description element provides an opportunity to pass additional information about the assessment
                and also be used for describing elements in a test hierarchy.
            "</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.4
	 */
	public void setDescription( String value ) { 
		setFieldValue( AssessmentDTD.ASSESSMENTSUBTEST_DESCRIPTION, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;NumberOfItems&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element records the number of items included on the assessment. This number may be different than
                the possible score.
            "</i><p>
	 *
	 *  @return The <code>NumberOfItems</code> element of this object.
	 *  @since 2.4
	 */
	public Integer getNumberOfItems() { 
		return (Integer) getSIFSimpleFieldValue( AssessmentDTD.ASSESSMENTSUBTEST_NUMBEROFITEMS );
	}

	/**
	 *  Sets the value of the <code>&lt;NumberOfItems&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"This element records the number of items included on the assessment. This number may be different than
                the possible score.
            "</i><p>
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 2.4
	 */
	public void setNumberOfItems( Integer value ) { 
		setFieldValue( AssessmentDTD.ASSESSMENTSUBTEST_NUMBEROFITEMS, new SIFInt( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;ContainerOnly&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Indicator describing the purpose of an AssessmentSubTest as being that of a container for the child
                AssessmentSubTests. There will be no scores within this subtest.
            "</i><p>
	 *
	 *  @return The <code>ContainerOnly</code> element of this object.
	 *  @since 2.4
	 */
	public Boolean getContainerOnly() { 
		return (Boolean) getSIFSimpleFieldValue( AssessmentDTD.ASSESSMENTSUBTEST_CONTAINERONLY );
	}

	/**
	 *  Sets the value of the <code>&lt;ContainerOnly&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"Indicator describing the purpose of an AssessmentSubTest as being that of a container for the child
                AssessmentSubTests. There will be no scores within this subtest.
            "</i><p>
	 *
	 *  @param value A <code>Boolean</code> object
	 *  @since 2.4
	 */
	public void setContainerOnly( Boolean value ) { 
		setFieldValue( AssessmentDTD.ASSESSMENTSUBTEST_CONTAINERONLY, new SIFBoolean( value ), value );
	}

}
