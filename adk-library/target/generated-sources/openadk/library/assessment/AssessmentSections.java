// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.assessment;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.6
 */
public class AssessmentSections extends SIFList<AssessmentSection>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public AssessmentSections() {
		super( AssessmentDTD.ASSESSMENTSECTIONS );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param assessmentSection A single section
	 */
	public AssessmentSections( AssessmentSection assessmentSection ) {
		super( AssessmentDTD.ASSESSMENTSECTIONS );
		this.safeAddChild( AssessmentDTD.ASSESSMENTSECTIONS_ASSESSMENTSECTION, assessmentSection );
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( AssessmentDTD.ASSESSMENTSECTIONS_ASSESSMENTSECTION );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { AssessmentDTD.ASSESSMENTSECTIONS_ASSESSMENTSECTION };
	}

	/**
	 *  Adds a new <code>&lt;AssessmentSection&gt;</code> repeatable element.
	 *  This form of <code>setAssessmentSection</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setAssessmentSection</code>
	 *  that accepts a single <code>AssessmentSection</code> object.
	 *
	 *  @param assessmentSectionRefId The reference to an Assessment Section object.
	 *  @param assessmentSectionSequence A numeric sequence in which the section will be presented to the test taker. This should be a simple integer sequence number (1,2,3, etc.) but may be other values that can be sorted into sequence (e.g., S-A, S-B, S-C, etc).
	 *  @since 2.6
	 */
	public void addAssessmentSection( String assessmentSectionRefId, String assessmentSectionSequence ) {
		addChild( AssessmentDTD.ASSESSMENTSECTIONS_ASSESSMENTSECTION, new AssessmentSection( assessmentSectionRefId, assessmentSectionSequence ) );
	}

	/**
	 *  Removes an <code>AssessmentSection</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param assessmentSectionRefId Identifies the AssessmentSection object to remove by its AssessmentSectionRefId value
	 *  @param assessmentSectionSequence Identifies the AssessmentSection object to remove by its AssessmentSectionSequence value
	 *  @since 2.6
	 */
	public void removeAssessmentSection( String assessmentSectionRefId, String assessmentSectionSequence ) { 
		removeChild( AssessmentDTD.ASSESSMENTSECTIONS_ASSESSMENTSECTION, new String[] { assessmentSectionRefId.toString(),assessmentSectionSequence.toString() } );
	}

	/**
	 *  Gets an <code>AssessmentSection</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param assessmentSectionRefId Identifies the AssessmentSection object to return by its "AssessmentSectionRefId" attribute value
	 *  @param assessmentSectionSequence Identifies the AssessmentSection object to return by its "AssessmentSectionSequence" attribute value
	 *  @return An <code>AssessmentSection</code> object
	 *  @since 2.6
	 */
	public AssessmentSection getAssessmentSection( String assessmentSectionRefId, String assessmentSectionSequence ) { 
		return (AssessmentSection)getChild( AssessmentDTD.ASSESSMENTSECTIONS_ASSESSMENTSECTION, new String[] { assessmentSectionRefId.toString(),assessmentSectionSequence.toString() } );
	}

	/**
	 *  Gets all <code>AssessmentSection</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>AssessmentSection</code> objects
	 *  @since 2.6
	 */
	public AssessmentSection[] getAssessmentSections() {
		List<SIFElement> v = getChildList( AssessmentDTD.ASSESSMENTSECTIONS_ASSESSMENTSECTION);
		AssessmentSection[] cvt = new AssessmentSection[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>AssessmentSection</code> objects. All existing 
	 * <code>AssessmentSection</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>AssessmentSections</code>.
	 *
	 *  @since 2.6
	 */
	public void setAssessmentSections( AssessmentSection[] assessmentsections ) {
		setChildren( AssessmentDTD.ASSESSMENTSECTIONS_ASSESSMENTSECTION, assessmentsections );
	}

}
