// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.assessment;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.6
 */
public class ScoreComments extends SIFList<ScoreComment>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public ScoreComments() {
		super( AssessmentDTD.SCORECOMMENTS );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param scoreComment Provides a wrapper for the code and description pairs for comment codes.
	 */
	public ScoreComments( ScoreComment scoreComment ) {
		super( AssessmentDTD.SCORECOMMENTS );
		this.safeAddChild( AssessmentDTD.SCORECOMMENTS_SCORECOMMENT, scoreComment );
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( AssessmentDTD.SCORECOMMENTS_SCORECOMMENT );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { AssessmentDTD.SCORECOMMENTS_SCORECOMMENT };
	}

	/**
	 *  Adds a new <code>&lt;ScoreComment&gt;</code> repeatable element.
	 *  This form of <code>setScoreComment</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setScoreComment</code>
	 *  that accepts a single <code>ScoreComment</code> object.
	 *
	 *  @param commentCode This is the comment code that is likely entered or selected by the scorer and is provided in data files or reports.
	 *  @param comment A description of the comment code. This can be used to provide additional feedback to the student for the score they received.
	 *  @since 2.6
	 */
	public void addScoreComment( String commentCode, AbstractContentElementType comment ) {
		addChild( AssessmentDTD.SCORECOMMENTS_SCORECOMMENT, new ScoreComment( commentCode, comment ) );
	}

	/**
	 *  Removes a <code>ScoreComment</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param commentCode Identifies the ScoreComment object to remove by its CommentCode value
	 *  @param comment Identifies the ScoreComment object to remove by its Comment value
	 *  @since 2.6
	 */
	public void removeScoreComment( String commentCode, AbstractContentElementType comment ) { 
		removeChild( AssessmentDTD.SCORECOMMENTS_SCORECOMMENT, new String[] { commentCode.toString(),comment.toString() } );
	}

	/**
	 *  Gets a <code>ScoreComment</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param commentCode Identifies the ScoreComment object to return by its "CommentCode" attribute value
	 *  @param comment Identifies the ScoreComment object to return by its "Comment" attribute value
	 *  @return A <code>ScoreComment</code> object
	 *  @since 2.6
	 */
	public ScoreComment getScoreComment( String commentCode, AbstractContentElementType comment ) { 
		return (ScoreComment)getChild( AssessmentDTD.SCORECOMMENTS_SCORECOMMENT, new String[] { commentCode.toString(),comment.toString() } );
	}

	/**
	 *  Gets all <code>ScoreComment</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>ScoreComment</code> objects
	 *  @since 2.6
	 */
	public ScoreComment[] getScoreComments() {
		List<SIFElement> v = getChildList( AssessmentDTD.SCORECOMMENTS_SCORECOMMENT);
		ScoreComment[] cvt = new ScoreComment[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>ScoreComment</code> objects. All existing 
	 * <code>ScoreComment</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>ScoreComments</code>.
	 *
	 *  @since 2.6
	 */
	public void setScoreComments( ScoreComment[] scorecomments ) {
		setChildren( AssessmentDTD.SCORECOMMENTS_SCORECOMMENT, scorecomments );
	}

}
