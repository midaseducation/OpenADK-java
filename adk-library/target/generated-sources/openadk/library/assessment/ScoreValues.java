// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.assessment;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.6
 */
public class ScoreValues extends SIFKeyedList<ScoreValue>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public ScoreValues() {
		super( AssessmentDTD.SCOREVALUES );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param scoreValue 
	 */
	public ScoreValues( ScoreValue scoreValue ) {
		super( AssessmentDTD.SCOREVALUES );
		this.safeAddChild( AssessmentDTD.SCOREVALUES_SCOREVALUE, scoreValue );
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( AssessmentDTD.SCOREVALUES_SCOREVALUE );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { AssessmentDTD.SCOREVALUES_SCOREVALUE };
	}

	/**
	 *  Adds a new <code>&lt;ScoreValue&gt;</code> repeatable element.
	 *  This form of <code>setScoreValue</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setScoreValue</code>
	 *  that accepts a single <code>ScoreValue</code> object.
	 *
	 *  @param fromScoreMetric Indicates the score metric that is being used as the source to derive another score metric. For example, if this score table is using the raw score to derive a scaled score, then this will be the raw score metric (3478).
	 *  @param lowerCut 
	 *  @param upperCut 
	 *  @param derivedValue This is the derived score value when the from-score is within the range specified. The unit used for this value should be represented in the units reported by the ToScoreMetric.
	 *  @since 2.6
	 */
	public void addScoreValue( AssessmentReportingMethod fromScoreMetric, String lowerCut, String upperCut, DerivedValue derivedValue ) {
		addChild( AssessmentDTD.SCOREVALUES_SCOREVALUE, new ScoreValue( fromScoreMetric, lowerCut, upperCut, derivedValue ) );
	}

	/**
	 *  Removes a <code>ScoreValue</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param fromScoreMetric Identifies the ScoreValue object to remove by its FromScoreMetric value
	 *  @since 2.6
	 */
	public void removeScoreValue( AssessmentReportingMethod fromScoreMetric ) { 
		removeChild( AssessmentDTD.SCOREVALUES_SCOREVALUE, new String[] { fromScoreMetric.toString() } );
	}

	/**
	 *  Gets a <code>ScoreValue</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param fromScoreMetric Identifies the ScoreValue object to return by its "FromScoreMetric" attribute value
	 *  @return A <code>ScoreValue</code> object
	 *  @since 2.6
	 */
	public ScoreValue getScoreValue( AssessmentReportingMethod fromScoreMetric ) { 
		return (ScoreValue)getChild( AssessmentDTD.SCOREVALUES_SCOREVALUE, new String[] { fromScoreMetric.toString() } );
	}

	/**
	 *  Gets all <code>ScoreValue</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>ScoreValue</code> objects
	 *  @since 2.6
	 */
	public ScoreValue[] getScoreValues() {
		List<SIFElement> v = getChildList( AssessmentDTD.SCOREVALUES_SCOREVALUE);
		ScoreValue[] cvt = new ScoreValue[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>ScoreValue</code> objects. All existing 
	 * <code>ScoreValue</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>ScoreValues</code>.
	 *
	 *  @since 2.6
	 */
	public void setScoreValues( ScoreValue[] scorevalues ) {
		setChildren( AssessmentDTD.SCOREVALUES_SCOREVALUE, scorevalues );
	}

}
