// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.gradebook;

import openadk.library.*;
import openadk.library.common.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  Indicates whether a percent Mark is accepted (format ##0.00).<p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.0
 */
public class Percentage extends SIFElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public Percentage() {
		super( GradebookDTD.PERCENTAGE );
	}

	/**
	 *  Gets the value of the <code>IsAccepted</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Indicates whether a percent Mark is accepted and is used in Change events to unambiguously signal whether support for the Mark has changed, especially ended."</i><p>
	 *
	 *  @return The <code>IsAccepted</code> attribute of this object.
	 *  @since 2.0
	 */
	public Boolean getIsAccepted() { 
		return (Boolean) getSIFSimpleFieldValue( GradebookDTD.PERCENTAGE_ISACCEPTED );
	}

	/**
	 *  Sets the value of the <code>IsAccepted</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"Indicates whether a percent Mark is accepted and is used in Change events to unambiguously signal whether support for the Mark has changed, especially ended."</i><p>
	 *
	 *  @param value A <code>Boolean</code> object
	 *  @since 2.0
	 */
	public void setIsAccepted( Boolean value ) { 
		setFieldValue( GradebookDTD.PERCENTAGE_ISACCEPTED, new SIFBoolean( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Minimum&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The minimum percent value accepted for this mark. If present, the publisher of this object is required to ensure that any values present in the StudentSectionMarks object will not be lower than this value."</i><p>
	 *
	 *  @return The <code>Minimum</code> element of this object.
	 *  @since 2.0
	 */
	public BigDecimal getMinimum() { 
		return (BigDecimal) getSIFSimpleFieldValue( GradebookDTD.PERCENTAGE_MINIMUM );
	}

	/**
	 *  Sets the value of the <code>&lt;Minimum&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The minimum percent value accepted for this mark. If present, the publisher of this object is required to ensure that any values present in the StudentSectionMarks object will not be lower than this value."</i><p>
	 *
	 *  @param value A <code>BigDecimal</code> object
	 *  @since 2.0
	 */
	public void setMinimum( BigDecimal value ) { 
		setFieldValue( GradebookDTD.PERCENTAGE_MINIMUM, new SIFDecimal( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Maximum&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The maximum percent value accepted for this mark. If present, the publisher of this object is required to ensure that any values present in the StudentSectionMarks object will not be higher than this value."</i><p>
	 *
	 *  @return The <code>Maximum</code> element of this object.
	 *  @since 2.0
	 */
	public BigDecimal getMaximum() { 
		return (BigDecimal) getSIFSimpleFieldValue( GradebookDTD.PERCENTAGE_MAXIMUM );
	}

	/**
	 *  Sets the value of the <code>&lt;Maximum&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The maximum percent value accepted for this mark. If present, the publisher of this object is required to ensure that any values present in the StudentSectionMarks object will not be higher than this value."</i><p>
	 *
	 *  @param value A <code>BigDecimal</code> object
	 *  @since 2.0
	 */
	public void setMaximum( BigDecimal value ) { 
		setFieldValue( GradebookDTD.PERCENTAGE_MAXIMUM, new SIFDecimal( value ), value );
	}

}
