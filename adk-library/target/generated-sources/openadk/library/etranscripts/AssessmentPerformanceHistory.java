// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.etranscripts;

import openadk.library.*;
import openadk.library.common.*;
import openadk.library.gradebook.*;
import openadk.library.student.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.0
 */
public class AssessmentPerformanceHistory extends SIFList<AssessmentHistory>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public AssessmentPerformanceHistory() {
		super( EtranscriptsDTD.ASSESSMENTPERFORMANCEHISTORY );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param assessment 
	 */
	public AssessmentPerformanceHistory( AssessmentHistory assessment ) {
		super( EtranscriptsDTD.ASSESSMENTPERFORMANCEHISTORY );
		this.safeAddChild( EtranscriptsDTD.ASSESSMENTPERFORMANCEHISTORY_ASSESSMENT, assessment );
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( EtranscriptsDTD.ASSESSMENTPERFORMANCEHISTORY_ASSESSMENT );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { EtranscriptsDTD.ASSESSMENTPERFORMANCEHISTORY_ASSESSMENT };
	}

	/**
	 *  Adds a new <code>&lt;Assessment&gt;</code> repeatable element.
	 *  This form of <code>setAssessment</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setAssessment</code>
	 *  that accepts a single <code>AssessmentHistory</code> object.
	 *
	 *  @param name Textual description of assessment.
	 *  @param administrationDate Date the assessment was administered.
	 *  @param studentGradeLevelWhenAssessed Student's grade level when assessed.
	 *  @param testScoreType Type of test score
	 *  @param testScore Test score.
	 *  @since 2.0
	 */
	public void addAssessment( String name, PartialDateType administrationDate, GradeLevel studentGradeLevelWhenAssessed, AssessmentReportingMethod testScoreType, String testScore ) {
		addChild( EtranscriptsDTD.ASSESSMENTPERFORMANCEHISTORY_ASSESSMENT, new AssessmentHistory( name, administrationDate, studentGradeLevelWhenAssessed, testScoreType, testScore ) );
	}

	/**
	 *  Removes an <code>AssessmentHistory</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param name Identifies the AssessmentHistory object to remove by its Name value
	 *  @param administrationDate Identifies the AssessmentHistory object to remove by its AdministrationDate value
	 *  @param studentGradeLevelWhenAssessed Identifies the AssessmentHistory object to remove by its StudentGradeLevelWhenAssessed value
	 *  @param testScoreType Identifies the AssessmentHistory object to remove by its TestScoreType value
	 *  @param testScore Identifies the AssessmentHistory object to remove by its TestScore value
	 *  @since 2.0
	 */
	public void removeAssessment( String name, PartialDateType administrationDate, GradeLevel studentGradeLevelWhenAssessed, AssessmentReportingMethod testScoreType, String testScore ) { 
		removeChild( EtranscriptsDTD.ASSESSMENTPERFORMANCEHISTORY_ASSESSMENT, new String[] { name.toString(),administrationDate.toString(),studentGradeLevelWhenAssessed.toString(),testScoreType.toString(),testScore.toString() } );
	}

	/**
	 *  Gets an <code>AssessmentHistory</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param name Identifies the AssessmentHistory object to return by its "Name" attribute value
	 *  @param administrationDate Identifies the AssessmentHistory object to return by its "AdministrationDate" attribute value
	 *  @param studentGradeLevelWhenAssessed Identifies the AssessmentHistory object to return by its "StudentGradeLevelWhenAssessed" attribute value
	 *  @param testScoreType Identifies the AssessmentHistory object to return by its "TestScoreType" attribute value
	 *  @param testScore Identifies the AssessmentHistory object to return by its "TestScore" attribute value
	 *  @return An <code>AssessmentHistory</code> object
	 *  @since 2.0
	 */
	public AssessmentHistory getAssessment( String name, PartialDateType administrationDate, GradeLevel studentGradeLevelWhenAssessed, AssessmentReportingMethod testScoreType, String testScore ) { 
		return (AssessmentHistory)getChild( EtranscriptsDTD.ASSESSMENTPERFORMANCEHISTORY_ASSESSMENT, new String[] { name.toString(),administrationDate.toString(),studentGradeLevelWhenAssessed.toString(),testScoreType.toString(),testScore.toString() } );
	}

	/**
	 *  Gets all <code>AssessmentHistory</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>AssessmentHistory</code> objects
	 *  @since 2.0
	 */
	public AssessmentHistory[] getAssessments() {
		List<SIFElement> v = getChildList( EtranscriptsDTD.ASSESSMENTPERFORMANCEHISTORY_ASSESSMENT);
		AssessmentHistory[] cvt = new AssessmentHistory[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>AssessmentHistory</code> objects. All existing 
	 * <code>AssessmentHistory</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>AssessmentHistorys</code>.
	 *
	 *  @since 2.0
	 */
	public void setAssessments( AssessmentHistory[] assessments ) {
		setChildren( EtranscriptsDTD.ASSESSMENTPERFORMANCEHISTORY_ASSESSMENT, assessments );
	}

}
