// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.etranscripts;

import openadk.library.*;
import openadk.library.common.*;
import openadk.library.gradebook.*;
import openadk.library.student.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.2
 */
public class AcademicFoci extends SIFKeyedList<AcademicFocus>
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public AcademicFoci() {
		super( EtranscriptsDTD.ACADEMICFOCI );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param academicFocus 
	 */
	public AcademicFoci( AcademicFocus academicFocus ) {
		super( EtranscriptsDTD.ACADEMICFOCI );
		this.safeAddChild( EtranscriptsDTD.ACADEMICFOCI_ACADEMICFOCUS, academicFocus );
	}

	/**
	 *  Adds a new <code>&lt;AcademicFocus&gt;</code> repeatable element.
	 *  This form of <code>setAcademicFocus</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setAcademicFocus</code>
	 *  that accepts a single <code>AcademicFocus</code> object.
	 *
	 *  @param code A code to depict the focus of the educational program (replaces deprecated AcademicTrack.
	 *  @since 2.2
	 */
	public void addAcademicFocus( ProgramTypeCode code ) {
		addChild( EtranscriptsDTD.ACADEMICFOCI_ACADEMICFOCUS, new AcademicFocus( code ) );
	}

	/**
	 *  Removes an <code>AcademicFocus</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param code Identifies the AcademicFocus object to remove by its Code value
	 *  @since 2.2
	 */
	public void removeAcademicFocus( ProgramTypeCode code ) { 
		removeChild( EtranscriptsDTD.ACADEMICFOCI_ACADEMICFOCUS, new String[] { code.toString() } );
	}

	/**
	 *  Gets an <code>AcademicFocus</code> object instance. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @param code Identifies the AcademicFocus object to return by its "Code" attribute value
	 *  @return An <code>AcademicFocus</code> object
	 *  @since 2.2
	 */
	public AcademicFocus getAcademicFocus( ProgramTypeCode code ) { 
		return (AcademicFocus)getChild( EtranscriptsDTD.ACADEMICFOCI_ACADEMICFOCUS, new String[] { code.toString() } );
	}

	/**
	 *  Gets all <code>AcademicFocus</code> object instances. More than one instance can be defined for this object because it is a repeatable field element.
	 *
	 *  @return An array of <code>AcademicFocus</code> objects
	 *  @since 2.2
	 */
	public AcademicFocus[] getAcademicFocuses() {
		List<SIFElement> v = getChildList( EtranscriptsDTD.ACADEMICFOCI_ACADEMICFOCUS);
		AcademicFocus[] cvt = new AcademicFocus[v.size()];
		v.toArray(cvt);
		return cvt;
	}

	/**
	 * Sets an array of <code>AcademicFocus</code> objects. All existing 
	 * <code>AcademicFocus</code> instances 
	 * are removed and replaced with this list. Calling this method with the 
	 * parameter value set to null removes all <code>AcademicFocuses</code>.
	 *
	 *  @since 2.2
	 */
	public void setAcademicFocuses( AcademicFocus[] academicfocuses ) {
		setChildren( EtranscriptsDTD.ACADEMICFOCI_ACADEMICFOCUS, academicfocuses );
	}

}
