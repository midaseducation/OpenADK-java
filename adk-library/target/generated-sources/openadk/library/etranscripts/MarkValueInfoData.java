// THIS FILE WAS AUTO-GENERATED BY ADKGEN -- DO NOT MODIFY!

//
// Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s).
// All rights reserved.
//

package openadk.library.etranscripts;

import openadk.library.*;
import openadk.library.common.*;
import openadk.library.gradebook.*;
import openadk.library.student.*;
import java.math.BigDecimal;
import java.util.*;

/**
 *  <p>
 *
 *  @author Generated by adkgen
 *  @version 2.7
 *  @since 2.0
 */
public class MarkValueInfoData extends SIFKeyedElement
{
	private static final long serialVersionUID = Element.CURRENT_SERIALIZE_VERSION;
	/**
	 *  Constructor
	 */
	public MarkValueInfoData() {
		super( EtranscriptsDTD.MARKVALUEINFODATA );
	}

	/**
	 *  Constructor that accepts values for all mandatory fields
	 *  @param refId ID used internally to StudentAcademicRecord to link marks to their marking systems.
	 */
	public MarkValueInfoData( String refId ) {
		super( EtranscriptsDTD.MARKVALUEINFODATA );
		this.setRefId(refId);
	}

	/**
	 *  Gets the key of this object
	 *  @return The value of the object's Mandatory or Required attribute. If
	 *      an object has more than one such attribute, the key is a period-
	 *      delimited concatenation of the attribute values in sequential order
	 */
	public String getKey() {
		return getFieldValue( EtranscriptsDTD.MARKVALUEINFODATA_REFID );
	}

	/**
	 *  Gets the metadata fields that make up the key of this object
	 *  @return an array of metadata fields that make up the object's key
	 */
	public ElementDef[] getKeyFields() {
		return new ElementDef[] { EtranscriptsDTD.MARKVALUEINFODATA_REFID };
	}

	/**
	 *  Gets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"ID used internally to StudentAcademicRecord to link marks to their marking systems."</i><p>
	 *
	 *  @return The <code>RefId</code> attribute of this object.
	 *  @since 2.0
	 */
	public String getRefId() { 
		return (String) getSIFSimpleFieldValue( EtranscriptsDTD.MARKVALUEINFODATA_REFID );
	}

	/**
	 *  Sets the value of the <code>RefId</code> attribute.
	* <p> The SIF specification defines the meaning of this attribute as: 
	* <i>"ID used internally to StudentAcademicRecord to link marks to their marking systems."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.0
	 */
	public void setRefId( String value ) { 
		setFieldValue( EtranscriptsDTD.MARKVALUEINFODATA_REFID, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The text name of the value list ("Letter Grades", "Letter Grades (+/-)", "ESU", "Pass/Fail", "Override Grades", "Citizenship Comment Codes", etc.)."</i><p>
	 *
	 *  @return The <code>Name</code> element of this object.
	 *  @since 2.0
	 */
	public String getName() { 
		return (String) getSIFSimpleFieldValue( EtranscriptsDTD.MARKVALUEINFODATA_NAME );
	}

	/**
	 *  Sets the value of the <code>&lt;Name&gt;</code> element.
	* <p> The SIF specification defines the meaning of this element as: 
	* <i>"The text name of the value list ("Letter Grades", "Letter Grades (+/-)", "ESU", "Pass/Fail", "Override Grades", "Citizenship Comment Codes", etc.)."</i><p>
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.0
	 */
	public void setName( String value ) { 
		setFieldValue( EtranscriptsDTD.MARKVALUEINFODATA_NAME, new SIFString( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Percentage&gt;</code> element.
	 *
	 *  @return The <code>Percentage</code> element of this object.
	 *  @since 2.0
	 */
	public BigDecimal getPercentage() { 
		return (BigDecimal) getSIFSimpleFieldValue( EtranscriptsDTD.MARKVALUEINFODATA_PERCENTAGE );
	}

	/**
	 *  Sets the value of the <code>&lt;Percentage&gt;</code> element.
	 *
	 *  @param value A <code>BigDecimal</code> object
	 *  @since 2.0
	 */
	public void setPercentage( BigDecimal value ) { 
		setFieldValue( EtranscriptsDTD.MARKVALUEINFODATA_PERCENTAGE, new SIFDecimal( value ), value );
	}

	/**
	 *  Gets the value of the <code>&lt;Numeric&gt;</code> element.
	 *
	 *  @return The <code>Numeric</code> element of this object.
	 *  @since 2.0
	 */
	public Integer getNumeric() { 
		return (Integer) getSIFSimpleFieldValue( EtranscriptsDTD.MARKVALUEINFODATA_NUMERIC );
	}

	/**
	 *  Sets the value of the <code>&lt;Numeric&gt;</code> element.
	 *
	 *  @param value A <code>Integer</code> object
	 *  @since 2.0
	 */
	public void setNumeric( Integer value ) { 
		setFieldValue( EtranscriptsDTD.MARKVALUEINFODATA_NUMERIC, new SIFInt( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;Letter&gt;</code> element.
	 *
	 *  @param value A <code>Letter</code> object
	 *  @since 2.0
	 */
	public void setLetter( Letter value ) { 
		removeChild( EtranscriptsDTD.MARKVALUEINFODATA_LETTER );
		addChild( EtranscriptsDTD.MARKVALUEINFODATA_LETTER, value);
	}

	/**
	 *  Sets the value of the <code>&lt;Letter&gt;</code> child element.
	 *  This form of <code>setLetter</code> is provided as a convenience method
	 *  that is functionally equivalent to the version of <code>setLetter</code>
	 *  that accepts a single <code>Letter</code> object.
	 *
	 *  @param isAccepted Indicates whether a letter Mark is accepted and is used in Change events to unambiguously signal whether support for the Mark has changed, especially ended.
	 *  @since 2.0
	 */
	public void setLetter( Boolean isAccepted ) {
		removeChild( EtranscriptsDTD.MARKVALUEINFODATA_LETTER);
		addChild( EtranscriptsDTD.MARKVALUEINFODATA_LETTER, new Letter( isAccepted ) );
	}

	/**
	 *  Gets the value of the <code>&lt;Letter&gt;</code> element.
	 *
	 *  @return A <code>Letter</code> object
	 *  @since 2.0
	 */
	public Letter getLetter() { 
		return (Letter)getChild( EtranscriptsDTD.MARKVALUEINFODATA_LETTER);
	}

	/**
	 *  Removes the <code>Letter</code> child element previously created by calling <code>setLetter</code>
	 *
	 *  @since 2.0
	 */
	public void removeLetter() { 
		removeChild( EtranscriptsDTD.MARKVALUEINFODATA_LETTER );
	}

	/**
	 *  Gets the value of the <code>&lt;Narrative&gt;</code> element.
	 *
	 *  @return The <code>Narrative</code> element of this object.
	 *  @since 2.0
	 */
	public String getNarrative() { 
		return (String) getSIFSimpleFieldValue( EtranscriptsDTD.MARKVALUEINFODATA_NARRATIVE );
	}

	/**
	 *  Sets the value of the <code>&lt;Narrative&gt;</code> element.
	 *
	 *  @param value A <code>String</code> object
	 *  @since 2.0
	 */
	public void setNarrative( String value ) { 
		setFieldValue( EtranscriptsDTD.MARKVALUEINFODATA_NARRATIVE, new SIFString( value ), value );
	}

	/**
	 *  Sets the value of the <code>&lt;SIF_ExtendedElements&gt;</code> element.
	 *
	 *  @param value A <code>SIF_ExtendedElements</code> object
	 *  @since 2.4
	 */
	public void setSIF_ExtendedElements( SIF_ExtendedElements value ) { 
		removeChild( EtranscriptsDTD.MARKVALUEINFODATA_SIF_EXTENDEDELEMENTS );
		addChild( EtranscriptsDTD.MARKVALUEINFODATA_SIF_EXTENDEDELEMENTS, value);
	}

	/**
	 *  Gets the value of the <code>&lt;SIF_ExtendedElements&gt;</code> element.
	 *
	 *  @return A <code>SIF_ExtendedElements</code> object
	 *  @since 2.4
	 */
	public SIF_ExtendedElements getSIF_ExtendedElements() { 
		return (SIF_ExtendedElements)getChild( EtranscriptsDTD.MARKVALUEINFODATA_SIF_EXTENDEDELEMENTS);
	}

	/**
	 *  Removes the <code>SIF_ExtendedElements</code> child element previously created by calling <code>setSIF_ExtendedElements</code>
	 *
	 *  @since 2.4
	 */
	public void removeSIF_ExtendedElements() { 
		removeChild( EtranscriptsDTD.MARKVALUEINFODATA_SIF_EXTENDEDELEMENTS );
	}

}
